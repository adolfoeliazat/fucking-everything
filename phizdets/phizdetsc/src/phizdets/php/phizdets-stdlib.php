<?php require_once('phi-engine.php'); phiExpressionStatement(new PhiInvocation(new PhiFunctionExpression(null, array(), function () {
  if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('define')), new PhiStringLiteral('function')), new PhiDot(new PhiNameRef('define'), 'amd')))) {
    phiExpressionStatement(new PhiInvocation(new PhiNameRef('define'), array(new PhiStringLiteral('kotlin'), new PhiArrayLiteral(array(new PhiStringLiteral('exports'))), new PhiNameRef('factory'))));
  }
   else {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('exports')), new PhiStringLiteral('object')))) {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('factory'), array(new PhiDot(new PhiNameRef('module'), 'exports'))));
    }
     else {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('root'), 'kotlin'), new PhiObjectLiteral(array())));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('factory'), array(new PhiDot(new PhiNameRef('root'), 'kotlin'))));
    }
  }
}), array(new PhiNameRef('this'), new PhiFunctionExpression(null, array(), function () {
  phiVars(array(array('getPropertyRefClass', new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('obj'), '$metadata$'), new PhiInvocation(new PhiNameRef('getPropertyRefMetadata'), array(new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('setter')), new PhiStringLiteral('function')), new PhiDot(new PhiNameRef('cache'), 'mutable'), new PhiDot(new PhiNameRef('cache'), 'immutable'))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('obj'), 'constructor'), new PhiNameRef('obj')));
    return new PhiNameRef('obj');
  }))));
  phiVars(array(array('getPropertyRefMetadata', new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('cache'), 'value'), null))) {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('cache'), 'value'), new PhiObjectLiteral(array(array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiInvocation(new PhiDot(new PhiNameRef('cache'), 'implementedInterface'), array())))), array(new PhiNameRef('baseClass'), null), array(new PhiNameRef('functions'), new PhiObjectLiteral(array())), array(new PhiNameRef('properties'), new PhiObjectLiteral(array())), array(new PhiNameRef('types'), new PhiObjectLiteral(array())), array(new PhiNameRef('staticMembers'), new PhiObjectLiteral(array()))))));
    }
    return new PhiDot(new PhiNameRef('cache'), 'value');
  }))));
  phiVars(array(array('getObjectHashCode', new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('in', new PhiNameRef('OBJECT_HASH_CODE_PROPERTY_NAME'), new PhiNameRef('obj'))))) {
      phiVars(array(array('hash', new PhiBinaryOperation('|', new PhiBinaryOperation('*', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'random'), array()), new PhiNameRef('POW_2_32')), 0.0))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('obj'), new PhiNameRef('OBJECT_HASH_CODE_PROPERTY_NAME'), new PhiObjectLiteral(array(array(new PhiNameRef('value'), new PhiNameRef('hash')), array(new PhiNameRef('enumerable'), false))))));
    }
    return new PhiBrackets(new PhiNameRef('obj'), new PhiNameRef('OBJECT_HASH_CODE_PROPERTY_NAME'));
  }))));
  phiVars(array(array('getStringHashCode', new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('hash', 0.0)));
    phiVars(array(array('i', 0.0)));
    for (phiVars(array()); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiDot(new PhiNameRef('str'), 'length')); new PhiNameRef('i')++) {
      phiVars(array(array('code', new PhiInvocation(new PhiDot(new PhiNameRef('str'), 'charCodeAt'), array(new PhiNameRef('i'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('hash'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('hash'), 31.0), new PhiNameRef('code')), 0.0)));
    }
    return new PhiNameRef('hash');
  }))));
  phiVars(array(array('imul', new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiBinaryOperation('&', new PhiNameRef('a'), 4.29490176E9), new PhiBinaryOperation('&', new PhiNameRef('b'), 65535.0)), new PhiBinaryOperation('*', new PhiBinaryOperation('&', new PhiNameRef('a'), 65535.0), new PhiBinaryOperation('|', new PhiNameRef('b'), 0.0))), 0.0);
  }))));
  phiVars(array(array('isInheritanceFromInterface', new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('metadata'), null))) {
      return false;
    }
    phiVars(array(array('interfaces', new PhiDot(new PhiNameRef('metadata'), 'interfaces'))));
    phiVars(array(array('i', )));
    for (new PhiBinaryOperation('=', new PhiNameRef('i'), 0.0); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiDot(new PhiNameRef('interfaces'), 'length')); new PhiNameRef('i')++) {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBrackets(new PhiNameRef('interfaces'), new PhiNameRef('i')), new PhiNameRef('iface')))) {
        return true;
      }
    }
    for (new PhiBinaryOperation('=', new PhiNameRef('i'), 0.0); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiDot(new PhiNameRef('interfaces'), 'length')); new PhiNameRef('i')++) {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isInheritanceFromInterface'), array(new PhiDot(new PhiBrackets(new PhiNameRef('interfaces'), new PhiNameRef('i')), '$metadata$'), new PhiNameRef('iface'))))) {
        return true;
      }
    }
    return false;
  }))));
  phiVars(array(array('_', new PhiNameRef('Kotlin'))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'arrayToString'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('['), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'map'), array(new PhiDot(new PhiNameRef('Kotlin'), 'toString'))), 'join'), array(new PhiStringLiteral(', ')))), new PhiStringLiteral(']'));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'arrayDeepToString'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('visited'), new PhiBinaryOperation('||', new PhiNameRef('visited'), new PhiArrayLiteral(array(new PhiNameRef('a'))))));
    return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('['), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'map'), array(new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiNameRef('e'))), new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('visited'), 'indexOf'), array(new PhiNameRef('e'))), 0.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('visited'), 'push'), array(new PhiNameRef('e'))));
        phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayDeepToString'), array(new PhiNameRef('e'), new PhiNameRef('visited'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('visited'), 'pop'), array()));
        return new PhiNameRef('result');
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('e')));
      }
    }))), 'join'), array(new PhiStringLiteral(', ')))), new PhiStringLiteral(']'));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'arrayEquals'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('a'), new PhiNameRef('b')))) {
      return true;
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiNameRef('b')))), new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('a'), 'length'), new PhiDot(new PhiNameRef('b'), 'length'))))) {
      return false;
    }
    phiVars(array(array('i', 0.0)));
    phiVars(array(array('n', new PhiDot(new PhiNameRef('a'), 'length'))));
    for (phiVars(array()); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiNameRef('n')); new PhiNameRef('i')++) {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiBrackets(new PhiNameRef('a'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('b'), new PhiNameRef('i'))))))) {
        return false;
      }
    }
    return true;
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'arrayDeepEquals'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('a'), new PhiNameRef('b')))) {
      return true;
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiNameRef('b')))), new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('a'), 'length'), new PhiDot(new PhiNameRef('b'), 'length'))))) {
      return false;
    }
    phiVars(array(array('i', 0.0)));
    phiVars(array(array('n', new PhiDot(new PhiNameRef('a'), 'length'))));
    for (phiVars(array()); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiNameRef('n')); new PhiNameRef('i')++) {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiBrackets(new PhiNameRef('a'), new PhiNameRef('i')))))) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayDeepEquals'), array(new PhiBrackets(new PhiNameRef('a'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('b'), new PhiNameRef('i'))))))) {
          return false;
        }
      }
       else {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiBrackets(new PhiNameRef('a'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('b'), new PhiNameRef('i'))))))) {
          return false;
        }
      }
    }
    return true;
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'arrayHashCode'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('result', 1.0)));
    phiVars(array(array('i', 0.0)));
    phiVars(array(array('n', new PhiDot(new PhiNameRef('arr'), 'length'))));
    for (phiVars(array()); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiNameRef('n')); new PhiNameRef('i')++) {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiNameRef('result')), 0.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiBrackets(new PhiNameRef('arr'), new PhiNameRef('i'))))), 0.0)));
    }
    return new PhiNameRef('result');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'arrayDeepHashCode'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('result', 1.0)));
    phiVars(array(array('i', 0.0)));
    phiVars(array(array('n', new PhiDot(new PhiNameRef('arr'), 'length'))));
    for (phiVars(array()); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiNameRef('n')); new PhiNameRef('i')++) {
      phiVars(array(array('e', new PhiBrackets(new PhiNameRef('arr'), new PhiNameRef('i')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiNameRef('result')), 0.0), new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiNameRef('e'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayDeepHashCode'), array(new PhiNameRef('e'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiNameRef('e'))))), 0.0)));
    }
    return new PhiNameRef('result');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('array'), 'sort'), array(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveCompareTo'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'getCallableRef'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('f'), 'callableName'), new PhiNameRef('name')));
    return new PhiNameRef('f');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'getPropertyCallableRef'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('getter'), 'get'), new PhiNameRef('getter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('getter'), 'set'), new PhiNameRef('setter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('getter'), 'callableName'), new PhiNameRef('name')));
    return new PhiInvocation(new PhiNameRef('getPropertyRefClass'), array(new PhiNameRef('getter'), new PhiNameRef('setter'), new PhiBrackets(new PhiNameRef('propertyRefClassMetadataCache'), new PhiNameRef('paramCount'))));
  })));
  phiVars(array(array('propertyRefClassMetadataCache', new PhiArrayLiteral(array(new PhiObjectLiteral(array(array(new PhiNameRef('mutable'), new PhiObjectLiteral(array(array(new PhiNameRef('value'), null), array(new PhiNameRef('implementedInterface'), new PhiFunctionExpression(null, array(), function () {
    return new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'reflect'), 'KMutableProperty0');
  }))))), array(new PhiNameRef('immutable'), new PhiObjectLiteral(array(array(new PhiNameRef('value'), null), array(new PhiNameRef('implementedInterface'), new PhiFunctionExpression(null, array(), function () {
    return new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'reflect'), 'KProperty0');
  }))))))), new PhiObjectLiteral(array(array(new PhiNameRef('mutable'), new PhiObjectLiteral(array(array(new PhiNameRef('value'), null), array(new PhiNameRef('implementedInterface'), new PhiFunctionExpression(null, array(), function () {
    return new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'reflect'), 'KMutableProperty1');
  }))))), array(new PhiNameRef('immutable'), new PhiObjectLiteral(array(array(new PhiNameRef('value'), null), array(new PhiNameRef('implementedInterface'), new PhiFunctionExpression(null, array(), function () {
    return new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'reflect'), 'KProperty1');
  }))))))))))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('>>', new PhiBinaryOperation('<<', new PhiBinaryOperation('&', new PhiNameRef('a'), 65535.0), 16.0), 16.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('>>', new PhiBinaryOperation('<<', new PhiBinaryOperation('&', new PhiNameRef('a'), 255.0), 24.0), 24.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('&', new PhiNameRef('a'), 65535.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'numberToLong'), new PhiFunctionExpression(null, array(), function () {
    return new PhiConditional(new PhiBinaryOperation('instanceof', new PhiNameRef('a'), new PhiDot(new PhiNameRef('Kotlin'), 'Long')), new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('a'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'numberToInt'), new PhiFunctionExpression(null, array(), function () {
    return new PhiConditional(new PhiBinaryOperation('instanceof', new PhiNameRef('a'), new PhiDot(new PhiNameRef('Kotlin'), 'Long')), new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'toInt'), array()), new PhiBinaryOperation('|', new PhiNameRef('a'), 0.0));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'numberToShort'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'numberToInt'), array(new PhiNameRef('a')))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'numberToByte'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'numberToInt'), array(new PhiNameRef('a')))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'numberToDouble'), new PhiFunctionExpression(null, array(), function () {
    return new PhiPrefixOperation('+', new PhiNameRef('a'));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'numberToChar'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'numberToInt'), array(new PhiNameRef('a')))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('a'), null))) {
      return new PhiNameRef('a');
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('instanceof', new PhiNameRef('a'), new PhiDot(new PhiNameRef('Kotlin'), 'BoxedChar')))) {
      return new PhiNameRef('a');
    }
    return new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'BoxedChar'), array(new PhiNameRef('a')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('a'), null))) {
      return new PhiNameRef('a');
    }
    return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(new PhiNameRef('a')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'equals'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('obj1'), null))) {
      return new PhiBinaryOperation('==', new PhiNameRef('obj2'), null);
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('obj2'), null))) {
      return false;
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiPrefixOperation('typeof', new PhiNameRef('obj1')), new PhiStringLiteral('object')), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiDot(new PhiNameRef('obj1'), 'equals')), new PhiStringLiteral('function'))))) {
      return new PhiInvocation(new PhiDot(new PhiNameRef('obj1'), 'equals'), array(new PhiNameRef('obj2')));
    }
    return new PhiBinaryOperation('===', new PhiNameRef('obj1'), new PhiNameRef('obj2'));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('obj'), null))) {
      return 0.0;
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiStringLiteral('function'), new PhiPrefixOperation('typeof', new PhiDot(new PhiNameRef('obj'), 'hashCode'))))) {
      return new PhiInvocation(new PhiDot(new PhiNameRef('obj'), 'hashCode'), array());
    }
    phiVars(array(array('objType', new PhiPrefixOperation('typeof', new PhiNameRef('obj')))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiStringLiteral('object'), new PhiNameRef('objType')), new PhiBinaryOperation('==', new PhiStringLiteral('function'), new PhiNameRef('objType'))))) {
      return new PhiInvocation(new PhiNameRef('getObjectHashCode'), array(new PhiNameRef('obj')));
    }
     else {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiStringLiteral('number'), new PhiNameRef('objType')))) {
        return new PhiBinaryOperation('|', new PhiNameRef('obj'), 0.0);
      }
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiStringLiteral('boolean'), new PhiNameRef('objType')))) {
      return new PhiInvocation(new PhiNameRef('Number'), array(new PhiNameRef('obj')));
    }
    phiVars(array(array('str', new PhiInvocation(new PhiNameRef('String'), array(new PhiNameRef('obj'))))));
    return new PhiInvocation(new PhiNameRef('getStringHashCode'), array(new PhiNameRef('str')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'toString'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('o'), null))) {
      return new PhiStringLiteral('null');
    }
     else {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiNameRef('o'))))) {
        return new PhiStringLiteral('[...]');
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiNameRef('o'), 'toString'), array());
      }
    }
  })));
  phiVars(array(array('POW_2_32', 4.294967296E9)));
  phiVars(array(array('OBJECT_HASH_CODE_PROPERTY_NAME', new PhiStringLiteral('kotlinHashCodeValue$'))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'identityHashCode'), new PhiNameRef('getObjectHashCode')));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'Long'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'low_'), new PhiBinaryOperation('|', new PhiNameRef('low'), 0.0)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiBinaryOperation('|', new PhiNameRef('high'), 0.0)));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'IntCache_'), new PhiObjectLiteral(array())));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('<=', new PhiPrefixOperation('-', 128.0), new PhiNameRef('value')), new PhiBinaryOperation('<', new PhiNameRef('value'), 128.0)))) {
      phiVars(array(array('cachedObj', new PhiBrackets(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'IntCache_'), new PhiNameRef('value')))));
      if (phiEvaluateToBoolean(new PhiNameRef('cachedObj'))) {
        return new PhiNameRef('cachedObj');
      }
    }
    phiVars(array(array('obj', new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(new PhiBinaryOperation('|', new PhiNameRef('value'), 0.0), new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('value'), 0.0), new PhiPrefixOperation('-', 1.0), 0.0))))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('<=', new PhiPrefixOperation('-', 128.0), new PhiNameRef('value')), new PhiBinaryOperation('<', new PhiNameRef('value'), 128.0)))) {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'IntCache_'), new PhiNameRef('value')), new PhiNameRef('obj')));
    }
    return new PhiNameRef('obj');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiInvocation(new PhiNameRef('isNaN'), array(new PhiNameRef('value'))), new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isFinite'), array(new PhiNameRef('value'))))))) {
      return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO');
    }
     else {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiNameRef('value'), new PhiPrefixOperation('-', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_63_DBL_'))))) {
        return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE');
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiBinaryOperation('+', new PhiNameRef('value'), 1.0), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_63_DBL_')))) {
          return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MAX_VALUE');
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('value'), 0.0))) {
            return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiPrefixOperation('-', new PhiNameRef('value')))), 'negate'), array());
          }
           else {
            return new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('%', new PhiNameRef('value'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_')), 0.0), new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiNameRef('value'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_')), 0.0)));
          }
        }
      }
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), new PhiFunctionExpression(null, array(), function () {
    return new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(new PhiNameRef('lowBits'), new PhiNameRef('highBits')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromString'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('str'), 'length'), 0.0))) {
      phiThrow(new PhiInvocation(new PhiNameRef('Error'), array(new PhiStringLiteral('number format error: empty string'))));
    }
    phiVars(array(array('radix', new PhiBinaryOperation('||', new PhiNameRef('opt_radix'), 10.0))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('radix'), 2.0), new PhiBinaryOperation('<', 36.0, new PhiNameRef('radix'))))) {
      phiThrow(new PhiInvocation(new PhiNameRef('Error'), array(new PhiBinaryOperation('+', new PhiStringLiteral('radix out of range: '), new PhiNameRef('radix')))));
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiInvocation(new PhiDot(new PhiNameRef('str'), 'charAt'), array(0.0)), new PhiStringLiteral('-')))) {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromString'), array(new PhiInvocation(new PhiDot(new PhiNameRef('str'), 'substring'), array(1.0)), new PhiNameRef('radix'))), 'negate'), array());
    }
     else {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('str'), 'indexOf'), array(new PhiStringLiteral('-'))), 0.0))) {
        phiThrow(new PhiInvocation(new PhiNameRef('Error'), array(new PhiBinaryOperation('+', new PhiStringLiteral('number format error: interior "-" character: '), new PhiNameRef('str')))));
      }
    }
    phiVars(array(array('radixToPower', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'pow'), array(new PhiNameRef('radix'), 8.0)))))));
    phiVars(array(array('result', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))));
    phiVars(array(array('i', 0.0)));
    for (phiVars(array()); new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiDot(new PhiNameRef('str'), 'length')); new PhiBinaryOperation('+=', new PhiNameRef('i'), 8.0)) {
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(8.0, new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('str'), 'length'), new PhiNameRef('i')))))));
      phiVars(array(array('value', new PhiInvocation(new PhiNameRef('parseInt'), array(new PhiInvocation(new PhiDot(new PhiNameRef('str'), 'substring'), array(new PhiNameRef('i'), new PhiBinaryOperation('+', new PhiNameRef('i'), new PhiNameRef('size')))), new PhiNameRef('radix'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('size'), 8.0))) {
        phiVars(array(array('power', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'pow'), array(new PhiNameRef('radix'), new PhiNameRef('size'))))))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'multiply'), array(new PhiNameRef('power'))), 'add'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('value')))))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'multiply'), array(new PhiNameRef('radixToPower')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('value')))))));
      }
    }
    return new PhiNameRef('result');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_16_DBL_'), new PhiBinaryOperation('<<', 1.0, 16.0)));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_24_DBL_'), new PhiBinaryOperation('<<', 1.0, 24.0)));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_'), new PhiBinaryOperation('*', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_16_DBL_'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_16_DBL_'))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_31_DBL_'), new PhiBinaryOperation('/', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_'), 2.0)));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_48_DBL_'), new PhiBinaryOperation('*', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_16_DBL_'))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_64_DBL_'), new PhiBinaryOperation('*', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_'))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_63_DBL_'), new PhiBinaryOperation('/', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_64_DBL_'), 2.0)));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiPrefixOperation('-', 1.0)))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MAX_VALUE'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('|', 4.294967295E9, 0.0), new PhiBinaryOperation('|', 2.147483647E9, 0.0)))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(0.0, new PhiBinaryOperation('|', 2.147483648E9, 0.0)))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_24_'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiBinaryOperation('<<', 1.0, 24.0)))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'toInt'), new PhiFunctionExpression(null, array(), function () {
    return new PhiDot(new PhiNameRef('this'), 'low_');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'toNumber'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_')), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'getLowBitsUnsigned'), array()));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('^', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiNameRef('this'), 'low_'));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('radix', new PhiBinaryOperation('||', new PhiNameRef('opt_radix'), 10.0))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('radix'), 2.0), new PhiBinaryOperation('<', 36.0, new PhiNameRef('radix'))))) {
      phiThrow(new PhiInvocation(new PhiNameRef('Error'), array(new PhiBinaryOperation('+', new PhiStringLiteral('radix out of range: '), new PhiNameRef('radix')))));
    }
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isZero'), array()))) {
      return new PhiStringLiteral('0');
    }
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isNegative'), array()))) {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
        phiVars(array(array('radixLong', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('radix'))))));
        phiVars(array(array('div', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'div'), array(new PhiNameRef('radixLong'))))));
        phiVars(array(array('rem', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('div'), 'multiply'), array(new PhiNameRef('radixLong'))), 'subtract'), array(new PhiNameRef('this'))))));
        return new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('div'), 'toString'), array(new PhiNameRef('radix'))), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'toInt'), array()), 'toString'), array(new PhiNameRef('radix'))));
      }
       else {
        return new PhiBinaryOperation('+', new PhiStringLiteral('-'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'negate'), array()), 'toString'), array(new PhiNameRef('radix'))));
      }
    }
    phiVars(array(array('radixToPower', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'pow'), array(new PhiNameRef('radix'), 6.0)))))));
    phiVars(array(array('rem', new PhiNameRef('this'))));
    phiVars(array(array('result', new PhiStringLiteral(''))));
    while (true) {
      phiVars(array(array('remDiv', new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'div'), array(new PhiNameRef('radixToPower'))))));
      phiVars(array(array('intval', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiNameRef('remDiv'), 'multiply'), array(new PhiNameRef('radixToPower'))))), 'toInt'), array()))));
      phiVars(array(array('digits', new PhiInvocation(new PhiDot(new PhiNameRef('intval'), 'toString'), array(new PhiNameRef('radix'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('rem'), new PhiNameRef('remDiv')));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'isZero'), array()))) {
        return new PhiBinaryOperation('+', new PhiNameRef('digits'), new PhiNameRef('result'));
      }
       else {
        while (new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('digits'), 'length'), 6.0)) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('digits'), new PhiBinaryOperation('+', new PhiStringLiteral('0'), new PhiNameRef('digits'))));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral(''), new PhiNameRef('digits')), new PhiNameRef('result'))));
      }
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'getHighBits'), new PhiFunctionExpression(null, array(), function () {
    return new PhiDot(new PhiNameRef('this'), 'high_');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'getLowBits'), new PhiFunctionExpression(null, array(), function () {
    return new PhiDot(new PhiNameRef('this'), 'low_');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'getLowBitsUnsigned'), new PhiFunctionExpression(null, array(), function () {
    return new PhiConditional(new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'low_'), 0.0), new PhiDot(new PhiNameRef('this'), 'low_'), new PhiBinaryOperation('+', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_32_DBL_'), new PhiDot(new PhiNameRef('this'), 'low_')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'getNumBitsAbs'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isNegative'), array()))) {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
        return 64.0;
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'negate'), array()), 'getNumBitsAbs'), array());
      }
    }
     else {
      phiVars(array(array('val', new PhiConditional(new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('this'), 'high_'), 0.0), new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiNameRef('this'), 'low_')))));
      phiVars(array(array('bit', 31.0)));
      for (phiVars(array()); new PhiBinaryOperation('>', new PhiNameRef('bit'), 0.0); new PhiNameRef('bit')--) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('&', new PhiNameRef('val'), new PhiBinaryOperation('<<', 1.0, new PhiNameRef('bit'))), 0.0))) {
          break;
        }
      }
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('this'), 'high_'), 0.0), new PhiBinaryOperation('+', new PhiNameRef('bit'), 33.0), new PhiBinaryOperation('+', new PhiNameRef('bit'), 1.0));
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'isZero'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'high_'), 0.0), new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'low_'), 0.0));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'isNegative'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'high_'), 0.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'isOdd'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('==', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('this'), 'low_'), 1.0), 1.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'equalsLong'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiNameRef('other'), 'high_')), new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'low_'), new PhiDot(new PhiNameRef('other'), 'low_')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'notEqualsLong'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('||', new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiNameRef('other'), 'high_')), new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('this'), 'low_'), new PhiDot(new PhiNameRef('other'), 'low_')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'lessThan'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'compare'), array(new PhiNameRef('other'))), 0.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'lessThanOrEqual'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'compare'), array(new PhiNameRef('other'))), 0.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'greaterThan'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'compare'), array(new PhiNameRef('other'))), 0.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'greaterThanOrEqual'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'compare'), array(new PhiNameRef('other'))), 0.0);
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'equalsLong'), array(new PhiNameRef('other'))))) {
      return 0.0;
    }
    phiVars(array(array('thisNeg', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isNegative'), array()))));
    phiVars(array(array('otherNeg', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isNegative'), array()))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiNameRef('thisNeg'), new PhiPrefixOperation('!', new PhiNameRef('otherNeg'))))) {
      return new PhiPrefixOperation('-', 1.0);
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiNameRef('thisNeg')), new PhiNameRef('otherNeg')))) {
      return 1.0;
    }
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'subtract'), array(new PhiNameRef('other'))), 'isNegative'), array()))) {
      return new PhiPrefixOperation('-', 1.0);
    }
     else {
      return 1.0;
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'negate'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
      return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE');
    }
     else {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'not'), array()), 'add'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE')));
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'add'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('a48', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('this'), 'high_'), 16.0))));
    phiVars(array(array('a32', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('this'), 'high_'), 65535.0))));
    phiVars(array(array('a16', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('this'), 'low_'), 16.0))));
    phiVars(array(array('a00', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('this'), 'low_'), 65535.0))));
    phiVars(array(array('b48', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('other'), 'high_'), 16.0))));
    phiVars(array(array('b32', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('other'), 'high_'), 65535.0))));
    phiVars(array(array('b16', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('other'), 'low_'), 16.0))));
    phiVars(array(array('b00', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('other'), 'low_'), 65535.0))));
    phiVars(array(array('c48', 0.0)));
    phiVars(array(array('c32', 0.0)));
    phiVars(array(array('c16', 0.0)));
    phiVars(array(array('c00', 0.0)));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c00'), new PhiBinaryOperation('+', new PhiNameRef('a00'), new PhiNameRef('b00'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c16'), new PhiBinaryOperation('>>>', new PhiNameRef('c00'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c00'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c16'), new PhiBinaryOperation('+', new PhiNameRef('a16'), new PhiNameRef('b16'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c32'), new PhiBinaryOperation('>>>', new PhiNameRef('c16'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c16'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c32'), new PhiBinaryOperation('+', new PhiNameRef('a32'), new PhiNameRef('b32'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c48'), new PhiBinaryOperation('>>>', new PhiNameRef('c32'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c32'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c48'), new PhiBinaryOperation('+', new PhiNameRef('a48'), new PhiNameRef('b48'))));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c48'), 65535.0));
    return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('<<', new PhiNameRef('c16'), 16.0), new PhiNameRef('c00')), new PhiBinaryOperation('|', new PhiBinaryOperation('<<', new PhiNameRef('c48'), 16.0), new PhiNameRef('c32'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'subtract'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'add'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'negate'), array())));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'multiply'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isZero'), array()))) {
      return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO');
    }
     else {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isZero'), array()))) {
        return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO');
      }
    }
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isOdd'), array()), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'));
    }
     else {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
        return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isOdd'), array()), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'));
      }
    }
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isNegative'), array()))) {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isNegative'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'negate'), array()), 'multiply'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'negate'), array())));
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'negate'), array()), 'multiply'), array(new PhiNameRef('other'))), 'negate'), array());
      }
    }
     else {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isNegative'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'multiply'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'negate'), array()))), 'negate'), array());
      }
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'lessThan'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_24_'))), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'lessThan'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'TWO_PWR_24_')))))) {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiBinaryOperation('*', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'toNumber'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'toNumber'), array()))));
    }
    phiVars(array(array('a48', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('this'), 'high_'), 16.0))));
    phiVars(array(array('a32', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('this'), 'high_'), 65535.0))));
    phiVars(array(array('a16', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('this'), 'low_'), 16.0))));
    phiVars(array(array('a00', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('this'), 'low_'), 65535.0))));
    phiVars(array(array('b48', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('other'), 'high_'), 16.0))));
    phiVars(array(array('b32', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('other'), 'high_'), 65535.0))));
    phiVars(array(array('b16', new PhiBinaryOperation('>>>', new PhiDot(new PhiNameRef('other'), 'low_'), 16.0))));
    phiVars(array(array('b00', new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('other'), 'low_'), 65535.0))));
    phiVars(array(array('c48', 0.0)));
    phiVars(array(array('c32', 0.0)));
    phiVars(array(array('c16', 0.0)));
    phiVars(array(array('c00', 0.0)));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c00'), new PhiBinaryOperation('*', new PhiNameRef('a00'), new PhiNameRef('b00'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c16'), new PhiBinaryOperation('>>>', new PhiNameRef('c00'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c00'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c16'), new PhiBinaryOperation('*', new PhiNameRef('a16'), new PhiNameRef('b00'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c32'), new PhiBinaryOperation('>>>', new PhiNameRef('c16'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c16'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c16'), new PhiBinaryOperation('*', new PhiNameRef('a00'), new PhiNameRef('b16'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c32'), new PhiBinaryOperation('>>>', new PhiNameRef('c16'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c16'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c32'), new PhiBinaryOperation('*', new PhiNameRef('a32'), new PhiNameRef('b00'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c48'), new PhiBinaryOperation('>>>', new PhiNameRef('c32'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c32'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c32'), new PhiBinaryOperation('*', new PhiNameRef('a16'), new PhiNameRef('b16'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c48'), new PhiBinaryOperation('>>>', new PhiNameRef('c32'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c32'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c32'), new PhiBinaryOperation('*', new PhiNameRef('a00'), new PhiNameRef('b32'))));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c48'), new PhiBinaryOperation('>>>', new PhiNameRef('c32'), 16.0)));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c32'), 65535.0));
    phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('c48'), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('a48'), new PhiNameRef('b00')), new PhiBinaryOperation('*', new PhiNameRef('a32'), new PhiNameRef('b16'))), new PhiBinaryOperation('*', new PhiNameRef('a16'), new PhiNameRef('b32'))), new PhiBinaryOperation('*', new PhiNameRef('a00'), new PhiNameRef('b48')))));
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('c48'), 65535.0));
    return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('<<', new PhiNameRef('c16'), 16.0), new PhiNameRef('c00')), new PhiBinaryOperation('|', new PhiBinaryOperation('<<', new PhiNameRef('c48'), 16.0), new PhiNameRef('c32'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'div'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isZero'), array()))) {
      phiThrow(new PhiInvocation(new PhiNameRef('Error'), array(new PhiStringLiteral('division by zero'))));
    }
     else {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isZero'), array()))) {
        return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO');
      }
    }
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE'))), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')))))) {
        return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE');
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
          return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE');
        }
         else {
          phiVars(array(array('halfThis', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'shiftRight'), array(1.0)))));
          phiVars(array(array('approx', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('halfThis'), 'div'), array(new PhiNameRef('other'))), 'shiftLeft'), array(1.0)))));
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('approx'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))))) {
            return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isNegative'), array()), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE'));
          }
           else {
            phiVars(array(array('rem', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'multiply'), array(new PhiNameRef('approx'))))))));
            phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('approx'), 'add'), array(new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'div'), array(new PhiNameRef('other'))))))));
            return new PhiNameRef('result');
          }
        }
      }
    }
     else {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'equalsLong'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE'))))) {
        return new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO');
      }
    }
    if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isNegative'), array()))) {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isNegative'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'negate'), array()), 'div'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'negate'), array())));
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'negate'), array()), 'div'), array(new PhiNameRef('other'))), 'negate'), array());
      }
    }
     else {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isNegative'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'div'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'negate'), array()))), 'negate'), array());
      }
    }
    phiVars(array(array('res', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))));
    phiVars(array(array('rem', new PhiNameRef('this'))));
    while (new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'greaterThanOrEqual'), array(new PhiNameRef('other')))) {
      phiVars(array(array('approx', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(1.0, new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'floor'), array(new PhiBinaryOperation('/', new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'toNumber'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'toNumber'), array())))))))));
      phiVars(array(array('log2', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'ceil'), array(new PhiBinaryOperation('/', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'log'), array(new PhiNameRef('approx'))), new PhiDot(new PhiNameRef('Math'), 'LN2')))))));
      phiVars(array(array('delta', new PhiConditional(new PhiBinaryOperation('<=', new PhiNameRef('log2'), 48.0), 1.0, new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'pow'), array(2.0, new PhiBinaryOperation('-', new PhiNameRef('log2'), 48.0)))))));
      phiVars(array(array('approxRes', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('approx'))))));
      phiVars(array(array('approxRem', new PhiInvocation(new PhiDot(new PhiNameRef('approxRes'), 'multiply'), array(new PhiNameRef('other'))))));
      while (new PhiBinaryOperation('||', new PhiInvocation(new PhiDot(new PhiNameRef('approxRem'), 'isNegative'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('approxRem'), 'greaterThan'), array(new PhiNameRef('rem'))))) {
        phiExpressionStatement(new PhiBinaryOperation('-=', new PhiNameRef('approx'), new PhiNameRef('delta')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('approxRes'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('approx')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('approxRem'), new PhiInvocation(new PhiDot(new PhiNameRef('approxRes'), 'multiply'), array(new PhiNameRef('other')))));
      }
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('approxRes'), 'isZero'), array()))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('approxRes'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE')));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('res'), new PhiInvocation(new PhiDot(new PhiNameRef('res'), 'add'), array(new PhiNameRef('approxRes')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('rem'), new PhiInvocation(new PhiDot(new PhiNameRef('rem'), 'subtract'), array(new PhiNameRef('approxRem')))));
    }
    return new PhiNameRef('res');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'modulo'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'div'), array(new PhiNameRef('other'))), 'multiply'), array(new PhiNameRef('other')))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'not'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiPrefixOperation('~', new PhiDot(new PhiNameRef('this'), 'low_')), new PhiPrefixOperation('~', new PhiDot(new PhiNameRef('this'), 'high_'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'and'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('this'), 'low_'), new PhiDot(new PhiNameRef('other'), 'low_')), new PhiBinaryOperation('&', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiNameRef('other'), 'high_'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'or'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('|', new PhiDot(new PhiNameRef('this'), 'low_'), new PhiDot(new PhiNameRef('other'), 'low_')), new PhiBinaryOperation('|', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiNameRef('other'), 'high_'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'xor'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('^', new PhiDot(new PhiNameRef('this'), 'low_'), new PhiDot(new PhiNameRef('other'), 'low_')), new PhiBinaryOperation('^', new PhiDot(new PhiNameRef('this'), 'high_'), new PhiDot(new PhiNameRef('other'), 'high_'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'shiftLeft'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('numBits'), 63.0));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('numBits'), 0.0))) {
      return new PhiNameRef('this');
    }
     else {
      phiVars(array(array('low', new PhiDot(new PhiNameRef('this'), 'low_'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('numBits'), 32.0))) {
        phiVars(array(array('high', new PhiDot(new PhiNameRef('this'), 'high_'))));
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('<<', new PhiNameRef('low'), new PhiNameRef('numBits')), new PhiBinaryOperation('|', new PhiBinaryOperation('<<', new PhiNameRef('high'), new PhiNameRef('numBits')), new PhiBinaryOperation('>>>', new PhiNameRef('low'), new PhiBinaryOperation('-', 32.0, new PhiNameRef('numBits'))))));
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(0.0, new PhiBinaryOperation('<<', new PhiNameRef('low'), new PhiBinaryOperation('-', new PhiNameRef('numBits'), 32.0))));
      }
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'shiftRight'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('numBits'), 63.0));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('numBits'), 0.0))) {
      return new PhiNameRef('this');
    }
     else {
      phiVars(array(array('high', new PhiDot(new PhiNameRef('this'), 'high_'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('numBits'), 32.0))) {
        phiVars(array(array('low', new PhiDot(new PhiNameRef('this'), 'low_'))));
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('>>>', new PhiNameRef('low'), new PhiNameRef('numBits')), new PhiBinaryOperation('<<', new PhiNameRef('high'), new PhiBinaryOperation('-', 32.0, new PhiNameRef('numBits')))), new PhiBinaryOperation('>>', new PhiNameRef('high'), new PhiNameRef('numBits'))));
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('>>', new PhiNameRef('high'), new PhiBinaryOperation('-', new PhiNameRef('numBits'), 32.0)), new PhiConditional(new PhiBinaryOperation('>=', new PhiNameRef('high'), 0.0), 0.0, new PhiPrefixOperation('-', 1.0))));
      }
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'shiftRightUnsigned'), new PhiFunctionExpression(null, array(), function () {
    phiExpressionStatement(new PhiBinaryOperation('&=', new PhiNameRef('numBits'), 63.0));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('numBits'), 0.0))) {
      return new PhiNameRef('this');
    }
     else {
      phiVars(array(array('high', new PhiDot(new PhiNameRef('this'), 'high_'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('numBits'), 32.0))) {
        phiVars(array(array('low', new PhiDot(new PhiNameRef('this'), 'low_'))));
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('>>>', new PhiNameRef('low'), new PhiNameRef('numBits')), new PhiBinaryOperation('<<', new PhiNameRef('high'), new PhiBinaryOperation('-', 32.0, new PhiNameRef('numBits')))), new PhiBinaryOperation('>>>', new PhiNameRef('high'), new PhiNameRef('numBits'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('numBits'), 32.0))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiNameRef('high'), 0.0));
        }
         else {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromBits'), array(new PhiBinaryOperation('>>>', new PhiNameRef('high'), new PhiBinaryOperation('-', new PhiNameRef('numBits'), 32.0)), 0.0));
        }
      }
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('&&', new PhiBinaryOperation('instanceof', new PhiNameRef('other'), new PhiDot(new PhiNameRef('Kotlin'), 'Long')), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'equalsLong'), array(new PhiNameRef('other'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'compareTo_11rb$'), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'compare')));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'inc'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'add'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'dec'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'add'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'valueOf'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'toNumber'), array());
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'unaryPlus'), new PhiFunctionExpression(null, array(), function () {
    return new PhiNameRef('this');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'unaryMinus'), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'negate')));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'inv'), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'not')));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'prototype'), 'rangeTo'), new PhiFunctionExpression(null, array(), function () {
    return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'ranges'), 'LongRange'), array(new PhiNameRef('this'), new PhiNameRef('other')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'defineModule'), new PhiFunctionExpression(null, array(), function () {
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), new PhiFunctionExpression(null, array(), function () {
    return new PhiNameRef('fun');
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'isTypeOf'), new PhiFunctionExpression(null, array(), function () {
    return new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('object')), new PhiNameRef('type'));
    });
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'isInstanceOf'), new PhiFunctionExpression(null, array(), function () {
    return new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('object'), new PhiNameRef('klass')));
    });
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'orNull'), new PhiFunctionExpression(null, array(), function () {
    return new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiNameRef('object'), null), new PhiInvocation(new PhiNameRef('fn'), array(new PhiNameRef('object'))));
    });
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'andPredicate'), new PhiFunctionExpression(null, array(), function () {
    return new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiNameRef('a'), array(new PhiNameRef('object'))), new PhiInvocation(new PhiNameRef('b'), array(new PhiNameRef('object'))));
    });
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'kotlinModuleMetadata'), new PhiFunctionExpression(null, array(), function () {
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('typeA', new PhiPrefixOperation('typeof', new PhiNameRef('a')))));
    phiVars(array(array('typeB', new PhiPrefixOperation('typeof', new PhiNameRef('a')))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isChar'), array(new PhiNameRef('a'))), new PhiBinaryOperation('==', new PhiNameRef('typeB'), new PhiStringLiteral('number'))))) {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveCompareTo'), array(new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'charCodeAt'), array(0.0)), new PhiNameRef('b')));
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('typeA'), new PhiStringLiteral('number')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isChar'), array(new PhiNameRef('b')))))) {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveCompareTo'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('b'), 'charCodeAt'), array(0.0))));
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiNameRef('typeA'), new PhiStringLiteral('number')), new PhiBinaryOperation('==', new PhiNameRef('typeA'), new PhiStringLiteral('string'))))) {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('a'), new PhiNameRef('b')), new PhiPrefixOperation('-', 1.0), new PhiConditional(new PhiBinaryOperation('>', new PhiNameRef('a'), new PhiNameRef('b')), 1.0, 0.0));
    }
    return new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'compareTo_11rb$'), array(new PhiNameRef('b')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'primitiveCompareTo'), new PhiFunctionExpression(null, array(), function () {
    return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('a'), new PhiNameRef('b')), new PhiPrefixOperation('-', 1.0), new PhiConditional(new PhiBinaryOperation('>', new PhiNameRef('a'), new PhiNameRef('b')), 1.0, 0.0));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'charInc'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(new PhiBinaryOperation('+', new PhiNameRef('value'), 1.0)));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'charDec'), new PhiFunctionExpression(null, array(), function () {
    return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(new PhiBinaryOperation('-', new PhiNameRef('value'), 1.0)));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'imul'), new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('Math'), 'imul'), new PhiNameRef('imul'))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'imulEmulated'), new PhiNameRef('imul')));
  if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiDot(new PhiDot(new PhiNameRef('String'), 'prototype'), 'startsWith')), new PhiStringLiteral('undefined')))) {
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('String'), 'prototype'), 'startsWith'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('position'), new PhiBinaryOperation('||', new PhiNameRef('position'), 0.0)));
      return new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'lastIndexOf'), array(new PhiNameRef('searchString'), new PhiNameRef('position'))), new PhiNameRef('position'));
    })));
  }
  if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiDot(new PhiDot(new PhiNameRef('String'), 'prototype'), 'endsWith')), new PhiStringLiteral('undefined')))) {
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('String'), 'prototype'), 'endsWith'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('subjectString', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'toString'), array()))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('position'), new PhiNameRef('undefined')), new PhiBinaryOperation('>', new PhiNameRef('position'), new PhiDot(new PhiNameRef('subjectString'), 'length'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('position'), new PhiDot(new PhiNameRef('subjectString'), 'length')));
      }
      phiExpressionStatement(new PhiBinaryOperation('-=', new PhiNameRef('position'), new PhiDot(new PhiNameRef('searchString'), 'length')));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiDot(new PhiNameRef('subjectString'), 'indexOf'), array(new PhiNameRef('searchString'), new PhiNameRef('position'))))));
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('lastIndex'), new PhiPrefixOperation('-', 1.0)), new PhiBinaryOperation('===', new PhiNameRef('lastIndex'), new PhiNameRef('position')));
    })));
  }
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), new PhiObjectLiteral(array(array(new PhiNameRef('CLASS'), new PhiStringLiteral('class')), array(new PhiNameRef('INTERFACE'), new PhiStringLiteral('interface')), array(new PhiNameRef('OBJECT'), new PhiStringLiteral('object'))))));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'callGetter'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('propertyDescriptor', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getOwnPropertyDescriptor'), array(new PhiNameRef('klass'), new PhiNameRef('propertyName'))))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('propertyDescriptor'), null))) {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('propertyDescriptor'), 'get'), null))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('propertyDescriptor'), 'get'), 'call'), array(new PhiNameRef('thisObject')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('in', new PhiStringLiteral('value'), new PhiNameRef('propertyDescriptor')))) {
          return new PhiDot(new PhiNameRef('propertyDescriptor'), 'value');
        }
      }
    }
     else {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'callGetter'), array(new PhiNameRef('thisObject'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('klass'))), new PhiNameRef('propertyName')));
    }
    return null;
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'callSetter'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('propertyDescriptor', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getOwnPropertyDescriptor'), array(new PhiNameRef('klass'), new PhiNameRef('propertyName'))))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('propertyDescriptor'), null))) {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('propertyDescriptor'), 'set'), null))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('propertyDescriptor'), 'set'), 'call'), array(new PhiNameRef('thisObject'), new PhiNameRef('value'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('in', new PhiStringLiteral('value'), new PhiNameRef('propertyDescriptor')))) {
          phiThrow(new PhiNew(new PhiNameRef('Error'), array(new PhiBinaryOperation('+', new PhiStringLiteral('Assertion failed: Kotlin compiler should not generate simple JavaScript properties for overridable '), new PhiStringLiteral('Kotlin properties.')))));
        }
      }
    }
     else {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'callSetter'), array(new PhiNameRef('thisObject'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('klass'))), new PhiNameRef('propertyName'), new PhiNameRef('value')));
    }
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'isType'), new PhiFunctionExpression(null, array(), function () {
    if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('klass'), new PhiNameRef('Object')))) {
      switch (new PhiPrefixOperation('typeof', new PhiNameRef('object'))) {
        case new PhiStringLiteral('string'):
        case new PhiStringLiteral('number'):
        case new PhiStringLiteral('boolean'):
        case new PhiStringLiteral('function'):
          return true;
        default:return new PhiBinaryOperation('instanceof', new PhiNameRef('object'), new PhiNameRef('Object'));
      }
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiNameRef('object'), null), new PhiBinaryOperation('==', new PhiNameRef('klass'), null)), new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiPrefixOperation('typeof', new PhiNameRef('object')), new PhiStringLiteral('object')), new PhiBinaryOperation('!==', new PhiPrefixOperation('typeof', new PhiNameRef('object')), new PhiStringLiteral('function')))))) {
      return false;
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('klass')), new PhiStringLiteral('function')), new PhiBinaryOperation('instanceof', new PhiNameRef('object'), new PhiNameRef('klass'))))) {
      return true;
    }
    phiVars(array(array('proto', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('klass'))))));
    phiVars(array(array('constructor', new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('proto'), null), new PhiDot(new PhiNameRef('proto'), 'constructor'), null))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('!=', new PhiNameRef('constructor'), null), new PhiBinaryOperation('in', new PhiStringLiteral('$metadata$'), new PhiNameRef('constructor'))))) {
      phiVars(array(array('metadata', new PhiDot(new PhiNameRef('constructor'), '$metadata$'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('metadata'), 'kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')))) {
        return new PhiBinaryOperation('===', new PhiNameRef('object'), new PhiNameRef('klass'));
      }
    }
    phiVars(array(array('klassMetadata', new PhiDot(new PhiNameRef('klass'), '$metadata$'))));
    if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('klassMetadata'), null))) {
      return new PhiBinaryOperation('instanceof', new PhiNameRef('object'), new PhiNameRef('klass'));
    }
    if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('klassMetadata'), 'kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('object'), 'constructor'), null)))) {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('metadata'), new PhiDot(new PhiDot(new PhiNameRef('object'), 'constructor'), '$metadata$')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('metadata'), null))) {
        return new PhiInvocation(new PhiNameRef('isInheritanceFromInterface'), array(new PhiNameRef('metadata'), new PhiNameRef('klass')));
      }
    }
    return false;
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'isNumber'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiPrefixOperation('typeof', new PhiNameRef('a')), new PhiStringLiteral('number')), new PhiBinaryOperation('instanceof', new PhiNameRef('a'), new PhiDot(new PhiNameRef('Kotlin'), 'Long')));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'isChar'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('instanceof', new PhiNameRef('value'), new PhiDot(new PhiNameRef('Kotlin'), 'BoxedChar'));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'isComparable'), new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('type', new PhiPrefixOperation('typeof', new PhiNameRef('value')))));
    return new PhiBinaryOperation('||', new PhiBinaryOperation('||', new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiStringLiteral('string')), new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiStringLiteral('boolean'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isNumber'), array(new PhiNameRef('value')))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('value'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'Comparable'))));
  })));
  phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), new PhiFunctionExpression(null, array(), function () {
    return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('value')), new PhiStringLiteral('string')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('value'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'CharSequence'))));
  })));
  phiExpressionStatement(new PhiInvocation(new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('Comparable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Enum', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('Enum$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiStringLiteral('')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), 0.0));
    }))));
    phiVars(array(array('Enum$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('Enum$Companion_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('Enum$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('Enum$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('Enum$Companion'), array()));
      }
      return new PhiNameRef('Enum$Companion_instance');
    }))));
    phiVars(array(array('newArray', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('fillArray'), array(new PhiInvocation(new PhiNameRef('Array'), array(new PhiNameRef('size'))), new PhiNameRef('initValue')));
    }))));
    phiVars(array(array('fillArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('array'), 'length'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('array'), new PhiNameRef('i')), new PhiNameRef('value')));
      }
      return new PhiNameRef('array');
    }))));
    phiVars(array(array('arrayWithFun', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('Array'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('i')), new PhiInvocation(new PhiNameRef('init'), array(new PhiNameRef('i')))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('DoubleCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('DoubleCompanionObject_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('Number'), 'MIN_VALUE')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_VALUE'), new PhiDot(new PhiNameRef('Number'), 'MAX_VALUE')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'POSITIVE_INFINITY'), new PhiDot(new PhiNameRef('Number'), 'POSITIVE_INFINITY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'NEGATIVE_INFINITY'), new PhiDot(new PhiNameRef('Number'), 'NEGATIVE_INFINITY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'NaN'), new PhiDot(new PhiNameRef('Number'), 'NaN')));
    }))));
    phiVars(array(array('DoubleCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('DoubleCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('DoubleCompanionObject'), array()));
      }
      return new PhiNameRef('DoubleCompanionObject_instance');
    }))));
    phiVars(array(array('FloatCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('FloatCompanionObject_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('Number'), 'MIN_VALUE')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_VALUE'), new PhiDot(new PhiNameRef('Number'), 'MAX_VALUE')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'POSITIVE_INFINITY'), new PhiDot(new PhiNameRef('Number'), 'POSITIVE_INFINITY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'NEGATIVE_INFINITY'), new PhiDot(new PhiNameRef('Number'), 'NEGATIVE_INFINITY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'NaN'), new PhiDot(new PhiNameRef('Number'), 'NaN')));
    }))));
    phiVars(array(array('FloatCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('FloatCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('FloatCompanionObject'), array()));
      }
      return new PhiNameRef('FloatCompanionObject_instance');
    }))));
    phiVars(array(array('IntCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('IntCompanionObject_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_VALUE'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiPrefixOperation('-', 2.147483647E9), 1.0), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_VALUE'), 2.147483647E9));
    }))));
    phiVars(array(array('IntCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('IntCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('IntCompanionObject'), array()));
      }
      return new PhiNameRef('IntCompanionObject_instance');
    }))));
    phiVars(array(array('LongCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('LongCompanionObject_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_VALUE'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MIN_VALUE')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_VALUE'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'MAX_VALUE')));
    }))));
    phiVars(array(array('LongCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('LongCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('LongCompanionObject'), array()));
      }
      return new PhiNameRef('LongCompanionObject_instance');
    }))));
    phiVars(array(array('ShortCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ShortCompanionObject_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_VALUE'), new PhiPrefixOperation('-', 32768.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_VALUE'), 32767.0));
    }))));
    phiVars(array(array('ShortCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ShortCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('ShortCompanionObject'), array()));
      }
      return new PhiNameRef('ShortCompanionObject_instance');
    }))));
    phiVars(array(array('ByteCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ByteCompanionObject_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_VALUE'), new PhiPrefixOperation('-', 128.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_VALUE'), 127.0));
    }))));
    phiVars(array(array('ByteCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ByteCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('ByteCompanionObject'), array()));
      }
      return new PhiNameRef('ByteCompanionObject_instance');
    }))));
    phiVars(array(array('CharCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('CharCompanionObject_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_HIGH_SURROGATE'), 55296.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_HIGH_SURROGATE'), 56319.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_LOW_SURROGATE'), 56320.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_LOW_SURROGATE'), 57343.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MIN_SURROGATE'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'MIN_HIGH_SURROGATE')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_SURROGATE'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'MAX_LOW_SURROGATE')))));
    }))));
    phiVars(array(array('CharCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('CharCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('CharCompanionObject'), array()));
      }
      return new PhiNameRef('CharCompanionObject_instance');
    }))));
    phiVars(array(array('StringCompanionObject', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('StringCompanionObject_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('StringCompanionObject_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('StringCompanionObject_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('StringCompanionObject'), array()));
      }
      return new PhiNameRef('StringCompanionObject_instance');
    }))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Comparable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Comparable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype'), new PhiStringLiteral('name'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'name$');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype'), new PhiStringLiteral('ordinal'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'ordinal$');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Enum'), 'prototype'), 'compareTo_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveCompareTo'), array(new PhiDot(new PhiNameRef('this'), 'ordinal'), new PhiDot(new PhiNameRef('other'), 'ordinal')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Enum'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Enum'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'identityHashCode'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Enum'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'name');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Enum$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('Enum$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Enum'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Enum')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DoubleCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DoubleCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('DoubleCompanionObject_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('FloatCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('FloatCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('FloatCompanionObject_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IntCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('IntCompanionObject_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LongCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('LongCompanionObject_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ShortCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ShortCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('ShortCompanionObject_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ByteCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ByteCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('ByteCompanionObject_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CharCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('CharCompanionObject_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('StringCompanionObject'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('StringCompanionObject')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('StringCompanionObject_instance', null)));
    phiVars(array(array('package$kotlin', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('_'), 'kotlin'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'kotlin'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Comparable'), new PhiNameRef('Comparable')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('Enum'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('Enum$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Enum'), new PhiNameRef('Enum')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'newArray'), new PhiNameRef('newArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'newArrayF'), new PhiNameRef('arrayWithFun')));
    phiVars(array(array('package$js', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'js'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'js'), new PhiObjectLiteral(array()))))));
    phiVars(array(array('package$internal', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$js'), 'internal'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'internal'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$internal'), new PhiStringLiteral('DoubleCompanionObject'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('DoubleCompanionObject_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$internal'), new PhiStringLiteral('FloatCompanionObject'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('FloatCompanionObject_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$internal'), new PhiStringLiteral('IntCompanionObject'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('IntCompanionObject_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$internal'), new PhiStringLiteral('LongCompanionObject'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('LongCompanionObject_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$internal'), new PhiStringLiteral('ShortCompanionObject'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('ShortCompanionObject_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$internal'), new PhiStringLiteral('ByteCompanionObject'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('ByteCompanionObject_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$internal'), new PhiStringLiteral('CharCompanionObject'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('CharCompanionObject_getInstance')))))));
  }), array()));
  phiExpressionStatement(new PhiInvocation(new PhiFunctionExpression(null, array(), function () {
    phiVars(array(array('Annotation', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('CharSequence', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Iterable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableIterable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Collection', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableCollection', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('List', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableList', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Set', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableSet', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Map', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Map$Entry', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableMap', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableMap$MutableEntry', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Iterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('ListIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableListIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Function', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('ByteIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('CharIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('ShortIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('IntIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('LongIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('FloatIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('DoubleIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('BooleanIterator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('CharProgressionIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('CharIterator'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'step'), new PhiNameRef('step_2')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('first_24'))), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'finalElement_0'), new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('last_25'))), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'hasNext_0'), new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'step'), 0.0), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('first_24'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('last_25')))), new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('first_24'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('last_25')))))));
    }))));
    phiVars(array(array('IntProgressionIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('IntIterator'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'step'), new PhiNameRef('step_2')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiNameRef('first_24')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'finalElement_0'), new PhiNameRef('last_25')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'hasNext_0'), new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'step'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('first_24'), new PhiNameRef('last_25')), new PhiBinaryOperation('>=', new PhiNameRef('first_24'), new PhiNameRef('last_25')))));
    }))));
    phiVars(array(array('LongProgressionIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LongIterator'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'step'), new PhiNameRef('step_2')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiNameRef('first_24')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'finalElement_0'), new PhiNameRef('last_25')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'hasNext_0'), new PhiConditional(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'step'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'compareTo_11rb$'), array(new PhiNameRef('last_25'))), 0.0), new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'compareTo_11rb$'), array(new PhiNameRef('last_25'))), 0.0))));
    }))));
    phiVars(array(array('CharProgression', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('CharProgression$Companion_getInstance'), array()));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('step_2'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Step must be non-zero'))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'first'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('start')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(new PhiInvocation(new PhiNameRef('getProgressionLastElement'), array(new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('start'))), 0.0), new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('endInclusive'))), 0.0), new PhiNameRef('step_2')))))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'step'), new PhiNameRef('step_2')));
    }))));
    phiVars(array(array('CharProgression$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('CharProgression$Companion_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('CharProgression$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('CharProgression$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('CharProgression$Companion'), array()));
      }
      return new PhiNameRef('CharProgression$Companion_instance');
    }))));
    phiVars(array(array('IntProgression', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('step_2'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Step must be non-zero'))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'first'), new PhiNameRef('start')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last'), new PhiInvocation(new PhiNameRef('getProgressionLastElement'), array(new PhiNameRef('start'), new PhiNameRef('endInclusive'), new PhiNameRef('step_2')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'step'), new PhiNameRef('step_2')));
    }))));
    phiVars(array(array('IntProgression$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('IntProgression$Companion_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('IntProgression$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('IntProgression$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('IntProgression$Companion'), array()));
      }
      return new PhiNameRef('IntProgression$Companion_instance');
    }))));
    phiVars(array(array('LongProgression', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('step_2'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Step must be non-zero'))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'first'), new PhiNameRef('start')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last'), new PhiInvocation(new PhiNameRef('getProgressionLastElement_0'), array(new PhiNameRef('start'), new PhiNameRef('endInclusive'), new PhiNameRef('step_2')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'step'), new PhiNameRef('step_2')));
    }))));
    phiVars(array(array('LongProgression$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('LongProgression$Companion_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('LongProgression$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('LongProgression$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('LongProgression$Companion'), array()));
      }
      return new PhiNameRef('LongProgression$Companion_instance');
    }))));
    phiVars(array(array('ClosedRange', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('CharRange', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('CharRange$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('CharProgression'), 'call'), array(new PhiNameRef('this'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('start'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('endInclusive'))), 1.0)));
    }))));
    phiVars(array(array('CharRange$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('CharRange$Companion_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'EMPTY'), new PhiNew(new PhiNameRef('CharRange'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(1.0)))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(0.0))))))));
    }))));
    phiVars(array(array('CharRange$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('CharRange$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('CharRange$Companion'), array()));
      }
      return new PhiNameRef('CharRange$Companion_instance');
    }))));
    phiVars(array(array('IntRange', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('IntRange$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('IntProgression'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('start'), new PhiNameRef('endInclusive'), 1.0)));
    }))));
    phiVars(array(array('IntRange$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('IntRange$Companion_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'EMPTY'), new PhiNew(new PhiNameRef('IntRange'), array(1.0, 0.0))));
    }))));
    phiVars(array(array('IntRange$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('IntRange$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('IntRange$Companion'), array()));
      }
      return new PhiNameRef('IntRange$Companion_instance');
    }))));
    phiVars(array(array('LongRange', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('LongRange$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LongProgression'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('start'), new PhiNameRef('endInclusive'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE'))));
    }))));
    phiVars(array(array('LongRange$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('LongRange$Companion_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'EMPTY'), new PhiNew(new PhiNameRef('LongRange'), array(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ONE'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO')))));
    }))));
    phiVars(array(array('LongRange$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('LongRange$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('LongRange$Companion'), array()));
      }
      return new PhiNameRef('LongRange$Companion_instance');
    }))));
    phiVars(array(array('AnnotationTarget', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('AnnotationTarget_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$CLASS_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('CLASS'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$ANNOTATION_CLASS_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('ANNOTATION_CLASS'), 1.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$TYPE_PARAMETER_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('TYPE_PARAMETER'), 2.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$PROPERTY_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('PROPERTY'), 3.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$FIELD_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('FIELD'), 4.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$LOCAL_VARIABLE_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('LOCAL_VARIABLE'), 5.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$VALUE_PARAMETER_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('VALUE_PARAMETER'), 6.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$CONSTRUCTOR_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('CONSTRUCTOR'), 7.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$FUNCTION_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('FUNCTION'), 8.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$PROPERTY_GETTER_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('PROPERTY_GETTER'), 9.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$PROPERTY_SETTER_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('PROPERTY_SETTER'), 10.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$TYPE_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('TYPE'), 11.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$EXPRESSION_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('EXPRESSION'), 12.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$FILE_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('FILE'), 13.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationTarget$TYPEALIAS_instance'), new PhiNew(new PhiNameRef('AnnotationTarget'), array(new PhiStringLiteral('TYPEALIAS'), 14.0))));
    }))));
    phiVars(array(array('AnnotationTarget$CLASS_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$CLASS_instance');
    }))));
    phiVars(array(array('AnnotationTarget$ANNOTATION_CLASS_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$ANNOTATION_CLASS_instance');
    }))));
    phiVars(array(array('AnnotationTarget$TYPE_PARAMETER_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$TYPE_PARAMETER_instance');
    }))));
    phiVars(array(array('AnnotationTarget$PROPERTY_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$PROPERTY_instance');
    }))));
    phiVars(array(array('AnnotationTarget$FIELD_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$FIELD_instance');
    }))));
    phiVars(array(array('AnnotationTarget$LOCAL_VARIABLE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$LOCAL_VARIABLE_instance');
    }))));
    phiVars(array(array('AnnotationTarget$VALUE_PARAMETER_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$VALUE_PARAMETER_instance');
    }))));
    phiVars(array(array('AnnotationTarget$CONSTRUCTOR_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$CONSTRUCTOR_instance');
    }))));
    phiVars(array(array('AnnotationTarget$FUNCTION_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$FUNCTION_instance');
    }))));
    phiVars(array(array('AnnotationTarget$PROPERTY_GETTER_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$PROPERTY_GETTER_instance');
    }))));
    phiVars(array(array('AnnotationTarget$PROPERTY_SETTER_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$PROPERTY_SETTER_instance');
    }))));
    phiVars(array(array('AnnotationTarget$TYPE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$TYPE_instance');
    }))));
    phiVars(array(array('AnnotationTarget$EXPRESSION_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$EXPRESSION_instance');
    }))));
    phiVars(array(array('AnnotationTarget$FILE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$FILE_instance');
    }))));
    phiVars(array(array('AnnotationTarget$TYPEALIAS_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationTarget_initFields'), array()));
      return new PhiNameRef('AnnotationTarget$TYPEALIAS_instance');
    }))));
    phiVars(array(array('AnnotationTarget$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('AnnotationTarget$CLASS_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$ANNOTATION_CLASS_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$TYPE_PARAMETER_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$PROPERTY_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$FIELD_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$LOCAL_VARIABLE_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$VALUE_PARAMETER_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$CONSTRUCTOR_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$FUNCTION_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$PROPERTY_GETTER_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$PROPERTY_SETTER_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$TYPE_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$EXPRESSION_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$FILE_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationTarget$TYPEALIAS_getInstance'), array())));
    }))));
    phiVars(array(array('AnnotationTarget$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('CLASS'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$CLASS_getInstance'), array());
        case new PhiStringLiteral('ANNOTATION_CLASS'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$ANNOTATION_CLASS_getInstance'), array());
        case new PhiStringLiteral('TYPE_PARAMETER'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$TYPE_PARAMETER_getInstance'), array());
        case new PhiStringLiteral('PROPERTY'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$PROPERTY_getInstance'), array());
        case new PhiStringLiteral('FIELD'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$FIELD_getInstance'), array());
        case new PhiStringLiteral('LOCAL_VARIABLE'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$LOCAL_VARIABLE_getInstance'), array());
        case new PhiStringLiteral('VALUE_PARAMETER'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$VALUE_PARAMETER_getInstance'), array());
        case new PhiStringLiteral('CONSTRUCTOR'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$CONSTRUCTOR_getInstance'), array());
        case new PhiStringLiteral('FUNCTION'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$FUNCTION_getInstance'), array());
        case new PhiStringLiteral('PROPERTY_GETTER'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$PROPERTY_GETTER_getInstance'), array());
        case new PhiStringLiteral('PROPERTY_SETTER'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$PROPERTY_SETTER_getInstance'), array());
        case new PhiStringLiteral('TYPE'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$TYPE_getInstance'), array());
        case new PhiStringLiteral('EXPRESSION'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$EXPRESSION_getInstance'), array());
        case new PhiStringLiteral('FILE'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$FILE_getInstance'), array());
        case new PhiStringLiteral('TYPEALIAS'):
          return new PhiInvocation(new PhiNameRef('AnnotationTarget$TYPEALIAS_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.annotation.AnnotationTarget.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('AnnotationRetention', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('AnnotationRetention_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationRetention_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationRetention$SOURCE_instance'), new PhiNew(new PhiNameRef('AnnotationRetention'), array(new PhiStringLiteral('SOURCE'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationRetention$BINARY_instance'), new PhiNew(new PhiNameRef('AnnotationRetention'), array(new PhiStringLiteral('BINARY'), 1.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AnnotationRetention$RUNTIME_instance'), new PhiNew(new PhiNameRef('AnnotationRetention'), array(new PhiStringLiteral('RUNTIME'), 2.0))));
    }))));
    phiVars(array(array('AnnotationRetention$SOURCE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationRetention_initFields'), array()));
      return new PhiNameRef('AnnotationRetention$SOURCE_instance');
    }))));
    phiVars(array(array('AnnotationRetention$BINARY_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationRetention_initFields'), array()));
      return new PhiNameRef('AnnotationRetention$BINARY_instance');
    }))));
    phiVars(array(array('AnnotationRetention$RUNTIME_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AnnotationRetention_initFields'), array()));
      return new PhiNameRef('AnnotationRetention$RUNTIME_instance');
    }))));
    phiVars(array(array('AnnotationRetention$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('AnnotationRetention$SOURCE_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationRetention$BINARY_getInstance'), array()), new PhiInvocation(new PhiNameRef('AnnotationRetention$RUNTIME_getInstance'), array())));
    }))));
    phiVars(array(array('AnnotationRetention$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('SOURCE'):
          return new PhiInvocation(new PhiNameRef('AnnotationRetention$SOURCE_getInstance'), array());
        case new PhiStringLiteral('BINARY'):
          return new PhiInvocation(new PhiNameRef('AnnotationRetention$BINARY_getInstance'), array());
        case new PhiStringLiteral('RUNTIME'):
          return new PhiInvocation(new PhiNameRef('AnnotationRetention$RUNTIME_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.annotation.AnnotationRetention.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('Target', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'allowedTargets'), new PhiNameRef('allowedTargets')));
    }))));
    phiVars(array(array('Retention', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('value'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('value'), new PhiInvocation(new PhiNameRef('AnnotationRetention$RUNTIME_getInstance'), array())));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value'), new PhiNameRef('value')));
    }))));
    phiVars(array(array('Repeatable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MustBeDocumented', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('PureReifiable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('PlatformDependent', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('mod', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('mod_1', new PhiBinaryOperation('%', new PhiNameRef('a'), new PhiNameRef('b')))));
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiNameRef('mod_1'), 0.0), new PhiNameRef('mod_1'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('mod_1'), new PhiNameRef('b')), 0.0));
    }))));
    phiVars(array(array('mod_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('mod_1', new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'modulo'), array(new PhiNameRef('b'))))));
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('mod_1'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0), new PhiNameRef('mod_1'), new PhiInvocation(new PhiDot(new PhiNameRef('mod_1'), 'add'), array(new PhiNameRef('b'))));
    }))));
    phiVars(array(array('differenceModulo', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('mod'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiInvocation(new PhiNameRef('mod'), array(new PhiNameRef('a'), new PhiNameRef('c'))), new PhiInvocation(new PhiNameRef('mod'), array(new PhiNameRef('b'), new PhiNameRef('c')))), 0.0), new PhiNameRef('c')));
    }))));
    phiVars(array(array('differenceModulo_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('mod_0'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('mod_0'), array(new PhiNameRef('a'), new PhiNameRef('c'))), 'subtract'), array(new PhiInvocation(new PhiNameRef('mod_0'), array(new PhiNameRef('b'), new PhiNameRef('c'))))), new PhiNameRef('c')));
    }))));
    phiVars(array(array('getProgressionLastElement', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('step_2'), 0.0))) {
        return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('end'), new PhiInvocation(new PhiNameRef('differenceModulo'), array(new PhiNameRef('end'), new PhiNameRef('start'), new PhiNameRef('step_2')))), 0.0);
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('step_2'), 0.0))) {
          return new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('end'), new PhiInvocation(new PhiNameRef('differenceModulo'), array(new PhiNameRef('start'), new PhiNameRef('end'), new PhiPrefixOperation('-', new PhiNameRef('step_2'))))), 0.0);
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Step is zero.'))));
        }
      }
    }))));
    phiVars(array(array('getProgressionLastElement_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('step_2'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('end'), 'subtract'), array(new PhiInvocation(new PhiNameRef('differenceModulo_0'), array(new PhiNameRef('end'), new PhiNameRef('start'), new PhiNameRef('step_2')))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('step_2'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('end'), 'add'), array(new PhiInvocation(new PhiNameRef('differenceModulo_0'), array(new PhiNameRef('start'), new PhiNameRef('end'), new PhiInvocation(new PhiDot(new PhiNameRef('step_2'), 'unaryMinus'), array())))));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Step is zero.'))));
        }
      }
    }))));
    phiVars(array(array('Comparator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Comparator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparison'), new PhiNameRef('closure$comparison')));
    }))));
    phiVars(array(array('native', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('name'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('name'), new PhiStringLiteral('')));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiNameRef('name')));
    }))));
    phiVars(array(array('nativeGetter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('nativeSetter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('nativeInvoke', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('library', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('name'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('name'), new PhiStringLiteral('')));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiNameRef('name')));
    }))));
    phiVars(array(array('marker', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('JsName', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiNameRef('name')));
    }))));
    phiVars(array(array('JsModule', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('this'), new PhiStringLiteral('import')), new PhiNameRef('import_0')));
    }))));
    phiVars(array(array('JsNonModule', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('JsQualifier', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value'), new PhiNameRef('value')));
    }))));
    phiVars(array(array('JvmOverloads', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('JvmName', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiNameRef('name')));
    }))));
    phiVars(array(array('JvmMultifileClass', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('JvmField', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('arrayIterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$array'), new PhiNameRef('closure$array')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), 0.0));
    }))));
    phiVars(array(array('arrayIterator', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('arrayIterator$ObjectLiteral'), array(new PhiNameRef('array')));
    }))));
    phiVars(array(array('PropertyMetadata', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'callableName'), new PhiNameRef('name')));
    }))));
    phiVars(array(array('noWhenBranchMatched', new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('NoWhenBranchMatchedException'), array()));
    }))));
    phiVars(array(array('subSequence', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('c')), new PhiStringLiteral('string')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('c'), 'substring'), array(new PhiNameRef('startIndex'), new PhiNameRef('endIndex')));
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiNameRef('c'), 'subSequence_vux9f0$'), array(new PhiNameRef('startIndex'), new PhiNameRef('endIndex')));
      }
    }))));
    phiVars(array(array('captureStack', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiDot(new PhiNameRef('Error'), 'captureStackTrace'))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Error'), 'captureStackTrace'), array(new PhiNameRef('instance'), new PhiInvocation(new PhiNameRef('get_js'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'getKClassFromExpression'), array(new PhiNameRef('instance'))))))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('instance'), 'stack'), new PhiDot(new PhiNew(new PhiNameRef('Error'), array()), 'stack')));
      }
    }))));
    phiVars(array(array('newThrowable', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('throwable', new PhiNew(new PhiNameRef('Error'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiPrefixOperation('typeof', new PhiNameRef('message')), new PhiStringLiteral('undefined'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('cause'), null), new PhiInvocation(new PhiDot(new PhiNameRef('cause'), 'toString'), array()), null)));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('message')));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('throwable'), 'message'), new PhiNameRef('tmp$')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('throwable'), 'cause'), new PhiNameRef('cause')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('throwable'), 'name'), new PhiStringLiteral('Throwable')));
      return new PhiNameRef('throwable');
    }))));
    phiVars(array(array('BoxedChar', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'c'), new PhiNameRef('c')));
    }))));
    phiVars(array(array('arrayConcat', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('a'), 'concat'), 'apply'), array(new PhiArrayLiteral(array()), new PhiNameRef('arguments')));
    }))));
    phiVars(array(array('primitiveArrayConcat', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('a'), 'concat'), 'apply'), array(new PhiArrayLiteral(array()), new PhiNameRef('arguments')));
    }))));
    phiVars(array(array('isWhitespace', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver'))))), 'match'), array(new PhiStringLiteral('[\\s\\xA0]'))))));
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('!=', new PhiNameRef('result'), null), new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('result'), 'length'), 0.0));
    }))));
    phiVars(array(array('isHighSurrogate', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('CharRange'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('CharCompanionObject'), 'MIN_HIGH_SURROGATE'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('CharCompanionObject'), 'MAX_HIGH_SURROGATE'))))), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('isLowSurrogate', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('CharRange'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('CharCompanionObject'), 'MIN_LOW_SURROGATE'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('CharCompanionObject'), 'MAX_LOW_SURROGATE'))))), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('copyToArray', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('collection'), 'toArray'), new PhiNameRef('undefined')), new PhiInvocation(new PhiDot(new PhiNameRef('collection'), 'toArray'), array()), new PhiInvocation(new PhiNameRef('copyToArrayImpl'), array(new PhiNameRef('collection'))));
    }))));
    phiVars(array(array('copyToArrayImpl', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('array', new PhiArrayLiteral(array()))));
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('collection'), 'iterator'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('array'), 'push'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      }
      return new PhiNameRef('array');
    }))));
    phiVars(array(array('copyToArrayImpl_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('array'), 'length'), new PhiDot(new PhiNameRef('collection'), 'size')))) {
        return new PhiInvocation(new PhiNameRef('copyToArrayImpl'), array(new PhiNameRef('collection')));
      }
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('collection'), 'iterator'), array()))));
      phiVars(array(array('index', 0.0)));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('array'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), new PhiDot(new PhiNameRef('array'), 'length')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('array'), new PhiNameRef('index')), null));
      }
      return new PhiNameRef('array');
    }))));
    phiVars(array(array('listOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayListOf'), array(new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))));
    phiVars(array(array('setOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('hashSetOf'), array(new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))));
    phiVars(array(array('mapOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('hashMapOf'), array(new PhiArrayLiteral(array(new PhiNameRef('pair')))));
    }))));
    phiVars(array(array('sort', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('collectionsSort'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('naturalOrder'), array()))));
    }))));
    phiVars(array(array('sortWith', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('collectionsSort'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparator'))));
    }))));
    phiVars(array(array('collectionsSort', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiDot(new PhiNameRef('list'), 'size'), 1.0))) {
        return;
      }
      phiVars(array(array('array', new PhiInvocation(new PhiNameRef('copyToArray'), array(new PhiNameRef('list'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('array'), 'sort'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('comparator'), 'compare'), 'bind'), array(new PhiNameRef('comparator'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('array'), 'length'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'set_wxm5ur$'), array(new PhiNameRef('i'), new PhiBrackets(new PhiNameRef('array'), new PhiNameRef('i')))));
      }
    }))));
    phiVars(array(array('AbstractMutableCollection', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractCollection'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('AbstractMutableCollection$removeAll$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$elements'), 'contains_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('AbstractMutableCollection$retainAll$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('closure$elements'), 'contains_11rb$'), array(new PhiNameRef('it'))));
      });
    }))));
    phiVars(array(array('AbstractMutableList', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), 0.0));
    }))));
    phiVars(array(array('AbstractMutableList$removeAll$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$elements'), 'contains_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('AbstractMutableList$retainAll$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('closure$elements'), 'contains_11rb$'), array(new PhiNameRef('it'))));
      });
    }))));
    phiVars(array(array('AbstractMutableList$IteratorImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '$outer'), new PhiNameRef('$outer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), 0.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('AbstractMutableList$ListIteratorImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '$outer'), new PhiNameRef('$outer')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableList$IteratorImpl'), 'call'), array(new PhiNameRef('this'), new PhiDot(new PhiNameRef('this'), '$outer'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkPositionIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'size'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiNameRef('index')));
    }))));
    phiVars(array(array('AbstractMutableList$SubList', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableList'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'list_0'), new PhiNameRef('list')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('fromIndex')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_size_0'), 0.0));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkRangeIndexes_0'), array(new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('toIndex'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'list_0'), 'size'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_size_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('toIndex'), new PhiDot(new PhiNameRef('this'), 'fromIndex_0')), 0.0)));
    }))));
    phiVars(array(array('AbstractMutableMap', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMap'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_keys_n25ags$_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_values_n25ags$_0'), null));
    }))));
    phiVars(array(array('AbstractMutableMap$SimpleEntry', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'key_af2vu2$_0'), new PhiNameRef('key')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiNameRef('value')));
    }))));
    phiVars(array(array('AbstractMutableMap$AbstractMutableMap$SimpleEntry_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'call'), array(new PhiNameRef('$this'), new PhiDot(new PhiNameRef('entry'), 'key'), new PhiDot(new PhiNameRef('entry'), 'value'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), new PhiNameRef('this$AbstractMutableMap')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), new PhiNameRef('closure$entryIterator')));
    }))));
    phiVars(array(array('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), new PhiNameRef('this$AbstractMutableMap')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), new PhiNameRef('closure$entryIterator')));
    }))));
    phiVars(array(array('AbstractMutableSet', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('ArrayList', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableList'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiNameRef('array')));
    }))));
    phiVars(array(array('ArrayList_init', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('capacity'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('capacity'), 0.0));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('ArrayList'), 'call'), array(new PhiNameRef('$this'), new PhiArrayLiteral(array()))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('ArrayList_init_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('ArrayList'), 'call'), array(new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'copyToArray'), array(new PhiNameRef('elements'))))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('EqualityComparator', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('EqualityComparator$HashCode', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('EqualityComparator$HashCode_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('EqualityComparator$HashCode_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('EqualityComparator$HashCode_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('EqualityComparator$HashCode'), array()));
      }
      return new PhiNameRef('EqualityComparator$HashCode_instance');
    }))));
    phiVars(array(array('HashMap', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'equality_bievda$_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_entries_bievda$_0'), null));
    }))));
    phiVars(array(array('HashMap$EntrySet', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '$outer'), new PhiNameRef('$outer')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('HashMap_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('HashMap'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'internalMap_bievda$_0'), new PhiNameRef('internalMap')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'equality_bievda$_0'), new PhiDot(new PhiNameRef('internalMap'), 'equality')));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('HashMap_init_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashMap_init'), array(new PhiNew(new PhiNameRef('InternalHashCodeMap'), array(new PhiInvocation(new PhiNameRef('EqualityComparator$HashCode_getInstance'), array()))), new PhiNameRef('$this'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('HashMap_init_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('loadFactor'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('loadFactor'), 0.0));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashMap_init_0'), array(new PhiNameRef('$this'))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('initialCapacity'), 0.0)))) {
        phiVars(array(array('message', new PhiStringLiteral('Negative initial capacity'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('loadFactor'), 0.0)))) {
        phiVars(array(array('message_0', new PhiStringLiteral('Non-positive load factor'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message_0'), 'toString'), array()))));
      }
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('HashMap_init_2', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashMap_init_0'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$this'), 'putAll_a2k3zr$'), array(new PhiNameRef('original'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('stringMapOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiNameRef('HashMap_init'), array(new PhiNew(new PhiNameRef('InternalStringMap'), array(new PhiInvocation(new PhiNameRef('EqualityComparator$HashCode_getInstance'), array()))))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('HashSet', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), null));
    }))));
    phiVars(array(array('HashSet_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('HashSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_biaydw$_0'), new PhiInvocation(new PhiNameRef('HashMap_init_0'), array())));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('HashSet_init_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('HashSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_biaydw$_0'), new PhiInvocation(new PhiNameRef('HashMap_init_1'), array(new PhiDot(new PhiNameRef('elements'), 'size')))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$this'), 'addAll_brywnq$'), array(new PhiNameRef('elements'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('HashSet_init_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('loadFactor'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('loadFactor'), 0.0));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('HashSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_biaydw$_0'), new PhiInvocation(new PhiNameRef('HashMap_init_1'), array(new PhiNameRef('initialCapacity'), new PhiNameRef('loadFactor')))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('HashSet_init_2', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('HashSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_biaydw$_0'), new PhiNameRef('map_12')));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('stringSetOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiNameRef('HashSet_init_2'), array(new PhiInvocation(new PhiNameRef('stringMapOf'), array(new PhiArrayLiteral(array()))))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('InternalHashCodeMap', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'equality_mb5kdg$_0'), new PhiNameRef('equality')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(null))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size_mb5kdg$_0'), 0.0));
    }))));
    phiVars(array(array('InternalHashCodeMap$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$InternalHashCodeMap'), new PhiNameRef('this$InternalHashCodeMap')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state'), new PhiPrefixOperation('-', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'keys'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'keys'), array(new PhiDot(new PhiNameRef('this$InternalHashCodeMap'), 'backingMap_0')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'keyIndex'), new PhiPrefixOperation('-', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'chain'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'itemIndex'), new PhiPrefixOperation('-', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lastEntry'), null));
    }))));
    phiVars(array(array('InternalMap', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('InternalStringMap', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'equality_o1oc42$_0'), new PhiNameRef('equality')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(null))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size_o1oc42$_0'), 0.0));
    }))));
    phiVars(array(array('InternalStringMap$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$InternalStringMap'), new PhiNameRef('this$InternalStringMap')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'keys_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'keys'), array(new PhiDot(new PhiNameRef('this$InternalStringMap'), 'backingMap_0')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiDot(new PhiNameRef('this'), 'keys_0')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lastKey_0'), null));
    }))));
    phiVars(array(array('InternalStringMap$newMapEntry$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$key'), new PhiNameRef('closure$key')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$InternalStringMap'), new PhiNameRef('this$InternalStringMap')));
    }))));
    phiVars(array(array('LinkedHashMap', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), null));
    }))));
    phiVars(array(array('LinkedHashMap$ChainEntry', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('key'), new PhiNameRef('value'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'prev_0'), null));
    }))));
    phiVars(array(array('LinkedHashMap$EntrySet', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '$outer'), new PhiNameRef('$outer')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('LinkedHashMap$EntrySet$EntryIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '$outer'), new PhiNameRef('$outer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), '$outer'), 'head_bqz7u3$_0')));
    }))));
    phiVars(array(array('LinkedHashMap_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashMap_init_0'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashMap'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_bqz7u3$_0'), new PhiInvocation(new PhiNameRef('HashMap_init_0'), array())));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('LinkedHashMap_init_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashMap_init_0'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashMap'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_bqz7u3$_0'), new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('backingMap')), new PhiNameRef('HashMap'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('LinkedHashMap_init_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('loadFactor'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('loadFactor'), 0.0));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashMap_init_1'), array(new PhiNameRef('initialCapacity'), new PhiNameRef('loadFactor'), new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashMap'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_bqz7u3$_0'), new PhiInvocation(new PhiNameRef('HashMap_init_0'), array())));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('LinkedHashMap_init_2', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashMap_init_0'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashMap'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$this'), 'map_bqz7u3$_0'), new PhiInvocation(new PhiNameRef('HashMap_init_0'), array())));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$this'), 'putAll_a2k3zr$'), array(new PhiNameRef('original'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('linkedStringMapOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_0'), array(new PhiInvocation(new PhiNameRef('stringMapOf'), array(new PhiArrayLiteral(array()))))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('LinkedHashSet', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('LinkedHashSet_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashSet_init_2'), array(new PhiNameRef('map_12'), new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashSet'), 'call'), array(new PhiNameRef('$this'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('LinkedHashSet_init_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashSet_init_2'), array(new PhiInvocation(new PhiNameRef('LinkedHashMap_init'), array()), new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashSet'), 'call'), array(new PhiNameRef('$this'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('LinkedHashSet_init_1', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashSet_init_2'), array(new PhiInvocation(new PhiNameRef('LinkedHashMap_init'), array()), new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashSet'), 'call'), array(new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$this'), 'addAll_brywnq$'), array(new PhiNameRef('elements'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('LinkedHashSet_init_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('loadFactor'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('loadFactor'), 0.0));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LinkedHashSet'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('HashSet_init_2'), array(new PhiInvocation(new PhiNameRef('LinkedHashMap_init_1'), array(new PhiNameRef('initialCapacity'), new PhiNameRef('loadFactor'))), new PhiNameRef('$this'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('LinkedHashSet'), 'call'), array(new PhiNameRef('$this'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('linkedStringSetOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiNameRef('LinkedHashSet_init'), array(new PhiInvocation(new PhiNameRef('linkedStringMapOf'), array(new PhiArrayLiteral(array()))))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('RandomAccess', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Volatile', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Synchronized', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('BaseOutput', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('NodeJsOutput', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('BaseOutput'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'outputStream'), new PhiNameRef('outputStream')));
    }))));
    phiVars(array(array('OutputToConsoleLog', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('BaseOutput'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('BufferedOutput', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('BaseOutput'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiStringLiteral('')));
    }))));
    phiVars(array(array('BufferedOutputToConsoleLog', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('BufferedOutput'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('String_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('String'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('println', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('output'), 'println'), array()));
    }))));
    phiVars(array(array('println_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('output'), 'println_s8jyv4$'), array(new PhiNameRef('message'))));
    }))));
    phiVars(array(array('print', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('output'), 'print_s8jyv4$'), array(new PhiNameRef('message'))));
    }))));
    phiVars(array(array('deleteProperty', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiPrefixOperation('delete', new PhiBrackets(new PhiNameRef('obj'), new PhiNameRef('property'))));
    }))));
    phiVars(array(array('CoroutineImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'resultContinuation_0'), new PhiNameRef('resultContinuation')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), 0.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'exceptionState_0'), 0.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'exception_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'finallyPath_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'context_d1fu0y$_0'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'resultContinuation_0'), 'context')));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'facade'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'context'), 'get_8oh8b3$'), array(new PhiInvocation(new PhiNameRef('ContinuationInterceptor$Key_getInstance'), array())))), null), new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'interceptContinuation_n4f53e$'), array(new PhiNameRef('this'))), null)), null), new PhiNameRef('tmp$_0'), new PhiNameRef('this'))));
    }))));
    phiVars(array(array('Fail', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'exception'), new PhiNameRef('exception')));
    }))));
    phiVars(array(array('SafeContinuation', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'delegate_0'), new PhiNameRef('delegate')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('initialResult')));
    }))));
    phiVars(array(array('SafeContinuation_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('SafeContinuation'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('SafeContinuation'), 'call'), array(new PhiNameRef('$this'), new PhiNameRef('delegate'), new PhiNameRef('UNDECIDED'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('createCoroutineUnchecked', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('$receiver'), array(new PhiNameRef('receiver'), new PhiNameRef('completion'), true));
    }))));
    phiVars(array(array('createCoroutineUnchecked_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('$receiver'), array(new PhiNameRef('completion'), true));
    }))));
    phiVars(array(array('iterator_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('r', new PhiNameRef('$receiver'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiStringLiteral('iterator')), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiBrackets(new PhiNameRef('$receiver'), new PhiStringLiteral('iterator')), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiNameRef('r'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('r')))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('r')), new PhiNameRef('Iterable'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'iterator'), array())));
        }
      }
      return new PhiNameRef('tmp$_0');
    }))));
    phiVars(array(array('throwNPE', new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('NullPointerException'), array(new PhiNameRef('message'))));
    }))));
    phiVars(array(array('throwCCE', new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('ClassCastException'), array(new PhiStringLiteral('Illegal cast'))));
    }))));
    phiVars(array(array('throwISE', new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('IllegalStateException'), array(new PhiNameRef('message'))));
    }))));
    phiVars(array(array('Error_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Throwable'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'message_lqgip$_0'), new PhiNameRef('message')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'cause_lqgip$_0'), null));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'captureStack'), array(new PhiNameRef('Throwable'), new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('Error')));
    }))));
    phiVars(array(array('Exception', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Throwable'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'message_ujvw20$_0'), new PhiNameRef('message')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'cause_ujvw20$_0'), null));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'captureStack'), array(new PhiNameRef('Throwable'), new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('Exception')));
    }))));
    phiVars(array(array('RuntimeException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Exception'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('RuntimeException')));
    }))));
    phiVars(array(array('IllegalArgumentException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('IllegalArgumentException')));
    }))));
    phiVars(array(array('IllegalStateException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('IllegalStateException')));
    }))));
    phiVars(array(array('IndexOutOfBoundsException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('IndexOutOfBoundsException')));
    }))));
    phiVars(array(array('ConcurrentModificationException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('ConcurrentModificationException')));
    }))));
    phiVars(array(array('UnsupportedOperationException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('UnsupportedOperationException')));
    }))));
    phiVars(array(array('NumberFormatException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('NumberFormatException')));
    }))));
    phiVars(array(array('NullPointerException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('NullPointerException')));
    }))));
    phiVars(array(array('ClassCastException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('ClassCastException')));
    }))));
    phiVars(array(array('AssertionError', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Error_0'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('AssertionError')));
    }))));
    phiVars(array(array('NoSuchElementException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Exception'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('NoSuchElementException')));
    }))));
    phiVars(array(array('NoWhenBranchMatchedException', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), null));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('RuntimeException'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('NoWhenBranchMatchedException')));
    }))));
    phiVars(array(array('contains', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_1'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_2'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_3'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_4'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_5'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_6'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('contains_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_7'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))), 0.0);
    }))));
    phiVars(array(array('first', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))));
    phiVars(array(array('first_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
    }))));
    phiVars(array(array('firstOrNull_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_15', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('firstOrNull_16', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), 0.0));
    }))));
    phiVars(array(array('getOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_7'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('getOrNull_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null);
    }))));
    phiVars(array(array('indexOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('tmp$_3', )));
      phiVars(array(array('tmp$_4', )));
      phiVars(array(array('tmp$_5', )));
      phiVars(array(array('tmp$_6', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('element'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
        phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
        for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null))) {
            return new PhiNameRef('index');
          }
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_3'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_4'), new PhiDot(new PhiNameRef('tmp$_3'), 'first')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_5'), new PhiDot(new PhiNameRef('tmp$_3'), 'last')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_6'), new PhiDot(new PhiNameRef('tmp$_3'), 'step')));
        phiVars(array(array('index_0', new PhiNameRef('tmp$_4'))));
        for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index_0'), new PhiNameRef('tmp$_5')); new PhiBinaryOperation('+=', new PhiNameRef('index_0'), new PhiNameRef('tmp$_6'))) {
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index_0')))))) {
            return new PhiNameRef('index_0');
          }
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_0'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_1'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_2'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_3'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_4'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_5'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_6'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices_7'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('last', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_7'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('last_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver'))))));
    }))));
    phiVars(array(array('lastIndexOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('element'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), null))) {
            return new PhiNameRef('index');
          }
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
          phiVars(array(array('index_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index_0')))))) {
            return new PhiNameRef('index_0');
          }
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_0'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_1'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_2'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_3'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_4'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_5'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_6'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastIndexOf_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('reversed'), array(new PhiInvocation(new PhiNameRef('get_indices_7'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('lastOrNull_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_15', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('lastOrNull_16', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('single', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('single_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Array is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Array has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('singleOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('singleOrNull_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiBrackets(new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('drop', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_1'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_2'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_3'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_4'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_5'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_6'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('drop_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('takeLast_7'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_1'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_2'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_3'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_4'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_5'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_6'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_7'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('filterIndexedTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIndexedTo$lambda_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      });
    }))));
    phiVars(array(array('filterNotNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterNotNullTo'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('ArrayList_init'), array())));
    }))));
    phiVars(array(array('filterNotNullTo', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('element'), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('slice', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiNameRef('asList_7'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_12', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_13', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_15', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('slice_16', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('sliceArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('indices'), 'size'), null)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), 0.0)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), 0.0)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), 0.0)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), 0.0)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), 0.0)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), false)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('indices'), 'size'), 0.0)))));
      phiVars(array(array('targetIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('sourceIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('targetIndex')), new PhiBinaryOperation('=', new PhiNameRef('targetIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('sourceIndex'))))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sliceArray_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(0.0, 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_9', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_10', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_11', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_12', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO')));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_13', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_14', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_15', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, false));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('sliceArray_16', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(0.0, 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('take', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_0'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_1'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_2'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_3'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_4'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_5'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_6'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiNameRef('toList_7'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_0'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_1'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_2'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_3'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_4'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_5'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_6'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLast_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_7'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0))))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reverse', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_7'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiNameRef('tmp')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reverse_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex'))))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('reverseIndex')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('tmp')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reversed_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_0'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_3'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_4'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_5'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_6'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversed_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_7'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('reversedArray', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('$receiver'), 'length'), null)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), false)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_7'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('reversedArray_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('lastIndex')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('lastIndex'), new PhiNameRef('i')), 0.0)), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i'))))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('sortDescending', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('reverseOrder'), array()))));
    }))));
    phiVars(array(array('sortDescending_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_0'), array(new PhiNameRef('$receiver'))));
      }
    }))));
    phiVars(array(array('sortDescending_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_1'), array(new PhiNameRef('$receiver'))));
      }
    }))));
    phiVars(array(array('sortDescending_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_2'), array(new PhiNameRef('$receiver'))));
      }
    }))));
    phiVars(array(array('sortDescending_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_0'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_3'), array(new PhiNameRef('$receiver'))));
      }
    }))));
    phiVars(array(array('sortDescending_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_4'), array(new PhiNameRef('$receiver'))));
      }
    }))));
    phiVars(array(array('sortDescending_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_5'), array(new PhiNameRef('$receiver'))));
      }
    }))));
    phiVars(array(array('sortDescending_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_7'), array(new PhiNameRef('$receiver'))));
      }
    }))));
    phiVars(array(array('sorted', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiInvocation(new PhiNameRef('sortedArray'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('sorted_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_0'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sorted_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sorted_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sorted_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_3'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sorted_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_4'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sorted_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_5'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sorted_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_6'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedArray', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArray_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArray_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArray_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArray_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_0'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArray_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArray_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArray_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiInvocation(new PhiNameRef('reverseOrder'), array()))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortDescending_0'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortDescending_1'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortDescending_2'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortDescending_3'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortDescending_4'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortDescending_5'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayDescending_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortDescending_6'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedArrayWith', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('sortedDescending', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('sortedWith'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('reverseOrder'), array())));
    }))));
    phiVars(array(array('sortedDescending_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('reversed_1'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedDescending_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('reversed_2'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedDescending_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('reversed_3'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedDescending_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_0'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('reversed_4'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedDescending_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('reversed_5'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedDescending_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('reversed_6'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedDescending_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'primitiveArraySort'), array(new PhiNameRef('$receiver_0'))));
      return new PhiInvocation(new PhiNameRef('reversed_8'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiInvocation(new PhiNameRef('sortedArrayWith'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparator')))));
    }))));
    phiVars(array(array('sortedWith_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_0'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_3'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_4'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_5'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_7'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('sortedWith_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toTypedArray_6'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
      return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('get_indices', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_7'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_indices_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('get_lastIndex_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('get_lastIndex_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('toBooleanArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), false)))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toByteArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toCharArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toDoubleArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toFloatArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toIntArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toLongArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toShortArray', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiNameRef('index')), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toCollection', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toCollection_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toHashSet', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_1'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_2'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_3'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_4'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_5'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_6'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toHashSet_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_7'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toList', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_0'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_1'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_2'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_3'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_4'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_5'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_6'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toList_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMutableList_7'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toMutableList', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('ArrayList_init_0'), array(new PhiInvocation(new PhiNameRef('asCollection'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('toMutableList_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toMutableList_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toMutableList_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toMutableList_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toMutableList_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toMutableList_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toMutableList_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toMutableList_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('toSet', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_1'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_2'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_3'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_4'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_5'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_6'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('toSet_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)))))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_7'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('groupByTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_15', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_16', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupingBy$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$groupingBy'), new PhiNameRef('this$groupingBy')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), new PhiNameRef('closure$keySelector')));
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('index'), new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('withIndex$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_0'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_1'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_2'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_3'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_4'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_5'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_6'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('withIndex$lambda_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_7'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_0'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_1'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_2'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_3'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_4'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_5'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_6'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_7'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('intersect', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_0'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_3'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_4'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_5'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_6'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('intersect_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_7'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_0'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_3'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_4'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_5'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_6'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_7'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_0'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_3'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_4'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_5'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_6'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('union_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_7'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('any_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('any_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('max', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('max_17'), 'compareTo_11rb$'), array(new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('max_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('max_17')));
    }))));
    phiVars(array(array('maxWith', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_7'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('max_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('max_17')));
    }))));
    phiVars(array(array('min', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('min_17'), 'compareTo_11rb$'), array(new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('min_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('min_17')));
    }))));
    phiVars(array(array('minWith', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_0'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_1'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_2'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_3'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_4'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_5'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_6'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_7'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_8'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('min_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('min_17')));
    }))));
    phiVars(array(array('none', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('none_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('requireNoNulls', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('element'), null))) {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('null element found in '), new PhiNameRef('$receiver')), new PhiStringLiteral('.')))));
        }
      }
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))));
    phiVars(array(array('zip', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_13', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_15', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('t1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        phiVars(array(array('t2', new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('t1'))), new PhiNameRef('t2'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_17', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_19', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_23', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_25', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_27', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_29', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_31', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_33', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))))))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_35', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_37', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_39', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_41', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_43', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_45', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_47', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_49', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('t1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        phiVars(array(array('t2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('t1'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('t2'))))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('joinTo', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiNameRef('appendElement'), array(new PhiNameRef('buffer'), new PhiNameRef('element'), new PhiNameRef('transform'))));
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinTo_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
          }
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinToString', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_0'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_1'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_2'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_3'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_4'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_5'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_6'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('joinToString_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_7'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('asIterable$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_0'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_1'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_2'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_3'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_4'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_5'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_6'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asIterable$lambda_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_7'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_0'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_1'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_2'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_3'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_4'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_5'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_6'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_7'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('average', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('sum', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element')), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiDot(new PhiNameRef('sum_23'), 'add'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element')), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiDot(new PhiNameRef('sum_23'), 'add'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('asList', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('ArrayList'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('asList$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$asList'), new PhiNameRef('this$asList')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractList'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('asList_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('asList$ObjectLiteral'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('copyOf_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), 0.0));
    }))));
    phiVars(array(array('copyOf_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), 0.0));
    }))));
    phiVars(array(array('copyOf_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), 0.0));
    }))));
    phiVars(array(array('copyOf_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO')));
    }))));
    phiVars(array(array('copyOf_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), 0.0));
    }))));
    phiVars(array(array('copyOf_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), 0.0));
    }))));
    phiVars(array(array('copyOf_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), false));
    }))));
    phiVars(array(array('copyOf_15', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), 0.0));
    }))));
    phiVars(array(array('copyOf_16', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayCopyResize'), array(new PhiNameRef('$receiver'), new PhiNameRef('newSize'), null));
    }))));
    phiVars(array(array('plus_17', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_18', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_19', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_20', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_21', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_22', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_23', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_24', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('plus_25', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('arrayPlusCollection'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))));
    phiVars(array(array('sort$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'compareTo_11rb$'), array(new PhiNameRef('b')));
    }))));
    phiVars(array(array('sort_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('sort$lambda'))));
      }
    }))));
    phiVars(array(array('sort$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    }))));
    phiVars(array(array('sort_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('sort$lambda_0'))));
      }
    }))));
    phiVars(array(array('sortWith$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$comparator'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b')));
      });
    }))));
    phiVars(array(array('sortWith_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiInvocation(new PhiNameRef('sortWith$lambda'), array(new PhiNameRef('comparator'))))));
      }
    }))));
    phiVars(array(array('toTypedArray_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))));
    phiVars(array(array('toTypedArray_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))));
    phiVars(array(array('toTypedArray_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))));
    phiVars(array(array('toTypedArray_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))));
    phiVars(array(array('toTypedArray_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))));
    phiVars(array(array('toTypedArray_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))));
    phiVars(array(array('toTypedArray_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))));
    phiVars(array(array('toTypedArray$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('this$toTypedArray'), new PhiNameRef('i'))));
      });
    }))));
    phiVars(array(array('toTypedArray_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArrayF'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiInvocation(new PhiNameRef('toTypedArray$lambda'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('contains_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_11rb$'), array(new PhiNameRef('element')));
      }
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_8'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('elementAt$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral("Collection doesn't contain element at index "), new PhiNameRef('closure$index')), new PhiStringLiteral('.')))));
      });
    }))));
    phiVars(array(array('elementAt_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index')));
      }
      return new PhiInvocation(new PhiNameRef('elementAtOrElse_8'), array(new PhiNameRef('$receiver'), new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('elementAt$lambda'), array(new PhiNameRef('index')))));
    }))));
    phiVars(array(array('elementAtOrElse_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_55thoc$'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index')));
      }
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      phiVars(array(array('count_26', 0.0)));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))) {
          return new PhiNameRef('element');
        }
      }
      return new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index')));
    }))));
    phiVars(array(array('elementAtOrNull_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiInvocation(new PhiNameRef('getOrNull_8'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        return null;
      }
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      phiVars(array(array('count_26', 0.0)));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))));
    phiVars(array(array('first_17', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiInvocation(new PhiNameRef('first_18'), array(new PhiNameRef('$receiver')));
      }
       else {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
          phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Collection is empty.'))));
        }
        return new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array());
      }
    }))));
    phiVars(array(array('first_18', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('List is empty.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0));
    }))));
    phiVars(array(array('firstOrNull_18', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()))) {
          return null;
        }
         else {
          return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0));
        }
      }
       else {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
          return null;
        }
        return new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array());
      }
    }))));
    phiVars(array(array('firstOrNull_19', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()), null, new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0)));
    }))));
    phiVars(array(array('getOrNull_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))), null);
    }))));
    phiVars(array(array('indexOf_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'indexOf_11rb$'), array(new PhiNameRef('element')));
      }
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiNameRef('item'))))) {
          return new PhiNameRef('index');
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('indexOf_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'indexOf_11rb$'), array(new PhiNameRef('element')));
    }))));
    phiVars(array(array('last_17', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiInvocation(new PhiNameRef('last_18'), array(new PhiNameRef('$receiver')));
      }
       else {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
          phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Collection is empty.'))));
        }
        phiVars(array(array('last_25', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())));
        }
        return new PhiNameRef('last_25');
      }
    }))));
    phiVars(array(array('last_18', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('List is empty.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('lastIndexOf_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'lastIndexOf_11rb$'), array(new PhiNameRef('element')));
      }
      phiVars(array(array('lastIndex', new PhiPrefixOperation('-', 1.0))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastIndex'), new PhiNameRef('index')));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('lastIndex');
    }))));
    phiVars(array(array('lastIndexOf_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'lastIndexOf_11rb$'), array(new PhiNameRef('element')));
    }))));
    phiVars(array(array('lastOrNull_19', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()), null, new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0))));
      }
       else {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
          return null;
        }
        phiVars(array(array('last_25', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())));
        }
        return new PhiNameRef('last_25');
      }
    }))));
    phiVars(array(array('lastOrNull_20', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()), null, new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0))));
    }))));
    phiVars(array(array('single_17', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiInvocation(new PhiNameRef('single_18'), array(new PhiNameRef('$receiver')));
      }
       else {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
          phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Collection is empty.'))));
        }
        phiVars(array(array('single_24', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array()))) {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Collection has more than one element.'))));
        }
        return new PhiNameRef('single_24');
      }
    }))));
    phiVars(array(array('single_18', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('List is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0))));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('List has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$_0');
    }))));
    phiVars(array(array('singleOrNull_17', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
        return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0)), null);
      }
       else {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
          return null;
        }
        phiVars(array(array('single_24', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array()))) {
          return null;
        }
        return new PhiNameRef('single_24');
      }
    }))));
    phiVars(array(array('singleOrNull_18', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0)), null);
    }))));
    phiVars(array(array('drop_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
      }
      phiVars(array(array('list', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        phiVars(array(array('resultSize', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('n')), 0.0))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiNameRef('resultSize'), 0.0))) {
          return new PhiInvocation(new PhiNameRef('emptyList'), array());
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('resultSize'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiNameRef('last_17'), array(new PhiNameRef('$receiver')))));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('list'), new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('resultSize')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))))) {
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('RandomAccess'))))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0)));
            phiVars(array(array('index', new PhiNameRef('n'))));
            for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
              phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))))));
            }
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiNameRef('n')))));
            while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
              phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
              phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            }
          }
          return new PhiNameRef('list');
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('list'), new PhiInvocation(new PhiNameRef('ArrayList_init'), array())));
      }
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'hasNext'), array())) {
        phiVars(array(array('item_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_2'), 1.0), 0.0))), new PhiNameRef('tmp$_2')), new PhiNameRef('n')))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item_0'))));
        }
      }
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyList'), array(new PhiNameRef('list')));
    }))));
    phiVars(array(array('dropLast_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_8'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('filterIndexedTo$lambda_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterNotNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterNotNullTo_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('ArrayList_init'), array())));
    }))));
    phiVars(array(array('filterNotNullTo_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('element'), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('slice_17', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'subList_vux9f0$'), array(new PhiDot(new PhiNameRef('indices'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('indices'), 'endInclusive'), 1.0), 0.0)))));
    }))));
    phiVars(array(array('slice_18', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('take_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'size')))) {
          return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiNameRef('first_17'), array(new PhiNameRef('$receiver')))));
        }
      }
      phiVars(array(array('count_26', 0.0)));
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('n')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyList'), array(new PhiNameRef('list')));
    }))));
    phiVars(array(array('takeLast_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('size', new PhiDot(new PhiNameRef('$receiver'), 'size'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiNameRef('size')))) {
        return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiNameRef('last_18'), array(new PhiNameRef('$receiver')))));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('n'))))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('RandomAccess'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
        phiVars(array(array('index', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), new PhiNameRef('n')), 0.0))));
        for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))))));
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiNameRef('n')))));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
          phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('takeLastWhile$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        while (new PhiInvocation(new PhiDot(new PhiNameRef('closure$iterator'), 'hasNext'), array())) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('closure$iterator'), 'next'), array()))));
        }
      });
    }))));
    phiVars(array(array('reverse_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('midPoint', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('$receiver'), 'size'), 2.0), 0.0), 1.0), 0.0))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('midPoint'), 0.0))) {
        return;
      }
      phiVars(array(array('reverseIndex', new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('midPoint')); new PhiNameRef('index')++) {
        phiVars(array(array('tmp', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'set_wxm5ur$'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('reverseIndex'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'set_wxm5ur$'), array(new PhiNameRef('reverseIndex'), new PhiNameRef('tmp'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reverseIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('reverseIndex'), 1.0), 0.0)));
      }
    }))));
    phiVars(array(array('reversed', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))), new PhiBinaryOperation('<=', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0)))) {
        return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
      }
      phiVars(array(array('list', new PhiInvocation(new PhiNameRef('toMutableList_8'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reverse_8'), array(new PhiNameRef('list'))));
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('sortDescending_7', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('reverseOrder'), array()))));
    }))));
    phiVars(array(array('sorted_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
        }
        phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'copyToArray'), array(new PhiNameRef('$receiver')))))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort_1'), array(new PhiNameRef('$receiver_0'))));
        return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
      }
      phiVars(array(array('$receiver_1', new PhiInvocation(new PhiNameRef('toMutableList_8'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort'), array(new PhiNameRef('$receiver_1'))));
      return new PhiNameRef('$receiver_1');
    }))));
    phiVars(array(array('sortedDescending_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('sortedWith_8'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('reverseOrder'), array())));
    }))));
    phiVars(array(array('sortedWith_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
        }
        phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Array'), 'isArray'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'copyToArray'), array(new PhiNameRef('$receiver')))))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('comparator'))));
        return new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('$receiver_0')));
      }
      phiVars(array(array('$receiver_1', new PhiInvocation(new PhiNameRef('toMutableList_8'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith'), array(new PhiNameRef('$receiver_1'), new PhiNameRef('comparator'))));
      return new PhiNameRef('$receiver_1');
    }))));
    phiVars(array(array('toBooleanArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), false)))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toByteArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), 0.0)))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toCharArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), 0.0)))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toDoubleArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), 0.0)))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toFloatArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), 0.0)))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toIntArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), 0.0)))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toLongArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toShortArray_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), 0.0)))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toCollection_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toHashSet_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_8'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('$receiver'), 12.0))))))));
    }))));
    phiVars(array(array('toList_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0)), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()), 'next'), array()))))));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('toMutableList_9'), array(new PhiNameRef('$receiver')))));
          }
        }
        return new PhiNameRef('tmp$_0');
      }
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyList'), array(new PhiInvocation(new PhiNameRef('toMutableList_8'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('toMutableList_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        return new PhiInvocation(new PhiNameRef('toMutableList_9'), array(new PhiNameRef('$receiver')));
      }
      return new PhiInvocation(new PhiNameRef('toCollection_8'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('ArrayList_init'), array())));
    }))));
    phiVars(array(array('toMutableList_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('ArrayList_init_0'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('toSet_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0)), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()), 'next'), array()))))));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('toCollection_8'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'size')))))))));
          }
        }
        return new PhiNameRef('tmp$_0');
      }
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlySet'), array(new PhiInvocation(new PhiNameRef('toCollection_8'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_0'), array())))));
    }))));
    phiVars(array(array('groupByTo$lambda_17', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_18', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupingBy$ObjectLiteral_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$groupingBy'), new PhiNameRef('this$groupingBy')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), new PhiNameRef('closure$keySelector')));
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('index'), new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('withIndex$lambda_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this$withIndex'), 'iterator'), array());
      });
    }))));
    phiVars(array(array('withIndex_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_8'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('distinct_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiInvocation(new PhiNameRef('toMutableSet_8'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('intersect_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_8'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('retainAll'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('subtract_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_8'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_1'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('toMutableSet_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_1'), array(new PhiNameRef('$receiver')))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toCollection_8'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_0'), array())))));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('union_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toMutableSet_8'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('set_19'), new PhiNameRef('other'))));
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('any_18', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('count_17', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiNameRef('count_26');
    }))));
    phiVars(array(array('max_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('min_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('none_17', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('onEach$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiNameRef('closure$action'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('requireNoNulls_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('element'), null))) {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('null element found in '), new PhiNameRef('$receiver')), new PhiStringLiteral('.')))));
        }
      }
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')), new PhiNameRef('Iterable'))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))));
    phiVars(array(array('requireNoNulls_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('element'), null))) {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('null element found in '), new PhiNameRef('$receiver')), new PhiStringLiteral('.')))));
        }
      }
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')), new PhiNameRef('List'))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))));
    phiVars(array(array('minus', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('$receiver'), 10.0)))))));
      phiVars(array(array('removed', new PhiObjectLiteral(array(array(new PhiNameRef('v'), false))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('predicate$result', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiDot(new PhiNameRef('removed'), 'v')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element_0'), new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('removed'), 'v'), true));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('predicate$result'), false));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('predicate$result'), true));
        }
        if (phiEvaluateToBoolean(new PhiNameRef('predicate$result'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiNameRef('element_0'))));
        }
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('minus_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
      }
      phiVars(array(array('other', new PhiInvocation(new PhiNameRef('toHashSet'), array(new PhiNameRef('elements'))))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'contains_11rb$'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('minus_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('other', new PhiInvocation(new PhiNameRef('convertToSetForSetOperationWith'), array(new PhiNameRef('elements'), new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
      }
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'contains_11rb$'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('minus_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('other', new PhiInvocation(new PhiNameRef('toHashSet_9'), array(new PhiNameRef('elements'))))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiNameRef('toList_8'), array(new PhiNameRef('$receiver')));
      }
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'contains_11rb$'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('plus_26', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        return new PhiInvocation(new PhiNameRef('plus_27'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
      }
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result'), new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiNameRef('element'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_27', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiNameRef('element'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_28', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        return new PhiInvocation(new PhiNameRef('plus_29'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
      }
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result'), new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_29', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiDot(new PhiNameRef('elements'), 'length')), 0.0))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_30', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        return new PhiInvocation(new PhiNameRef('plus_31'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
      }
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result'), new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_31', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('elements'), new PhiNameRef('Collection'))))) {
        phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiDot(new PhiNameRef('elements'), 'size')), 0.0))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('elements'))));
        return new PhiNameRef('result');
      }
       else {
        phiVars(array(array('result_0', new PhiInvocation(new PhiNameRef('ArrayList_init_0'), array(new PhiNameRef('$receiver'))))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result_0'), new PhiNameRef('elements'))));
        return new PhiNameRef('result_0');
      }
    }))));
    phiVars(array(array('plus_32', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result'), new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_1'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_33', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'size'), 10.0), 0.0))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_1'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('zip_51', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('other'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('other'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('zip_53', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)))))))));
      while (new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'hasNext'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'hasNext'), array()))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'next'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'next'), array()))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('joinTo_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiNameRef('appendElement'), array(new PhiNameRef('buffer'), new PhiNameRef('element'), new PhiNameRef('transform'))));
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinToString_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_8'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('asSequence$lambda_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this$asSequence'), 'iterator'), array());
      });
    }))));
    phiVars(array(array('asSequence_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_8'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('average_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_12', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_13', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_15', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_16', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('sum_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_12', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_13', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element')), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiDot(new PhiNameRef('sum_23'), 'add'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_15', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_16', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('maxOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('a'), new PhiNameRef('b'))), 0.0), new PhiNameRef('a'), new PhiNameRef('b'));
    }))));
    phiVars(array(array('maxOf_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('maxOf'), array(new PhiNameRef('a'), new PhiInvocation(new PhiNameRef('maxOf'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))));
    phiVars(array(array('maxOf_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('maxOf_14'), array(new PhiNameRef('a'), new PhiInvocation(new PhiNameRef('maxOf_14'), array(new PhiNameRef('b'), new PhiNameRef('c'), new PhiNameRef('comparator'))), new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('maxOf_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))), 0.0), new PhiNameRef('a'), new PhiNameRef('b'));
    }))));
    phiVars(array(array('minOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('a'), new PhiNameRef('b'))), 0.0), new PhiNameRef('a'), new PhiNameRef('b'));
    }))));
    phiVars(array(array('minOf_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('minOf_0'), array(new PhiNameRef('a'), new PhiInvocation(new PhiNameRef('minOf_0'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))));
    phiVars(array(array('minOf_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('minOf_14'), array(new PhiNameRef('a'), new PhiInvocation(new PhiNameRef('minOf_14'), array(new PhiNameRef('b'), new PhiNameRef('c'), new PhiNameRef('comparator'))), new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('minOf_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))), 0.0), new PhiNameRef('a'), new PhiNameRef('b'));
    }))));
    phiVars(array(array('toList_9', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'size'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiDot(new PhiNameRef('first_24'), 'key'), new PhiDot(new PhiNameRef('first_24'), 'value')))));
      }
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiDot(new PhiNameRef('first_24'), 'key'), new PhiDot(new PhiNameRef('first_24'), 'value'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiDot(new PhiNameRef('$receiver_0'), 'key'), new PhiDot(new PhiNameRef('$receiver_0'), 'value'))))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('mapNotNullTo$lambda$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('any_19', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('minWith_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('minWith_8'), array(new PhiDot(new PhiNameRef('$receiver'), 'entries'), new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('none_19', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('onEach$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiNameRef('closure$action'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('asSequence_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('asSequence_8'), array(new PhiDot(new PhiNameRef('$receiver'), 'entries')));
    }))));
    phiVars(array(array('contains_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('value')))));
    }))));
    phiVars(array(array('contains_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toIntExactOrNull'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_15', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toLongExactOrNull'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_16', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toByteExactOrNull'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_17', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toShortExactOrNull'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_18', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_19', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toIntExactOrNull_0'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_20', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toLongExactOrNull_0'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toByteExactOrNull_0'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_22', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toShortExactOrNull_0'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_23', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_24', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('value')))));
    }))));
    phiVars(array(array('contains_25', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toByteExactOrNull_1'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_26', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toShortExactOrNull_1'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_27', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_28', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_29', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toIntExactOrNull_1'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_30', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toByteExactOrNull_2'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_31', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toShortExactOrNull_2'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_32', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('value'), 'toNumber'), array())));
    }))));
    phiVars(array(array('contains_33', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('value'), 'toNumber'), array())));
    }))));
    phiVars(array(array('contains_34', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_35', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('value')))));
    }))));
    phiVars(array(array('contains_36', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('it', new PhiInvocation(new PhiNameRef('toByteExactOrNull_3'), array(new PhiNameRef('value'))))));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('it'), null), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('it'))), false);
    }))));
    phiVars(array(array('contains_37', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('contains_38', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'contains_mef7kx$'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('downTo_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('to_0'))), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
    }))));
    phiVars(array(array('downTo_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('CharProgression$Companion_getInstance'), array()), 'fromClosedRange_ayra44$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('to_0'))), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('to_0'))), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
    }))));
    phiVars(array(array('downTo_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_7', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('$receiver'))), new PhiNameRef('to_0'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
    }))));
    phiVars(array(array('downTo_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
    }))));
    phiVars(array(array('downTo_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('$receiver'))), new PhiNameRef('to_0'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
    }))));
    phiVars(array(array('downTo_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('$receiver'))), new PhiNameRef('to_0'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
    }))));
    phiVars(array(array('downTo_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('to_0'))), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'NEG_ONE')));
    }))));
    phiVars(array(array('downTo_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('downTo_15', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('to_0'), new PhiPrefixOperation('-', 1.0)));
    }))));
    phiVars(array(array('reversed_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiDot(new PhiNameRef('$receiver'), 'last'), new PhiDot(new PhiNameRef('$receiver'), 'first'), new PhiPrefixOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'step'))));
    }))));
    phiVars(array(array('reversed_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiDot(new PhiNameRef('$receiver'), 'last'), new PhiDot(new PhiNameRef('$receiver'), 'first'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'step'), 'unaryMinus'), array())));
    }))));
    phiVars(array(array('reversed_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('CharProgression$Companion_getInstance'), array()), 'fromClosedRange_ayra44$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('$receiver'), 'last'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('$receiver'), 'first'))), new PhiPrefixOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'step'))));
    }))));
    phiVars(array(array('step', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('checkStepIsPositive'), array(new PhiBinaryOperation('>', new PhiNameRef('step_2'), 0.0), new PhiNameRef('step_2'))));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('IntProgression$Companion_getInstance'), array()), 'fromClosedRange_qt1dr2$'), array(new PhiDot(new PhiNameRef('$receiver'), 'first'), new PhiDot(new PhiNameRef('$receiver'), 'last'), new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'step'), 0.0), new PhiNameRef('step_2'), new PhiPrefixOperation('-', new PhiNameRef('step_2')))));
    }))));
    phiVars(array(array('step_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('checkStepIsPositive'), array(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('step_2'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0), new PhiNameRef('step_2'))));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('LongProgression$Companion_getInstance'), array()), 'fromClosedRange_b9bd0d$'), array(new PhiDot(new PhiNameRef('$receiver'), 'first'), new PhiDot(new PhiNameRef('$receiver'), 'last'), new PhiConditional(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'step'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0), new PhiNameRef('step_2'), new PhiInvocation(new PhiDot(new PhiNameRef('step_2'), 'unaryMinus'), array()))));
    }))));
    phiVars(array(array('step_1', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('checkStepIsPositive'), array(new PhiBinaryOperation('>', new PhiNameRef('step_2'), 0.0), new PhiNameRef('step_2'))));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('CharProgression$Companion_getInstance'), array()), 'fromClosedRange_ayra44$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('$receiver'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('$receiver'), 'last'))), new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'step'), 0.0), new PhiNameRef('step_2'), new PhiPrefixOperation('-', new PhiNameRef('step_2')))));
    }))));
    phiVars(array(array('toByteExactOrNull_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toByteExactOrNull_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiPrefixOperation('-', 128.0))), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(127.0)))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toInt'), array()))), null);
    }))));
    phiVars(array(array('toByteExactOrNull_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiNameRef('contains_34'), array(new PhiNew(new PhiNameRef('IntRange'), array(new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MAX_VALUE'))), new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toByteExactOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('rangeTo'), array(new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toByteExactOrNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'rangeTo_38ydlf$'), array(new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toIntExactOrNull_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiPrefixOperation('-', 2.147483648E9))), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(2.147483647E9)))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toInt'), array()), null);
    }))));
    phiVars(array(array('toIntExactOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('rangeTo'), array(new PhiDot(new PhiNameRef('IntCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('IntCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiBinaryOperation('|', new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('toIntExactOrNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'rangeTo_38ydlf$'), array(new PhiDot(new PhiNameRef('IntCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('IntCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiBinaryOperation('|', new PhiNameRef('$receiver'), 0.0), null);
    }))));
    phiVars(array(array('toLongExactOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('rangeTo'), array(new PhiInvocation(new PhiDot(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(0.0, new PhiPrefixOperation('-', 2.147483648E9))), 'toNumber'), array()), new PhiInvocation(new PhiDot(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(new PhiPrefixOperation('-', 1.0), 2.147483647E9)), 'toNumber'), array()))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toLongExactOrNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'rangeTo_38ydlf$'), array(new PhiInvocation(new PhiDot(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(0.0, new PhiPrefixOperation('-', 2.147483648E9))), 'toNumber'), array()), new PhiInvocation(new PhiDot(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(new PhiPrefixOperation('-', 1.0), 2.147483647E9)), 'toNumber'), array()))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromNumber'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toShortExactOrNull_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toShortExactOrNull_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiPrefixOperation('-', 32768.0))), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(32767.0)))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toInt'), array()))), null);
    }))));
    phiVars(array(array('toShortExactOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('rangeTo'), array(new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('toShortExactOrNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'rangeTo_38ydlf$'), array(new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MIN_VALUE'), new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MAX_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiNameRef('$receiver'))), null);
    }))));
    phiVars(array(array('until', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('to_0'))), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))))));
    }))));
    phiVars(array(array('until_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('to_0'))), 0.0))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('CharRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiNew(new PhiNameRef('CharRange'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(new PhiBinaryOperation('-', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('to_0'))), 1.0)))))));
    }))));
    phiVars(array(array('until_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiNameRef('to_0'), new PhiDot(new PhiNameRef('IntCompanionObject'), 'MIN_VALUE')))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('IntRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('to_0'))), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))))));
    }))));
    phiVars(array(array('until_6', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiNameRef('to_0'), new PhiDot(new PhiNameRef('IntCompanionObject'), 'MIN_VALUE')))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('IntRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_7', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiNameRef('to_0'), new PhiDot(new PhiNameRef('IntCompanionObject'), 'MIN_VALUE')))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('IntRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_8', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'compareTo_11rb$'), array(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(0.0, new PhiPrefixOperation('-', 2.147483648E9))))), 0.0))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('LongRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('$receiver'))), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))))));
    }))));
    phiVars(array(array('until_9', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'compareTo_11rb$'), array(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(0.0, new PhiPrefixOperation('-', 2.147483648E9))))), 0.0))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('LongRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))))));
    }))));
    phiVars(array(array('until_10', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'compareTo_11rb$'), array(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(0.0, new PhiPrefixOperation('-', 2.147483648E9))))), 0.0))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('LongRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('$receiver'))), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))))));
    }))));
    phiVars(array(array('until_11', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'compareTo_11rb$'), array(new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(0.0, new PhiPrefixOperation('-', 2.147483648E9))))), 0.0))) {
        return new PhiDot(new PhiInvocation(new PhiNameRef('LongRange$Companion_getInstance'), array()), 'EMPTY');
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('$receiver'))), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiNameRef('to_0'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))))));
    }))));
    phiVars(array(array('until_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'rangeTo'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('to_0'))), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(1.0))))));
    }))));
    phiVars(array(array('until_14', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('until_15', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('to_0'), 1.0), 0.0)));
    }))));
    phiVars(array(array('coerceAtLeast_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiNameRef('minimumValue'))), 0.0), new PhiNameRef('minimumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtLeast_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')), new PhiNameRef('minimumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtLeast_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')), new PhiNameRef('minimumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtLeast', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')), new PhiNameRef('minimumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtLeast_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'compareTo_11rb$'), array(new PhiNameRef('minimumValue'))), 0.0), new PhiNameRef('minimumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtLeast_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')), new PhiNameRef('minimumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtLeast_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')), new PhiNameRef('minimumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtMost', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiNameRef('maximumValue'))), 0.0), new PhiNameRef('maximumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtMost_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')), new PhiNameRef('maximumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtMost_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')), new PhiNameRef('maximumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtMost_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')), new PhiNameRef('maximumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtMost_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'compareTo_11rb$'), array(new PhiNameRef('maximumValue'))), 0.0), new PhiNameRef('maximumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtMost_4', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')), new PhiNameRef('maximumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceAtMost_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')), new PhiNameRef('maximumValue'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('coerceIn', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('minimumValue'), null), new PhiBinaryOperation('!==', new PhiNameRef('maximumValue'), null)))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minimumValue'), new PhiNameRef('maximumValue'))), 0.0))) {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: maximum '), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('maximumValue')))), new PhiStringLiteral(' is less than minimum ')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('minimumValue')))), new PhiStringLiteral('.')))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiNameRef('minimumValue'))), 0.0))) {
          return new PhiNameRef('minimumValue');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiNameRef('maximumValue'))), 0.0))) {
          return new PhiNameRef('maximumValue');
        }
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('minimumValue'), null), new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiNameRef('minimumValue'))), 0.0)))) {
          return new PhiNameRef('minimumValue');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('maximumValue'), null), new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiNameRef('maximumValue'))), 0.0)))) {
          return new PhiNameRef('maximumValue');
        }
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('coerceIn_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('minimumValue'), new PhiNameRef('maximumValue')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: maximum '), new PhiNameRef('maximumValue')), new PhiStringLiteral(' is less than minimum ')), new PhiNameRef('minimumValue')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')))) {
        return new PhiNameRef('minimumValue');
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')))) {
        return new PhiNameRef('maximumValue');
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('coerceIn_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('minimumValue'), new PhiNameRef('maximumValue')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: maximum '), new PhiNameRef('maximumValue')), new PhiStringLiteral(' is less than minimum ')), new PhiNameRef('minimumValue')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')))) {
        return new PhiNameRef('minimumValue');
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')))) {
        return new PhiNameRef('maximumValue');
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('coerceIn_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('minimumValue'), new PhiNameRef('maximumValue')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: maximum '), new PhiNameRef('maximumValue')), new PhiStringLiteral(' is less than minimum ')), new PhiNameRef('minimumValue')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')))) {
        return new PhiNameRef('minimumValue');
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')))) {
        return new PhiNameRef('maximumValue');
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('coerceIn_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('minimumValue'), 'compareTo_11rb$'), array(new PhiNameRef('maximumValue'))), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: maximum '), new PhiNameRef('maximumValue')), new PhiStringLiteral(' is less than minimum ')), new PhiNameRef('minimumValue')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'compareTo_11rb$'), array(new PhiNameRef('minimumValue'))), 0.0))) {
        return new PhiNameRef('minimumValue');
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'compareTo_11rb$'), array(new PhiNameRef('maximumValue'))), 0.0))) {
        return new PhiNameRef('maximumValue');
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('coerceIn_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('minimumValue'), new PhiNameRef('maximumValue')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: maximum '), new PhiNameRef('maximumValue')), new PhiStringLiteral(' is less than minimum ')), new PhiNameRef('minimumValue')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')))) {
        return new PhiNameRef('minimumValue');
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')))) {
        return new PhiNameRef('maximumValue');
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('coerceIn_5', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('minimumValue'), new PhiNameRef('maximumValue')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: maximum '), new PhiNameRef('maximumValue')), new PhiStringLiteral(' is less than minimum ')), new PhiNameRef('minimumValue')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiNameRef('minimumValue')))) {
        return new PhiNameRef('minimumValue');
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiNameRef('maximumValue')))) {
        return new PhiNameRef('maximumValue');
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('coerceIn_6', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'isEmpty'), array()))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: '), new PhiNameRef('range')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'lessThanOrEquals_n65qkk$'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'start'))), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'lessThanOrEquals_n65qkk$'), array(new PhiDot(new PhiNameRef('range'), 'start'), new PhiNameRef('$receiver'))))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'start')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'lessThanOrEquals_n65qkk$'), array(new PhiDot(new PhiNameRef('range'), 'endInclusive'), new PhiNameRef('$receiver'))), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'lessThanOrEquals_n65qkk$'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'endInclusive'))))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'endInclusive')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('coerceIn_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('range'), new PhiNameRef('ClosedFloatingPointRange'))))) {
        return new PhiInvocation(new PhiNameRef('coerceIn_6'), array(new PhiNameRef('$receiver'), new PhiNameRef('range')));
      }
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'isEmpty'), array()))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: '), new PhiNameRef('range')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'start'))), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'start')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'endInclusive'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'endInclusive')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('coerceIn_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('range'), new PhiNameRef('ClosedFloatingPointRange'))))) {
        return new PhiInvocation(new PhiNameRef('coerceIn_6'), array(new PhiNameRef('$receiver'), new PhiNameRef('range')));
      }
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'isEmpty'), array()))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: '), new PhiNameRef('range')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'start')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'start')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'endInclusive')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'endInclusive')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('coerceIn_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('range'), new PhiNameRef('ClosedFloatingPointRange'))))) {
        return new PhiInvocation(new PhiNameRef('coerceIn_6'), array(new PhiNameRef('$receiver'), new PhiNameRef('range')));
      }
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('range'), 'isEmpty'), array()))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Cannot coerce value to an empty range: '), new PhiNameRef('range')), new PhiStringLiteral('.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'compareTo_11rb$'), array(new PhiDot(new PhiNameRef('range'), 'start'))), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'start')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'compareTo_11rb$'), array(new PhiDot(new PhiNameRef('range'), 'endInclusive'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('range'), 'endInclusive')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('contains_39', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_10'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))), 0.0);
    }))));
    phiVars(array(array('elementAt$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral("Sequence doesn't contain element at index "), new PhiNameRef('closure$index')), new PhiStringLiteral('.')))));
      });
    }))));
    phiVars(array(array('elementAt_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('elementAtOrElse_10'), array(new PhiNameRef('$receiver'), new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('elementAt$lambda_0'), array(new PhiNameRef('index')))));
    }))));
    phiVars(array(array('elementAtOrElse_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index')));
      }
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      phiVars(array(array('count_26', 0.0)));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))) {
          return new PhiNameRef('element');
        }
      }
      return new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index')));
    }))));
    phiVars(array(array('elementAtOrNull_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        return null;
      }
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      phiVars(array(array('count_26', 0.0)));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('count_26')), new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))));
    phiVars(array(array('first_20', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Sequence is empty.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array());
    }))));
    phiVars(array(array('firstOrNull_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array());
    }))));
    phiVars(array(array('indexOf_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiNameRef('item'))))) {
          return new PhiNameRef('index');
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('last_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Sequence is empty.'))));
      }
      phiVars(array(array('last_25', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())));
      }
      return new PhiNameRef('last_25');
    }))));
    phiVars(array(array('lastIndexOf_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('lastIndex', new PhiPrefixOperation('-', 1.0))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element'), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastIndex'), new PhiNameRef('index')));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('lastIndex');
    }))));
    phiVars(array(array('lastOrNull_22', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('last_25', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())));
      }
      return new PhiNameRef('last_25');
    }))));
    phiVars(array(array('single_20', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Sequence is empty.'))));
      }
      phiVars(array(array('single_24', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array()))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Sequence has more than one element.'))));
      }
      return new PhiNameRef('single_24');
    }))));
    phiVars(array(array('singleOrNull_20', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('single_24', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array()))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))));
    phiVars(array(array('drop_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('DropTakeSequence'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'drop_za3lpa$'), array(new PhiNameRef('n')))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNew(new PhiNameRef('DropSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('n')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('dropWhile_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('DropWhileSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('predicate')));
    }))));
    phiVars(array(array('filter_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('FilteringSequence'), array(new PhiNameRef('$receiver'), true, new PhiNameRef('predicate')));
    }))));
    phiVars(array(array('filterIndexed$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiDot(new PhiNameRef('it'), 'index'), new PhiDot(new PhiNameRef('it'), 'value')));
      });
    }))));
    phiVars(array(array('filterIndexed$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('it'), 'value');
    }))));
    phiVars(array(array('filterIndexed_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TransformingSequence'), array(new PhiNew(new PhiNameRef('FilteringSequence'), array(new PhiNew(new PhiNameRef('IndexingSequence'), array(new PhiNameRef('$receiver'))), true, new PhiInvocation(new PhiNameRef('filterIndexed$lambda'), array(new PhiNameRef('predicate'))))), new PhiNameRef('filterIndexed$lambda_0')));
    }))));
    phiVars(array(array('filterIndexedTo$lambda_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      });
    }))));
    phiVars(array(array('filterIsInstance$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('isR'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('filterNot_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('FilteringSequence'), array(new PhiNameRef('$receiver'), false, new PhiNameRef('predicate')));
    }))));
    phiVars(array(array('filterNotNull$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('==', new PhiNameRef('it'), null);
    }))));
    phiVars(array(array('filterNotNull_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('filterNot_9'), array(new PhiNameRef('$receiver'), new PhiNameRef('filterNotNull$lambda')))), new PhiNameRef('Sequence_0'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))));
    phiVars(array(array('filterNotNullTo_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('element'), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('take_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested element count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('emptySequence'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('DropTakeSequence'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'take_za3lpa$'), array(new PhiNameRef('n')))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNew(new PhiNameRef('TakeSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('n')))));
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('takeWhile_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TakeWhileSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('predicate')));
    }))));
    phiVars(array(array('sorted$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$sorted'), new PhiNameRef('this$sorted')));
    }))));
    phiVars(array(array('sorted_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('sorted$ObjectLiteral'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('sortedDescending_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('sortedWith_9'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('reverseOrder'), array())));
    }))));
    phiVars(array(array('sortedWith$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$sortedWith'), new PhiNameRef('this$sortedWith')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
    }))));
    phiVars(array(array('sortedWith_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('sortedWith$ObjectLiteral'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('toCollection_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toHashSet_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_9'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init'), array())));
    }))));
    phiVars(array(array('toList_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyList'), array(new PhiInvocation(new PhiNameRef('toMutableList_10'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('toMutableList_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_9'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('ArrayList_init'), array())));
    }))));
    phiVars(array(array('toSet_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlySet'), array(new PhiInvocation(new PhiNameRef('toCollection_9'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_0'), array())))));
    }))));
    phiVars(array(array('flatMap$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('it'), 'iterator'), array());
    }))));
    phiVars(array(array('flatMap_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('FlatteningSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('transform'), new PhiNameRef('flatMap$lambda')));
    }))));
    phiVars(array(array('groupByTo$lambda_19', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_20', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupingBy$ObjectLiteral_1', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$groupingBy'), new PhiNameRef('this$groupingBy')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), new PhiNameRef('closure$keySelector')));
    }))));
    phiVars(array(array('map_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TransformingSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('transform')));
    }))));
    phiVars(array(array('mapIndexed_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TransformingIndexedSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('transform')));
    }))));
    phiVars(array(array('mapIndexedNotNull_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterNotNull_1'), array(new PhiNew(new PhiNameRef('TransformingIndexedSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('transform')))));
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('index'), new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('mapNotNull_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterNotNull_1'), array(new PhiNew(new PhiNameRef('TransformingSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('transform')))));
    }))));
    phiVars(array(array('mapNotNullTo$lambda$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('withIndex_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingSequence'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('distinct$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('it');
    }))));
    phiVars(array(array('distinct_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('distinctBy_9'), array(new PhiNameRef('$receiver'), new PhiNameRef('distinct$lambda')));
    }))));
    phiVars(array(array('distinctBy_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('DistinctSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('selector')));
    }))));
    phiVars(array(array('toMutableSet_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_0'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('set_19');
    }))));
    phiVars(array(array('any_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('count_22', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiNameRef('count_26');
    }))));
    phiVars(array(array('max_13', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('max_17'))))) {
        return new PhiNameRef('max_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('max_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('max_15', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('maxWith_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('max_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('max_17');
    }))));
    phiVars(array(array('min_13', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('min_17'))))) {
        return new PhiNameRef('min_17');
      }
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('e'))))) {
          return new PhiNameRef('e');
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('min_17'), new PhiNameRef('e')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('min_15', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('minWith_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('min_17'), new PhiNameRef('e'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiNameRef('e')));
        }
      }
      return new PhiNameRef('min_17');
    }))));
    phiVars(array(array('none_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('onEach$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('closure$action'), array(new PhiNameRef('it'))));
        return new PhiNameRef('it');
      });
    }))));
    phiVars(array(array('onEach_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('map_10'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('onEach$lambda_1'), array(new PhiNameRef('action')))));
    }))));
    phiVars(array(array('requireNoNulls$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('it'), null))) {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('null element found in '), new PhiNameRef('this$requireNoNulls')), new PhiStringLiteral('.')))));
        }
        return new PhiNameRef('it');
      });
    }))));
    phiVars(array(array('requireNoNulls_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('map_10'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('requireNoNulls$lambda'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('minus$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiNameRef('this$minus')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$element'), new PhiNameRef('closure$element')));
    }))));
    phiVars(array(array('minus$ObjectLiteral$iterator$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiDot(new PhiNameRef('closure$removed'), 'v')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('it'), new PhiNameRef('closure$element')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('closure$removed'), 'v'), true));
          return false;
        }
         else {
          return true;
        }
      });
    }))));
    phiVars(array(array('minus_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('minus$ObjectLiteral'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))));
    phiVars(array(array('minus$ObjectLiteral_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$elements'), new PhiNameRef('closure$elements')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiNameRef('this$minus')));
    }))));
    phiVars(array(array('minus$ObjectLiteral$iterator$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$other'), 'contains_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('minus_4', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0))) {
        return new PhiNameRef('$receiver');
      }
      return new PhiNew(new PhiNameRef('minus$ObjectLiteral_0'), array(new PhiNameRef('elements'), new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('minus$ObjectLiteral_1', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$elements'), new PhiNameRef('closure$elements')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiNameRef('this$minus')));
    }))));
    phiVars(array(array('minus$ObjectLiteral$iterator$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$other'), 'contains_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('minus_5', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('minus$ObjectLiteral_1'), array(new PhiNameRef('elements'), new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('minus$ObjectLiteral_2', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$elements'), new PhiNameRef('closure$elements')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiNameRef('this$minus')));
    }))));
    phiVars(array(array('minus$ObjectLiteral$iterator$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$other'), 'contains_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('minus_6', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('minus$ObjectLiteral_2'), array(new PhiNameRef('elements'), new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('plus_34', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('flatten'), array(new PhiInvocation(new PhiNameRef('sequenceOf'), array(new PhiArrayLiteral(array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('sequenceOf'), array(new PhiArrayLiteral(array(new PhiNameRef('element')))))))))));
    }))));
    phiVars(array(array('plus_35', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('plus_36'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('elements')))));
    }))));
    phiVars(array(array('plus_36', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('flatten'), array(new PhiInvocation(new PhiNameRef('sequenceOf'), array(new PhiArrayLiteral(array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('asSequence_8'), array(new PhiNameRef('elements')))))))));
    }))));
    phiVars(array(array('plus_37', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('flatten'), array(new PhiInvocation(new PhiNameRef('sequenceOf'), array(new PhiArrayLiteral(array(new PhiNameRef('$receiver'), new PhiNameRef('elements')))))));
    }))));
    phiVars(array(array('zip$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('t1'), new PhiNameRef('t2')));
    }))));
    phiVars(array(array('zip_55', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('MergingSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('other'), new PhiNameRef('zip$lambda')));
    }))));
    phiVars(array(array('zip_56', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('MergingSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('other'), new PhiNameRef('transform')));
    }))));
    phiVars(array(array('joinTo_9', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('prefix'))));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)), new PhiNameRef('count_26')), 1.0))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('separator'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiNameRef('appendElement'), array(new PhiNameRef('buffer'), new PhiNameRef('element'), new PhiNameRef('transform'))));
        }
         else {
          break;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('count_26'), new PhiNameRef('limit'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('truncated'))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('buffer'), 'append_gw00v9$'), array(new PhiNameRef('postfix'))));
      return new PhiNameRef('buffer');
    }))));
    phiVars(array(array('joinToString_9', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('separator'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('separator'), new PhiStringLiteral(', ')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('prefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('prefix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('postfix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('postfix'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 1.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('truncated'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('truncated'), new PhiStringLiteral('...')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('transform'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('transform'), null));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_9'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('StringBuilder'), array()), new PhiNameRef('separator'), new PhiNameRef('prefix'), new PhiNameRef('postfix'), new PhiNameRef('limit'), new PhiNameRef('truncated'), new PhiNameRef('transform'))), 'toString'), array());
    }))));
    phiVars(array(array('asIterable$lambda_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this$asIterable'), 'iterator'), array());
      });
    }))));
    phiVars(array(array('asIterable_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_8'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('average_17', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_18', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_19', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_20', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('average_22', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NaN'), new PhiBinaryOperation('/', new PhiNameRef('sum_23'), new PhiNameRef('count_26')));
    }))));
    phiVars(array(array('sum_17', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_18', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_19', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiNameRef('element')), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_20', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiDot(new PhiNameRef('sum_23'), 'add'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('sum_22', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiNameRef('element')));
      }
      return new PhiNameRef('sum_23');
    }))));
    phiVars(array(array('minus_7', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))))));
      phiVars(array(array('removed', new PhiObjectLiteral(array(array(new PhiNameRef('v'), false))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('predicate$result', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiDot(new PhiNameRef('removed'), 'v')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element_0'), new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('removed'), 'v'), true));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('predicate$result'), false));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('predicate$result'), true));
        }
        if (phiEvaluateToBoolean(new PhiNameRef('predicate$result'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiNameRef('element_0'))));
        }
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('minus_8', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_2'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('minus_9', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('other', new PhiInvocation(new PhiNameRef('convertToSetForSetOperationWith'), array(new PhiNameRef('elements'), new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiNameRef('toSet_8'), array(new PhiNameRef('$receiver')));
      }
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Set'))))) {
        phiVars(array(array('destination', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_0'), array()))));
        phiVars(array(array('tmp$', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'contains_11rb$'), array(new PhiNameRef('element')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
          }
        }
        return new PhiNameRef('destination');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'removeAll_brywnq$'), array(new PhiNameRef('other'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('minus_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_1'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('removeAll_3'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_38', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0))))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiNameRef('element'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_39', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiDot(new PhiNameRef('elements'), 'length')), 0.0))))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_40', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('collectionSizeOrNull'), array(new PhiNameRef('elements')))), null), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('tmp$')), 0.0), null)), null), new PhiNameRef('tmp$_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('*', new PhiDot(new PhiNameRef('$receiver'), 'size'), 2.0), 0.0)))))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('plus_41', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('*', new PhiDot(new PhiNameRef('$receiver'), 'size'), 2.0), 0.0))))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'addAll_brywnq$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_1'), array(new PhiNameRef('result'), new PhiNameRef('elements'))));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('first_22', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Char sequence is empty.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0))));
    }))));
    phiVars(array(array('firstOrNull_23', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)));
    }))));
    phiVars(array(array('getOrNull_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))), null);
    }))));
    phiVars(array(array('last_23', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Char sequence is empty.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))))));
    }))));
    phiVars(array(array('lastOrNull_24', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), null, new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0))));
    }))));
    phiVars(array(array('single_22', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiStringLiteral('Char sequence is empty.'))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0))));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiStringLiteral('Char sequence has more than one element.'))));
        }
      }
      return new PhiNameRef('tmp$_0');
    }))));
    phiVars(array(array('singleOrNull_22', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)), null);
    }))));
    phiVars(array(array('drop_10', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length'))), new PhiDot(new PhiNameRef('$receiver'), 'length')));
    }))));
    phiVars(array(array('drop_11', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))));
    }))));
    phiVars(array(array('dropLast_9', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_10'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('dropLast_10', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiNameRef('take_11'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('n')), 0.0), 0.0))));
    }))));
    phiVars(array(array('filterIndexedTo$lambda_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('closure$predicate'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      });
    }))));
    phiVars(array(array('slice_19', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiStringLiteral('');
      }
      return new PhiInvocation(new PhiNameRef('subSequence_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('indices')));
    }))));
    phiVars(array(array('slice_20', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'isEmpty'), array()))) {
        return new PhiStringLiteral('');
      }
      return new PhiInvocation(new PhiNameRef('substring_1'), array(new PhiNameRef('$receiver'), new PhiNameRef('indices')));
    }))));
    phiVars(array(array('slice_21', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('indices'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('size'), 0.0))) {
        return new PhiStringLiteral('');
      }
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('StringBuilder_init'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('i', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('take_10', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))));
    }))));
    phiVars(array(array('take_11', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('n'), new PhiDot(new PhiNameRef('$receiver'), 'length')))));
    }))));
    phiVars(array(array('takeLast_9', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiVars(array(array('length', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('n'), new PhiNameRef('length')))), 0.0), new PhiNameRef('length')));
    }))));
    phiVars(array(array('takeLast_10', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Requested character count '), new PhiNameRef('n')), new PhiStringLiteral(' is less than zero.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiVars(array(array('length', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('n'), new PhiNameRef('length')))), 0.0)));
    }))));
    phiVars(array(array('reversed_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('StringBuilder_init_0'), array(new PhiNameRef('$receiver'))), 'reverse'), array());
    }))));
    phiVars(array(array('toCollection_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('iterator_2'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toHashSet_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_10'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
    }))));
    phiVars(array(array('toList_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('emptyList'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0))))))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('toMutableList_11'), array(new PhiNameRef('$receiver')))));
        }
      }
      return new PhiNameRef('tmp$_0');
    }))));
    phiVars(array(array('toMutableList_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection_10'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))));
    }))));
    phiVars(array(array('toSet_10', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0))))))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('toCollection_10'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))))));
        }
      }
      return new PhiNameRef('tmp$_0');
    }))));
    phiVars(array(array('groupByTo$lambda_21', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupByTo$lambda_22', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))));
    phiVars(array(array('groupingBy$ObjectLiteral_2', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$groupingBy'), new PhiNameRef('this$groupingBy')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), new PhiNameRef('closure$keySelector')));
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapIndexedNotNullTo$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda$lambda_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('mapNotNullTo$lambda_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('closure$transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$destination'), 'add_11rb$'), array(new PhiNameRef('tmp$'))));
        }
      });
    }))));
    phiVars(array(array('withIndex$lambda_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('iterator_2'), array(new PhiNameRef('this$withIndex')));
      });
    }))));
    phiVars(array(array('withIndex_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterable'), array(new PhiInvocation(new PhiNameRef('withIndex$lambda_9'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('any_23', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('iterator_2'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('max_16', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('max_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('max_17')));
    }))));
    phiVars(array(array('maxWith_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('max_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('max_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('max_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('max_17')));
    }))));
    phiVars(array(array('min_16', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('min_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('min_17')));
    }))));
    phiVars(array(array('minWith_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('min_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('min_17'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('min_17'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('min_17')));
    }))));
    phiVars(array(array('none_23', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('iterator_2'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        return false;
      }
      return true;
    }))));
    phiVars(array(array('onEach$lambda_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiNameRef('closure$action'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      });
    }))));
    phiVars(array(array('zip_57', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('length', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('length'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('c1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        phiVars(array(array('c2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('to'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('c1'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('c2'))))))));
      }
      return new PhiNameRef('list');
    }))));
    phiVars(array(array('asIterable$lambda_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('iterator_2'), array(new PhiNameRef('this$asIterable')));
      });
    }))));
    phiVars(array(array('asIterable_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')))));
      if (phiEvaluateToBoolean(new PhiNameRef('tmp$'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)));
      }
      if (phiEvaluateToBoolean(new PhiNameRef('tmp$'))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiInvocation(new PhiNameRef('asIterable$lambda_9'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('asSequence$lambda_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('iterator_2'), array(new PhiNameRef('this$asSequence')));
      });
    }))));
    phiVars(array(array('asSequence_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')))));
      if (phiEvaluateToBoolean(new PhiNameRef('tmp$'))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)));
      }
      if (phiEvaluateToBoolean(new PhiNameRef('tmp$'))) {
        return new PhiInvocation(new PhiNameRef('emptySequence'), array());
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_9'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('eachCount', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))), 0.0, new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), 1.0), 0.0))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('json', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('res', new PhiObjectLiteral(array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('pairs'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$_0'))) {
        phiVars(array(array('tmp$', new PhiBrackets(new PhiNameRef('pairs'), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('name', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component1'), array()))));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component2'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('res'), new PhiNameRef('name')), new PhiNameRef('value')));
      }
      return new PhiNameRef('res');
    }))));
    phiVars(array(array('add', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('keys', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'keys'), array(new PhiNameRef('other'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('keys'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('key', new PhiBrackets(new PhiNameRef('keys'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'hasOwnProperty'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('key')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('key'))));
        }
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('lazy', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('UnsafeLazyImpl'), array(new PhiNameRef('initializer')));
    }))));
    phiVars(array(array('lazy_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('UnsafeLazyImpl'), array(new PhiNameRef('initializer')));
    }))));
    phiVars(array(array('lazy_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('UnsafeLazyImpl'), array(new PhiNameRef('initializer')));
    }))));
    phiVars(array(array('arrayOfNulls', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'newArray'), array(new PhiNameRef('size'), null));
    }))));
    phiVars(array(array('arrayCopyResize', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('source'), 'slice'), array(0.0, new PhiNameRef('newSize'))))));
      phiVars(array(array('index', new PhiDot(new PhiNameRef('source'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('newSize'), new PhiNameRef('index')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('result'), 'length'), new PhiNameRef('newSize')));
        while (new PhiBinaryOperation('<', new PhiNameRef('index'), new PhiNameRef('newSize'))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('defaultValue')));
        }
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('arrayPlusCollection', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('array'), 'slice'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('+=', new PhiDot(new PhiNameRef('result'), 'length'), new PhiDot(new PhiNameRef('collection'), 'size')));
      phiVars(array(array('index', new PhiDot(new PhiNameRef('array'), 'length'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('collection'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('result'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element')));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('toSingletonMapOrSelf', new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('toSingletonMap', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toMutableMap'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('copyToArrayOfAny', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiNameRef('isVarargs'), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()));
    }))));
    phiVars(array(array('Serializable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('min_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'compareTo_11rb$'), array(new PhiNameRef('b'))), 0.0), new PhiNameRef('a'), new PhiNameRef('b'));
    }))));
    phiVars(array(array('max_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('a'), 'compareTo_11rb$'), array(new PhiNameRef('b'))), 0.0), new PhiNameRef('a'), new PhiNameRef('b'));
    }))));
    phiVars(array(array('toByte', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toByteOrNull'), array(new PhiNameRef('$receiver')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toByte_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toByteOrNull_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('radix')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toShort', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toShortOrNull'), array(new PhiNameRef('$receiver')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toShort_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toShortOrNull_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('radix')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toInt', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toIntOrNull'), array(new PhiNameRef('$receiver')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toInt_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toIntOrNull_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('radix')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toLong', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toLongOrNull'), array(new PhiNameRef('$receiver')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toLong_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toLongOrNull_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('radix')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('toDouble', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiPrefixOperation('+', new PhiNameRef('$receiver')))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('$receiver_0'))), new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isNaN_2'), array(new PhiNameRef('$receiver'))))), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiNameRef('$receiver_0'), 0.0), new PhiInvocation(new PhiNameRef('isBlank'), array(new PhiNameRef('$receiver'))))))) {
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('numberFormatError'), array(new PhiNameRef('$receiver'))));
      }
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('toDoubleOrNull', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiPrefixOperation('+', new PhiNameRef('$receiver')))));
      return new PhiConditional(new PhiPrefixOperation('!', new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('$receiver_0'))), new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isNaN_2'), array(new PhiNameRef('$receiver'))))), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiNameRef('$receiver_0'), 0.0), new PhiInvocation(new PhiNameRef('isBlank'), array(new PhiNameRef('$receiver')))))), new PhiNameRef('$receiver_0'), null);
    }))));
    phiVars(array(array('isNaN_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toLowerCase'), array())));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('||', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('tmp$'), new PhiStringLiteral('nan'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('tmp$'), new PhiStringLiteral('+nan')))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('tmp$'), new PhiStringLiteral('-nan')))))) {
        return true;
      }
       else {
        return false;
      }
    }))));
    phiVars(array(array('checkRadix', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(2.0, 36.0)), 'contains_mef7kx$'), array(new PhiNameRef('radix')))))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('radix '), new PhiNameRef('radix')), new PhiStringLiteral(' was not in valid range 2..36')))));
      }
      return new PhiNameRef('radix');
    }))));
    phiVars(array(array('digitOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 48.0), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 57.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('-', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 48.0)));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 65.0), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 90.0)))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('-', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 65.0), 10.0), 0.0)));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 97.0), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 122.0)))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('-', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), 97.0), 10.0), 0.0)));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiPrefixOperation('-', 1.0)));
          }
        }
      }
      phiVars(array(array('it', new PhiNameRef('tmp$'))));
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiNameRef('it'), new PhiNameRef('radix')), new PhiPrefixOperation('-', 1.0), new PhiNameRef('it'));
    }))));
    phiVars(array(array('numberFormatError', new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('NumberFormatException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral("Invalid number format: '"), new PhiNameRef('input')), new PhiStringLiteral("'")))));
    }))));
    phiVars(array(array('isNaN_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!==', new PhiNameRef('$receiver'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('isNaN_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!==', new PhiNameRef('$receiver'), new PhiNameRef('$receiver'));
    }))));
    phiVars(array(array('isInfinite', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'POSITIVE_INFINITY')), new PhiBinaryOperation('===', new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('DoubleCompanionObject'), 'NEGATIVE_INFINITY')));
    }))));
    phiVars(array(array('isInfinite_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('FloatCompanionObject'), 'POSITIVE_INFINITY')), new PhiBinaryOperation('===', new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('FloatCompanionObject'), 'NEGATIVE_INFINITY')));
    }))));
    phiVars(array(array('isFinite', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isInfinite'), array(new PhiNameRef('$receiver')))), new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isNaN_0'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('isFinite_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isInfinite_0'), array(new PhiNameRef('$receiver')))), new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isNaN_1'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('RegexOption', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value'), new PhiNameRef('value')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('RegexOption_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('RegexOption_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('RegexOption$IGNORE_CASE_instance'), new PhiNew(new PhiNameRef('RegexOption'), array(new PhiStringLiteral('IGNORE_CASE'), 0.0, new PhiStringLiteral('i')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('RegexOption$MULTILINE_instance'), new PhiNew(new PhiNameRef('RegexOption'), array(new PhiStringLiteral('MULTILINE'), 1.0, new PhiStringLiteral('m')))));
    }))));
    phiVars(array(array('RegexOption$IGNORE_CASE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('RegexOption_initFields'), array()));
      return new PhiNameRef('RegexOption$IGNORE_CASE_instance');
    }))));
    phiVars(array(array('RegexOption$MULTILINE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('RegexOption_initFields'), array()));
      return new PhiNameRef('RegexOption$MULTILINE_instance');
    }))));
    phiVars(array(array('RegexOption$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('RegexOption$IGNORE_CASE_getInstance'), array()), new PhiInvocation(new PhiNameRef('RegexOption$MULTILINE_getInstance'), array())));
    }))));
    phiVars(array(array('RegexOption$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('IGNORE_CASE'):
          return new PhiInvocation(new PhiNameRef('RegexOption$IGNORE_CASE_getInstance'), array());
        case new PhiStringLiteral('MULTILINE'):
          return new PhiInvocation(new PhiNameRef('RegexOption$MULTILINE_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.text.RegexOption.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('MatchGroup', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value'), new PhiNameRef('value')));
    }))));
    phiVars(array(array('Regex', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('Regex$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'pattern'), new PhiNameRef('pattern')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'options'), new PhiInvocation(new PhiNameRef('toSet_8'), array(new PhiNameRef('options')))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('options'), 10.0)))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('options'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('item'), 'value'))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nativePattern_0'), new PhiNew(new PhiNameRef('RegExp'), array(new PhiNameRef('pattern'), new PhiBinaryOperation('+', new PhiInvocation(new PhiNameRef('joinToString_8'), array(new PhiNameRef('destination'), new PhiStringLiteral(''))), new PhiStringLiteral('g'))))));
    }))));
    phiVars(array(array('Regex$findAll$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this$Regex'), 'find_905azu$'), array(new PhiNameRef('closure$input'), new PhiNameRef('closure$startIndex')));
      });
    }))));
    phiVars(array(array('Regex$findAll$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('match_0'), 'next'), array());
    }))));
    phiVars(array(array('Regex$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('Regex$Companion_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'patternEscape_0'), new PhiNew(new PhiNameRef('RegExp'), array(new PhiStringLiteral('[-\\\\^$*+?.()|[\\]{}]'), new PhiStringLiteral('g')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'replacementEscape_0'), new PhiNew(new PhiNameRef('RegExp'), array(new PhiStringLiteral('\\$'), new PhiStringLiteral('g')))));
    }))));
    phiVars(array(array('Regex$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('Regex$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('Regex$Companion'), array()));
      }
      return new PhiNameRef('Regex$Companion_instance');
    }))));
    phiVars(array(array('Regex_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('Regex'), array(new PhiNameRef('pattern'), new PhiInvocation(new PhiNameRef('setOf'), array(new PhiNameRef('option')))));
    }))));
    phiVars(array(array('Regex_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('Regex'), array(new PhiNameRef('pattern'), new PhiInvocation(new PhiNameRef('emptySet'), array())));
    }))));
    phiVars(array(array('findNext$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$match'), new PhiNameRef('closure$match')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$findNext'), new PhiNameRef('this$findNext')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$input'), new PhiNameRef('closure$input')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$range'), new PhiNameRef('closure$range')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'range_kul0al$_0'), new PhiNameRef('closure$range')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'groups_kul0al$_0'), new PhiNew(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral'), array(new PhiNameRef('closure$match')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'groupValues__0'), null));
    }))));
    phiVars(array(array('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$match'), new PhiNameRef('closure$match')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractList'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('findNext$ObjectLiteral$groups$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$match'), new PhiNameRef('closure$match')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractCollection'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('findNext$ObjectLiteral$groups$ObjectLiteral$iterator$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this$'), 'get_za3lpa$'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('findNext', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'lastIndex'), new PhiNameRef('from')));
      phiVars(array(array('match_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'exec'), array(new PhiNameRef('input'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('match_0'), null))) {
        return null;
      }
      phiVars(array(array('range', new PhiNew(new PhiNameRef('IntRange'), array(new PhiDot(new PhiNameRef('match_0'), 'index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'lastIndex'), 1.0), 0.0))))));
      return new PhiNew(new PhiNameRef('findNext$ObjectLiteral'), array(new PhiNameRef('match_0'), new PhiNameRef('$receiver'), new PhiNameRef('input'), new PhiNameRef('range')));
    }))));
    phiVars(array(array('reset', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'lastIndex'), 0.0));
    }))));
    phiVars(array(array('ConstrainedOnceSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequenceRef_0'), new PhiNameRef('sequence')));
    }))));
    phiVars(array(array('nativeIndexOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'indexOf'), array(new PhiNameRef('str'), new PhiNameRef('fromIndex')));
    }))));
    phiVars(array(array('nativeLastIndexOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'lastIndexOf'), array(new PhiNameRef('str'), new PhiNameRef('fromIndex')));
    }))));
    phiVars(array(array('nativeStartsWith', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'startsWith'), array(new PhiNameRef('s'), new PhiNameRef('position')));
    }))));
    phiVars(array(array('nativeEndsWith', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'endsWith'), array(new PhiNameRef('s')));
    }))));
    phiVars(array(array('nativeReplace', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'replace'), array(new PhiNameRef('pattern'), new PhiNameRef('replacement')));
    }))));
    phiVars(array(array('nativeIndexOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'indexOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('ch'))))), new PhiNameRef('fromIndex')));
    }))));
    phiVars(array(array('nativeLastIndexOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'lastIndexOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('ch'))))), new PhiNameRef('fromIndex')));
    }))));
    phiVars(array(array('startsWith_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'startsWith'), array(new PhiNameRef('prefix'), 0.0));
      }
       else {
        return new PhiInvocation(new PhiNameRef('regionMatches'), array(new PhiNameRef('$receiver'), 0.0, new PhiNameRef('prefix'), 0.0, new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiNameRef('ignoreCase')));
      }
    }))));
    phiVars(array(array('startsWith_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'startsWith'), array(new PhiNameRef('prefix'), new PhiNameRef('startIndex')));
      }
       else {
        return new PhiInvocation(new PhiNameRef('regionMatches'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiNameRef('prefix'), 0.0, new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiNameRef('ignoreCase')));
      }
    }))));
    phiVars(array(array('endsWith_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'endsWith'), array(new PhiNameRef('suffix')));
      }
       else {
        return new PhiInvocation(new PhiNameRef('regionMatches'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0), new PhiNameRef('suffix'), 0.0, new PhiDot(new PhiNameRef('suffix'), 'length'), new PhiNameRef('ignoreCase')));
      }
    }))));
    phiVars(array(array('isBlank', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('tmp$')))) {
        phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toString'), array())), 'match'), array(new PhiStringLiteral('^[\\s\\xA0]+$'))))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('&&', new PhiBinaryOperation('!=', new PhiNameRef('result'), null), new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('result'), 'length'), 0.0))));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('equals', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('$receiver'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('==', new PhiNameRef('other'), null)));
      }
       else {
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('$receiver'), new PhiNameRef('other')))));
        }
         else {
          phiVars(array(array('tmp$_1', new PhiBinaryOperation('!=', new PhiNameRef('other'), null))));
          if (phiEvaluateToBoolean(new PhiNameRef('tmp$_1'))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toLowerCase'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'toLowerCase'), array())))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('tmp$_1')));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('tmp$_0')));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('regionMatches', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiInvocation(new PhiNameRef('regionMatchesImpl'), array(new PhiNameRef('$receiver'), new PhiNameRef('thisOffset'), new PhiNameRef('other'), new PhiNameRef('otherOffset'), new PhiNameRef('length'), new PhiNameRef('ignoreCase')));
    }))));
    phiVars(array(array('repeat_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('n'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral("Count 'n' must be non-negative, but was "), new PhiNameRef('n')), new PhiStringLiteral('.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiStringLiteral('')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('n'), 1.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toString'), array())));
        }
         else {
          phiVars(array(array('result', new PhiStringLiteral(''))));
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0)))) {
            phiVars(array(array('s', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toString'), array()))));
            phiVars(array(array('count_26', new PhiNameRef('n'))));
            while (true) {
              if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiBinaryOperation('&', new PhiNameRef('count_26'), 1.0), 1.0))) {
                phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('result'), new PhiNameRef('s')));
              }
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('>>>', new PhiNameRef('count_26'), 1.0)));
              if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('count_26'), 0.0))) {
                break;
              }
              phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('s'), new PhiNameRef('s')));
            }
          }
          return new PhiNameRef('result');
        }
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replace', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'replace'), array(new PhiNew(new PhiNameRef('RegExp'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('Regex$Companion_getInstance'), array()), 'escape_61zpoe$'), array(new PhiNameRef('oldValue'))), new PhiConditional(new PhiNameRef('ignoreCase'), new PhiStringLiteral('gi'), new PhiStringLiteral('g')))), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('Regex$Companion_getInstance'), array()), 'escapeReplacement_61zpoe$'), array(new PhiNameRef('newValue')))));
    }))));
    phiVars(array(array('replace_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'replace'), array(new PhiNew(new PhiNameRef('RegExp'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('Regex$Companion_getInstance'), array()), 'escape_61zpoe$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('oldChar'))))))), new PhiConditional(new PhiNameRef('ignoreCase'), new PhiStringLiteral('gi'), new PhiStringLiteral('g')))), new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('newChar')))))));
    }))));
    phiVars(array(array('replaceFirst', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'replace'), array(new PhiNew(new PhiNameRef('RegExp'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('Regex$Companion_getInstance'), array()), 'escape_61zpoe$'), array(new PhiNameRef('oldValue'))), new PhiConditional(new PhiNameRef('ignoreCase'), new PhiStringLiteral('i'), new PhiStringLiteral('')))), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('Regex$Companion_getInstance'), array()), 'escapeReplacement_61zpoe$'), array(new PhiNameRef('newValue')))));
    }))));
    phiVars(array(array('replaceFirst_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'replace'), array(new PhiNew(new PhiNameRef('RegExp'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('Regex$Companion_getInstance'), array()), 'escape_61zpoe$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('oldChar'))))))), new PhiConditional(new PhiNameRef('ignoreCase'), new PhiStringLiteral('i'), new PhiStringLiteral('')))), new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('newChar')))))));
    }))));
    phiVars(array(array('Appendable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('StringBuilder', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('content'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('content'), new PhiStringLiteral('')));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'string_0'), new PhiNameRef('content')));
    }))));
    phiVars(array(array('StringBuilder_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('StringBuilder'), 'call'), array(new PhiNameRef('$this'))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('StringBuilder_init_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('StringBuilder'), 'call'), array(new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('content'), 'toString'), array()))));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('createElement', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'createElement'), array(new PhiNameRef('name'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('init'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('appendElement_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('createElement'), array(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'ownerDocument')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), new PhiNameRef('name'), new PhiNameRef('init'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'appendChild'), array(new PhiNameRef('$receiver_0'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('hasClass', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', new PhiDot(new PhiNameRef('$receiver'), 'className'))));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'Regex_61zpoe$'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('(^|.*'), new PhiStringLiteral('\\')), new PhiStringLiteral('s+)')), new PhiNameRef('cssClass')), new PhiStringLiteral('(')), new PhiStringLiteral('$')), new PhiStringLiteral('|')), new PhiStringLiteral('\\')), new PhiStringLiteral('s+.*)')))), 'matches_6bul2c$'), array(new PhiNameRef('tmp$')));
    }))));
    phiVars(array(array('addClass', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('cssClasses'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('cssClasses'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('hasClass'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      phiVars(array(array('missingClasses', new PhiNameRef('destination'))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('missingClasses'), 'isEmpty'), array())))) {
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('presentClasses', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'trim_gw00vp$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('$receiver'), 'className')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))), 'toString'), array()))));
        phiVars(array(array('$receiver_0', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'append_gw00v9$'), array(new PhiNameRef('presentClasses'))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('presentClasses'), 'length'), 0.0)))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'append_gw00v9$'), array(new PhiStringLiteral(' '))));
        }
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('joinTo_8'), array(new PhiNameRef('missingClasses'), new PhiNameRef('$receiver_0'), new PhiStringLiteral(' '))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'className'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'toString'), array())));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('removeClass', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('any$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label any$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('cssClasses'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('cssClasses'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('hasClass'), array(new PhiNameRef('$receiver'), new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), true));
              phiExpressionStatement(new PhiNameRef('goto any_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), false));
        }
        phiExpressionStatement(new PhiNameRef('any_usd_break:'));
      }
      if (phiEvaluateToBoolean(new PhiNameRef('any$result'))) {
        phiVars(array(array('toBeRemoved', new PhiInvocation(new PhiNameRef('toSet'), array(new PhiNameRef('cssClasses'))))));
        phiVars(array(array('tmp$_1', )));
        phiVars(array(array('tmp$_0', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'trim_gw00vp$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('$receiver'), 'className')))), new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))), 'toString'), array()))));
        phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'Regex_61zpoe$'), array(new PhiStringLiteral('\\s+'))), 'split_905azu$'), array(new PhiNameRef('tmp$_0'), 0.0)))));
        phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
        phiVars(array(array('tmp$_2', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_2'), 'hasNext'), array())) {
          phiVars(array(array('element_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_2'), 'next'), array()))));
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('toBeRemoved'), 'contains_11rb$'), array(new PhiNameRef('element_0')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element_0'))));
          }
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'className'), new PhiInvocation(new PhiNameRef('joinToString_8'), array(new PhiNameRef('destination'), new PhiStringLiteral(' ')))));
        return true;
      }
      return false;
    }))));
    phiVars(array(array('get_isText', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'nodeType'), new PhiDot(new PhiNameRef('Node'), 'TEXT_NODE')), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'nodeType'), new PhiDot(new PhiNameRef('Node'), 'CDATA_SECTION_NODE')));
    }))));
    phiVars(array(array('get_isElement', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'nodeType'), new PhiDot(new PhiNameRef('Node'), 'ELEMENT_NODE'));
    }))));
    phiVars(array(array('EventListener', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('EventListenerHandler'), array(new PhiNameRef('handler')));
    }))));
    phiVars(array(array('EventListenerHandler', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'handler_0'), new PhiNameRef('handler')));
    }))));
    phiVars(array(array('asList$ObjectLiteral_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$asList'), new PhiNameRef('this$asList')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractList'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('asList_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('asList$ObjectLiteral_0'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('clear', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'hasChildNodes'), array())) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'removeChild'), array(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'firstChild')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())))));
      }
    }))));
    phiVars(array(array('appendText', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'appendChild'), array(new PhiInvocation(new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'ownerDocument')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'createTextNode'), array(new PhiNameRef('text_0'))))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('get_jsClass', new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('$receiver'))), 'constructor');
    }))));
    phiVars(array(array('get_js', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiNameRef('KClassImpl'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'jClass_0');
    }))));
    phiVars(array(array('get_kotlin', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('getKClass'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('KClassImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'jClass_0'), new PhiNameRef('jClass')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'metadata_0'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'jClass_0'), '$metadata$')));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'hashCode_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'simpleName')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiNameRef('tmp$'))), null)), null), new PhiNameRef('tmp$_0'), 0.0)));
    }))));
    phiVars(array(array('getKClass', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('getOrCreateKClass'), array(new PhiNameRef('jClass')));
    }))));
    phiVars(array(array('getKClassFromExpression', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('getOrCreateKClass'), array(new PhiInvocation(new PhiNameRef('get_jsClass'), array(new PhiNameRef('e')))));
    }))));
    phiVars(array(array('getOrCreateKClass', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('metadata', new PhiDot(new PhiNameRef('jClass'), '$metadata$'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('metadata'), null))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('metadata'), '$kClass$'), null))) {
          phiVars(array(array('kClass', new PhiNew(new PhiNameRef('KClassImpl'), array(new PhiNameRef('jClass'))))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('metadata'), '$kClass$'), new PhiNameRef('kClass')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('kClass')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('metadata'), '$kClass$')));
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNew(new PhiNameRef('KClassImpl'), array(new PhiNameRef('jClass')))));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('Unit', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('Unit_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('Unit_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('Unit_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('Unit'), array()));
      }
      return new PhiNameRef('Unit_instance');
    }))));
    phiVars(array(array('KAnnotatedElement', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KCallable', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KClass', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KClassifier', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KDeclarationContainer', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KFunction', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KParameter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KParameter$Kind', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('KParameter$Kind_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KParameter$Kind_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KParameter$Kind$INSTANCE_instance'), new PhiNew(new PhiNameRef('KParameter$Kind'), array(new PhiStringLiteral('INSTANCE'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KParameter$Kind$EXTENSION_RECEIVER_instance'), new PhiNew(new PhiNameRef('KParameter$Kind'), array(new PhiStringLiteral('EXTENSION_RECEIVER'), 1.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KParameter$Kind$VALUE_instance'), new PhiNew(new PhiNameRef('KParameter$Kind'), array(new PhiStringLiteral('VALUE'), 2.0))));
    }))));
    phiVars(array(array('KParameter$Kind$INSTANCE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KParameter$Kind_initFields'), array()));
      return new PhiNameRef('KParameter$Kind$INSTANCE_instance');
    }))));
    phiVars(array(array('KParameter$Kind$EXTENSION_RECEIVER_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KParameter$Kind_initFields'), array()));
      return new PhiNameRef('KParameter$Kind$EXTENSION_RECEIVER_instance');
    }))));
    phiVars(array(array('KParameter$Kind$VALUE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KParameter$Kind_initFields'), array()));
      return new PhiNameRef('KParameter$Kind$VALUE_instance');
    }))));
    phiVars(array(array('KParameter$Kind$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('KParameter$Kind$INSTANCE_getInstance'), array()), new PhiInvocation(new PhiNameRef('KParameter$Kind$EXTENSION_RECEIVER_getInstance'), array()), new PhiInvocation(new PhiNameRef('KParameter$Kind$VALUE_getInstance'), array())));
    }))));
    phiVars(array(array('KParameter$Kind$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('INSTANCE'):
          return new PhiInvocation(new PhiNameRef('KParameter$Kind$INSTANCE_getInstance'), array());
        case new PhiStringLiteral('EXTENSION_RECEIVER'):
          return new PhiInvocation(new PhiNameRef('KParameter$Kind$EXTENSION_RECEIVER_getInstance'), array());
        case new PhiStringLiteral('VALUE'):
          return new PhiInvocation(new PhiNameRef('KParameter$Kind$VALUE_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.reflect.KParameter.Kind.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('KProperty', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty$Accessor', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty$Getter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty$Setter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty0', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty0$Getter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty0', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty0$Setter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty1', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty1$Getter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty1', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty1$Setter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty2', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KProperty2$Getter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty2', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KMutableProperty2$Setter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KType', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KTypeProjection', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KTypeProjection$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'variance'), new PhiNameRef('variance')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'type'), new PhiNameRef('type')));
    }))));
    phiVars(array(array('KTypeProjection$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KTypeProjection$Companion_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'STAR'), new PhiNew(new PhiNameRef('KTypeProjection'), array(null, null))));
    }))));
    phiVars(array(array('KTypeProjection$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('KTypeProjection$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('KTypeProjection$Companion'), array()));
      }
      return new PhiNameRef('KTypeProjection$Companion_instance');
    }))));
    phiVars(array(array('KTypeParameter', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('KVariance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('KVariance_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVariance_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVariance$INVARIANT_instance'), new PhiNew(new PhiNameRef('KVariance'), array(new PhiStringLiteral('INVARIANT'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVariance$IN_instance'), new PhiNew(new PhiNameRef('KVariance'), array(new PhiStringLiteral('IN'), 1.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVariance$OUT_instance'), new PhiNew(new PhiNameRef('KVariance'), array(new PhiStringLiteral('OUT'), 2.0))));
    }))));
    phiVars(array(array('KVariance$INVARIANT_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KVariance_initFields'), array()));
      return new PhiNameRef('KVariance$INVARIANT_instance');
    }))));
    phiVars(array(array('KVariance$IN_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KVariance_initFields'), array()));
      return new PhiNameRef('KVariance$IN_instance');
    }))));
    phiVars(array(array('KVariance$OUT_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KVariance_initFields'), array()));
      return new PhiNameRef('KVariance$OUT_instance');
    }))));
    phiVars(array(array('KVariance$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('KVariance$INVARIANT_getInstance'), array()), new PhiInvocation(new PhiNameRef('KVariance$IN_getInstance'), array()), new PhiInvocation(new PhiNameRef('KVariance$OUT_getInstance'), array())));
    }))));
    phiVars(array(array('KVariance$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('INVARIANT'):
          return new PhiInvocation(new PhiNameRef('KVariance$INVARIANT_getInstance'), array());
        case new PhiStringLiteral('IN'):
          return new PhiInvocation(new PhiNameRef('KVariance$IN_getInstance'), array());
        case new PhiStringLiteral('OUT'):
          return new PhiInvocation(new PhiNameRef('KVariance$OUT_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.reflect.KVariance.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('KVisibility', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('KVisibility_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVisibility_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVisibility$PUBLIC_instance'), new PhiNew(new PhiNameRef('KVisibility'), array(new PhiStringLiteral('PUBLIC'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVisibility$PROTECTED_instance'), new PhiNew(new PhiNameRef('KVisibility'), array(new PhiStringLiteral('PROTECTED'), 1.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVisibility$INTERNAL_instance'), new PhiNew(new PhiNameRef('KVisibility'), array(new PhiStringLiteral('INTERNAL'), 2.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KVisibility$PRIVATE_instance'), new PhiNew(new PhiNameRef('KVisibility'), array(new PhiStringLiteral('PRIVATE'), 3.0))));
    }))));
    phiVars(array(array('KVisibility$PUBLIC_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KVisibility_initFields'), array()));
      return new PhiNameRef('KVisibility$PUBLIC_instance');
    }))));
    phiVars(array(array('KVisibility$PROTECTED_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KVisibility_initFields'), array()));
      return new PhiNameRef('KVisibility$PROTECTED_instance');
    }))));
    phiVars(array(array('KVisibility$INTERNAL_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KVisibility_initFields'), array()));
      return new PhiNameRef('KVisibility$INTERNAL_instance');
    }))));
    phiVars(array(array('KVisibility$PRIVATE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KVisibility_initFields'), array()));
      return new PhiNameRef('KVisibility$PRIVATE_instance');
    }))));
    phiVars(array(array('KVisibility$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('KVisibility$PUBLIC_getInstance'), array()), new PhiInvocation(new PhiNameRef('KVisibility$PROTECTED_getInstance'), array()), new PhiInvocation(new PhiNameRef('KVisibility$INTERNAL_getInstance'), array()), new PhiInvocation(new PhiNameRef('KVisibility$PRIVATE_getInstance'), array())));
    }))));
    phiVars(array(array('KVisibility$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('PUBLIC'):
          return new PhiInvocation(new PhiNameRef('KVisibility$PUBLIC_getInstance'), array());
        case new PhiStringLiteral('PROTECTED'):
          return new PhiInvocation(new PhiNameRef('KVisibility$PROTECTED_getInstance'), array());
        case new PhiStringLiteral('INTERNAL'):
          return new PhiInvocation(new PhiNameRef('KVisibility$INTERNAL_getInstance'), array());
        case new PhiStringLiteral('PRIVATE'):
          return new PhiInvocation(new PhiNameRef('KVisibility$PRIVATE_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.reflect.KVisibility.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('AbstractCollection', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('AbstractCollection$toString$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('it'), new PhiNameRef('this$AbstractCollection')), new PhiStringLiteral('(this Collection)'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('it'))));
      });
    }))));
    phiVars(array(array('State', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('State_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State$Ready_instance'), new PhiNew(new PhiNameRef('State'), array(new PhiStringLiteral('Ready'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State$NotReady_instance'), new PhiNew(new PhiNameRef('State'), array(new PhiStringLiteral('NotReady'), 1.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State$Done_instance'), new PhiNew(new PhiNameRef('State'), array(new PhiStringLiteral('Done'), 2.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State$Failed_instance'), new PhiNew(new PhiNameRef('State'), array(new PhiStringLiteral('Failed'), 3.0))));
    }))));
    phiVars(array(array('State$Ready_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('State_initFields'), array()));
      return new PhiNameRef('State$Ready_instance');
    }))));
    phiVars(array(array('State$NotReady_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('State_initFields'), array()));
      return new PhiNameRef('State$NotReady_instance');
    }))));
    phiVars(array(array('State$Done_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('State_initFields'), array()));
      return new PhiNameRef('State$Done_instance');
    }))));
    phiVars(array(array('State$Failed_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('State_initFields'), array()));
      return new PhiNameRef('State$Failed_instance');
    }))));
    phiVars(array(array('State$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('State$Ready_getInstance'), array()), new PhiInvocation(new PhiNameRef('State$NotReady_getInstance'), array()), new PhiInvocation(new PhiNameRef('State$Done_getInstance'), array()), new PhiInvocation(new PhiNameRef('State$Failed_getInstance'), array())));
    }))));
    phiVars(array(array('State$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('Ready'):
          return new PhiInvocation(new PhiNameRef('State$Ready_getInstance'), array());
        case new PhiStringLiteral('NotReady'):
          return new PhiInvocation(new PhiNameRef('State$NotReady_getInstance'), array());
        case new PhiStringLiteral('Done'):
          return new PhiInvocation(new PhiNameRef('State$Done_getInstance'), array());
        case new PhiStringLiteral('Failed'):
          return new PhiInvocation(new PhiNameRef('State$Failed_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.collections.State.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('AbstractIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0'), new PhiInvocation(new PhiNameRef('State$NotReady_getInstance'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextValue_nqf5es$_0'), null));
    }))));
    phiVars(array(array('AbstractList', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractCollection'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('AbstractList$SubList', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractList'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'list_0'), new PhiNameRef('list')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('fromIndex')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_size_0'), 0.0));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkRangeIndexes_0'), array(new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('toIndex'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'list_0'), 'size'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_size_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('toIndex'), new PhiDot(new PhiNameRef('this'), 'fromIndex_0')), 0.0)));
    }))));
    phiVars(array(array('AbstractList$IteratorImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '$outer'), new PhiNameRef('$outer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), 0.0));
    }))));
    phiVars(array(array('AbstractList$ListIteratorImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '$outer'), new PhiNameRef('$outer')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractList$IteratorImpl'), 'call'), array(new PhiNameRef('this'), new PhiDot(new PhiNameRef('this'), '$outer'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkPositionIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'size'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiNameRef('index')));
    }))));
    phiVars(array(array('AbstractList$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AbstractList$Companion_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('AbstractList$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('AbstractList$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('AbstractList$Companion'), array()));
      }
      return new PhiNameRef('AbstractList$Companion_instance');
    }))));
    phiVars(array(array('AbstractMap', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AbstractMap$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_keys_gfqcsa$_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_values_gfqcsa$_0'), null));
    }))));
    phiVars(array(array('AbstractMap$get_AbstractMap$keys$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), new PhiNameRef('this$AbstractMap')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractSet'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('AbstractMap$get_AbstractMap$keys$ObjectLiteral$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), new PhiNameRef('closure$entryIterator')));
    }))));
    phiVars(array(array('AbstractMap$toString$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this$AbstractMap'), 'toString_pmt6ib$_0'), array(new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('AbstractMap$get_AbstractMap$values$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), new PhiNameRef('this$AbstractMap')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractCollection'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('AbstractMap$get_AbstractMap$values$ObjectLiteral$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), new PhiNameRef('closure$entryIterator')));
    }))));
    phiVars(array(array('AbstractMap$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AbstractMap$Companion_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('AbstractMap$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('AbstractMap$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('AbstractMap$Companion'), array()));
      }
      return new PhiNameRef('AbstractMap$Companion_instance');
    }))));
    phiVars(array(array('AbstractSet', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('AbstractSet$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractCollection'), 'call'), array(new PhiNameRef('this'))));
    }))));
    phiVars(array(array('AbstractSet$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('AbstractSet$Companion_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('AbstractSet$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('AbstractSet$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('AbstractSet$Companion'), array()));
      }
      return new PhiNameRef('AbstractSet$Companion_instance');
    }))));
    phiVars(array(array('flatten_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$_0'))) {
        phiVars(array(array('element_0', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$_0')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiDot(new PhiNameRef('element_0'), 'length')), 0.0)));
      }
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('sum_23'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll'), array(new PhiNameRef('result'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('unzip', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('listT', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('listR', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('pair', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('listT'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('pair'), 'first'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('listR'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('listT'), new PhiNameRef('listR')));
    }))));
    phiVars(array(array('EmptyIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('EmptyIterator_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('EmptyIterator_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('EmptyIterator_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('EmptyIterator'), array()));
      }
      return new PhiNameRef('EmptyIterator_instance');
    }))));
    phiVars(array(array('EmptyList', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('EmptyList_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'serialVersionUID_0'), new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(new PhiPrefixOperation('-', 1.478467534E9), new PhiPrefixOperation('-', 1.7207276E9)))));
    }))));
    phiVars(array(array('EmptyList_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('EmptyList_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('EmptyList'), array()));
      }
      return new PhiNameRef('EmptyList_instance');
    }))));
    phiVars(array(array('asCollection', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('ArrayAsCollection'), array(new PhiNameRef('$receiver'), false));
    }))));
    phiVars(array(array('ArrayAsCollection', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'values'), new PhiNameRef('values')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'isVarargs'), new PhiNameRef('isVarargs')));
    }))));
    phiVars(array(array('emptyList', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyList_getInstance'), array());
    }))));
    phiVars(array(array('listOf_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('elements'))), new PhiInvocation(new PhiNameRef('emptyList'), array()));
    }))));
    phiVars(array(array('mutableListOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('ArrayList_init'), array()), new PhiInvocation(new PhiNameRef('ArrayList_init_0'), array(new PhiNew(new PhiNameRef('ArrayAsCollection'), array(new PhiNameRef('elements'), true)))));
    }))));
    phiVars(array(array('arrayListOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('ArrayList_init'), array()), new PhiInvocation(new PhiNameRef('ArrayList_init_0'), array(new PhiNew(new PhiNameRef('ArrayAsCollection'), array(new PhiNameRef('elements'), true)))));
    }))));
    phiVars(array(array('listOfNotNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('element'), null), new PhiInvocation(new PhiNameRef('listOf'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('emptyList'), array()));
    }))));
    phiVars(array(array('listOfNotNull_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterNotNull'), array(new PhiNameRef('elements')));
    }))));
    phiVars(array(array('MutableList$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('closure$list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('closure$init'), array(new PhiNameRef('index'))))));
      });
    }))));
    phiVars(array(array('get_indices_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0)));
    }))));
    phiVars(array(array('get_lastIndex', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0);
    }))));
    phiVars(array(array('optimizeReadOnlyList', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyList'), array());
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('listOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0))));
        }
         else {
          return new PhiNameRef('$receiver');
        }
      }
    }))));
    phiVars(array(array('binarySearch', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('fromIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('fromIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('toIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('toIndex'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      }
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('rangeCheck'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('fromIndex'), new PhiNameRef('toIndex'))));
      phiVars(array(array('low', new PhiNameRef('fromIndex'))));
      phiVars(array(array('high', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('toIndex'), 1.0), 0.0))));
      while (new PhiBinaryOperation('<=', new PhiNameRef('low'), new PhiNameRef('high'))) {
        phiVars(array(array('mid', new PhiBinaryOperation('>>>', new PhiBinaryOperation('+', new PhiNameRef('low'), new PhiNameRef('high')), 1.0))));
        phiVars(array(array('midVal', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('mid'))))));
        phiVars(array(array('cmp', new PhiInvocation(new PhiNameRef('compareValues'), array(new PhiNameRef('midVal'), new PhiNameRef('element'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('cmp'), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('low'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('mid'), 1.0), 0.0)));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('cmp'), 0.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('high'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('mid'), 1.0), 0.0)));
          }
           else {
            return new PhiNameRef('mid');
          }
        }
      }
      return new PhiPrefixOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('low'), 1.0), 0.0));
    }))));
    phiVars(array(array('binarySearch_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('fromIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('fromIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('toIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('toIndex'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      }
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('rangeCheck'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('fromIndex'), new PhiNameRef('toIndex'))));
      phiVars(array(array('low', new PhiNameRef('fromIndex'))));
      phiVars(array(array('high', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('toIndex'), 1.0), 0.0))));
      while (new PhiBinaryOperation('<=', new PhiNameRef('low'), new PhiNameRef('high'))) {
        phiVars(array(array('mid', new PhiBinaryOperation('>>>', new PhiBinaryOperation('+', new PhiNameRef('low'), new PhiNameRef('high')), 1.0))));
        phiVars(array(array('midVal', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('mid'))))));
        phiVars(array(array('cmp', new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiNameRef('midVal'), new PhiNameRef('element'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('cmp'), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('low'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('mid'), 1.0), 0.0)));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('cmp'), 0.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('high'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('mid'), 1.0), 0.0)));
          }
           else {
            return new PhiNameRef('mid');
          }
        }
      }
      return new PhiPrefixOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('low'), 1.0), 0.0));
    }))));
    phiVars(array(array('binarySearchBy$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareValues_s00gnj$'), array(new PhiInvocation(new PhiNameRef('closure$selector'), array(new PhiNameRef('it'))), new PhiNameRef('closure$key')));
      });
    }))));
    phiVars(array(array('binarySearch_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('fromIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('fromIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('toIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('toIndex'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      }
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('rangeCheck'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('fromIndex'), new PhiNameRef('toIndex'))));
      phiVars(array(array('low', new PhiNameRef('fromIndex'))));
      phiVars(array(array('high', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('toIndex'), 1.0), 0.0))));
      while (new PhiBinaryOperation('<=', new PhiNameRef('low'), new PhiNameRef('high'))) {
        phiVars(array(array('mid', new PhiBinaryOperation('>>>', new PhiBinaryOperation('+', new PhiNameRef('low'), new PhiNameRef('high')), 1.0))));
        phiVars(array(array('midVal', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('mid'))))));
        phiVars(array(array('cmp', new PhiInvocation(new PhiNameRef('comparison'), array(new PhiNameRef('midVal'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('cmp'), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('low'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('mid'), 1.0), 0.0)));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('cmp'), 0.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('high'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('mid'), 1.0), 0.0)));
          }
           else {
            return new PhiNameRef('mid');
          }
        }
      }
      return new PhiPrefixOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('low'), 1.0), 0.0));
    }))));
    phiVars(array(array('rangeCheck', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('fromIndex ('), new PhiNameRef('fromIndex')), new PhiStringLiteral(') is greater than toIndex (')), new PhiNameRef('toIndex')), new PhiStringLiteral(').')))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('fromIndex'), 0.0))) {
          phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('fromIndex ('), new PhiNameRef('fromIndex')), new PhiStringLiteral(') is less than zero.')))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('toIndex'), new PhiNameRef('size')))) {
            phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('toIndex ('), new PhiNameRef('toIndex')), new PhiStringLiteral(') is greater than size (')), new PhiNameRef('size')), new PhiStringLiteral(').')))));
          }
        }
      }
    }))));
    phiVars(array(array('Grouping', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('fold$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        return new PhiInvocation(new PhiNameRef('closure$operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiNameRef('first_24'), new PhiInvocation(new PhiNameRef('closure$initialValueSelector'), array(new PhiNameRef('key'), new PhiNameRef('e'))), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('acc')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e')));
      });
    }))));
    phiVars(array(array('foldTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        return new PhiInvocation(new PhiNameRef('closure$operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiNameRef('first_24'), new PhiInvocation(new PhiNameRef('closure$initialValueSelector'), array(new PhiNameRef('key'), new PhiNameRef('e'))), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('acc')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e')));
      });
    }))));
    phiVars(array(array('fold$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        return new PhiInvocation(new PhiNameRef('closure$operation'), array(new PhiConditional(new PhiNameRef('first_24'), new PhiNameRef('closure$initialValue'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('acc')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e')));
      });
    }))));
    phiVars(array(array('foldTo$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        return new PhiInvocation(new PhiNameRef('closure$operation'), array(new PhiConditional(new PhiNameRef('first_24'), new PhiNameRef('closure$initialValue'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('acc')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e')));
      });
    }))));
    phiVars(array(array('reduce$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiNameRef('first_24'))) {
          return new PhiNameRef('e');
        }
         else {
          return new PhiInvocation(new PhiNameRef('closure$operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('acc')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('e')));
        }
      });
    }))));
    phiVars(array(array('reduceTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        if (phiEvaluateToBoolean(new PhiNameRef('first_24'))) {
          return new PhiNameRef('e');
        }
         else {
          return new PhiInvocation(new PhiNameRef('closure$operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('acc')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('e')));
        }
      });
    }))));
    phiVars(array(array('eachCountTo', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))), 0.0, new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), 1.0), 0.0))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('IndexedValue', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), new PhiNameRef('index')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value'), new PhiNameRef('value')));
    }))));
    phiVars(array(array('Iterable$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$iterator'), new PhiNameRef('closure$iterator')));
    }))));
    phiVars(array(array('IndexingIterable', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iteratorFactory_0'), new PhiNameRef('iteratorFactory')));
    }))));
    phiVars(array(array('collectionSizeOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))), new PhiDot(new PhiNameRef('$receiver'), 'size'), null);
    }))));
    phiVars(array(array('collectionSizeOrDefault', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))), new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('default_0'));
    }))));
    phiVars(array(array('safeToConvertToSet', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'size'), 2.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('ArrayList'))));
    }))));
    phiVars(array(array('convertToSetForSetOperationWith', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Set'))))) {
        return new PhiNameRef('$receiver');
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('source'), new PhiNameRef('Collection'))), new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('source'), 'size'), 2.0)))) {
            return new PhiNameRef('$receiver');
          }
           else {
            return new PhiConditional(new PhiInvocation(new PhiNameRef('safeToConvertToSet'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiNameRef('toHashSet_8'), array(new PhiNameRef('$receiver'))), new PhiNameRef('$receiver'));
          }
        }
         else {
          return new PhiInvocation(new PhiNameRef('toHashSet_8'), array(new PhiNameRef('$receiver')));
        }
      }
    }))));
    phiVars(array(array('convertToSetForSetOperation', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Set'))))) {
        return new PhiNameRef('$receiver');
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
          return new PhiConditional(new PhiInvocation(new PhiNameRef('safeToConvertToSet'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiNameRef('toHashSet_8'), array(new PhiNameRef('$receiver'))), new PhiNameRef('$receiver'));
        }
         else {
          return new PhiInvocation(new PhiNameRef('toHashSet_8'), array(new PhiNameRef('$receiver')));
        }
      }
    }))));
    phiVars(array(array('flatten_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('result', new PhiInvocation(new PhiNameRef('ArrayList_init'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('addAll_0'), array(new PhiNameRef('result'), new PhiNameRef('element'))));
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('unzip_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('expectedSize', new PhiInvocation(new PhiNameRef('collectionSizeOrDefault'), array(new PhiNameRef('$receiver'), 10.0)))));
      phiVars(array(array('listT', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('expectedSize'))))));
      phiVars(array(array('listR', new PhiInvocation(new PhiNameRef('ArrayList_init'), array(new PhiNameRef('expectedSize'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('pair', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('listT'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('pair'), 'first'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('listR'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('listT'), new PhiNameRef('listR')));
    }))));
    phiVars(array(array('withIndex_11', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterator'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('IndexingIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator_0'), new PhiNameRef('iterator_3')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), 0.0));
    }))));
    phiVars(array(array('getOrImplicitDefault', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('MapWithDefault'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'getOrImplicitDefault_11rb$'), array(new PhiNameRef('key')));
      }
      phiVars(array(array('getOrElseNullable$result', )));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('value'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Key '), new PhiNameRef('key')), new PhiStringLiteral(' is missing in the map.')))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('getOrElseNullable$result'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('value')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
      }
      return new PhiNameRef('getOrElseNullable$result');
    }))));
    phiVars(array(array('withDefault', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('MapWithDefault'))))) {
        return new PhiInvocation(new PhiNameRef('withDefault'), array(new PhiDot(new PhiNameRef('$receiver'), 'map'), new PhiNameRef('defaultValue')));
      }
       else {
        return new PhiNew(new PhiNameRef('MapWithDefaultImpl'), array(new PhiNameRef('$receiver'), new PhiNameRef('defaultValue')));
      }
    }))));
    phiVars(array(array('withDefault_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('MutableMapWithDefault'))))) {
        return new PhiInvocation(new PhiNameRef('withDefault_0'), array(new PhiDot(new PhiNameRef('$receiver'), 'map'), new PhiNameRef('defaultValue')));
      }
       else {
        return new PhiNew(new PhiNameRef('MutableMapWithDefaultImpl'), array(new PhiNameRef('$receiver'), new PhiNameRef('defaultValue')));
      }
    }))));
    phiVars(array(array('MapWithDefault', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MutableMapWithDefault', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MapWithDefaultImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'map_rp2f9x$_0'), new PhiNameRef('map_12')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'default_0'), new PhiNameRef('default_0')));
    }))));
    phiVars(array(array('MutableMapWithDefaultImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'map_l3gl7f$_0'), new PhiNameRef('map_12')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'default_0'), new PhiNameRef('default_0')));
    }))));
    phiVars(array(array('EmptyMap', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('EmptyMap_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'serialVersionUID_0'), new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(new PhiPrefixOperation('-', 8.88910638E8), 1.920087921E9))));
    }))));
    phiVars(array(array('EmptyMap_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('EmptyMap_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('EmptyMap'), array()));
      }
      return new PhiNameRef('EmptyMap_instance');
    }))));
    phiVars(array(array('emptyMap', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('EmptyMap_getInstance'), array())), new PhiNameRef('Map'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))));
    phiVars(array(array('mapOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('pairs'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('linkedMapOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('pairs'), 'slice'), array()))), new PhiInvocation(new PhiNameRef('emptyMap'), array()));
    }))));
    phiVars(array(array('mutableMapOf_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('pairs'), 'length'))))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('hashMapOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiNameRef('HashMap_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('pairs'), 'length'))))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('linkedMapOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('pairs'), 'length'))))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('mapCapacity', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('expectedSize'), 3.0))) {
        return new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('expectedSize'), 1.0), 0.0);
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('expectedSize'), new PhiNameRef('INT_MAX_POWER_OF_TWO')))) {
        return new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('expectedSize'), new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiNameRef('expectedSize'), 3.0), 0.0)), 0.0);
      }
      return new PhiDot(new PhiNameRef('IntCompanionObject'), 'MAX_VALUE');
    }))));
    phiVars(array(array('getOrElseNullable', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('value'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))) {
        return new PhiInvocation(new PhiNameRef('defaultValue'), array());
      }
       else {
        return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('value')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
      }
    }))));
    phiVars(array(array('getValue_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('getOrImplicitDefault'), array(new PhiNameRef('$receiver'), new PhiNameRef('key')));
    }))));
    phiVars(array(array('mapValuesTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('it'), 'key');
    }))));
    phiVars(array(array('mapKeysTo$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('it'), 'value');
    }))));
    phiVars(array(array('putAll', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$_0', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('pairs'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$_0'))) {
        phiVars(array(array('tmp$', new PhiBrackets(new PhiNameRef('pairs'), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component1'), array()))));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component2'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('value'))));
      }
    }))));
    phiVars(array(array('putAll_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('pairs'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
        phiVars(array(array('tmp$', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component1'), array()))));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component2'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('value'))));
      }
    }))));
    phiVars(array(array('putAll_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('pairs'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
        phiVars(array(array('tmp$', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component1'), array()))));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component2'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('value'))));
      }
    }))));
    phiVars(array(array('toMap', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('Collection'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('emptyMap'), array())));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('mapOf'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('List'))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0)), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()), 'next'), array()))))));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('toMap_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashMap_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'size')))))))));
          }
        }
        return new PhiNameRef('tmp$_0');
      }
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyMap'), array(new PhiInvocation(new PhiNameRef('toMap_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashMap_init'), array())))));
    }))));
    phiVars(array(array('toMap_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll_0'), array(new PhiNameRef('destination'), new PhiNameRef('$receiver'))));
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toMap_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyMap'), array());
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('mapOf'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
        }
         else {
          return new PhiInvocation(new PhiNameRef('toMap_2'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashMap_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('$receiver'), 'length')))))));
        }
      }
    }))));
    phiVars(array(array('toMap_2', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll'), array(new PhiNameRef('destination'), new PhiNameRef('$receiver'))));
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toMap_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyMap'), array(new PhiInvocation(new PhiNameRef('toMap_4'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('LinkedHashMap_init'), array())))));
    }))));
    phiVars(array(array('toMap_4', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll_1'), array(new PhiNameRef('destination'), new PhiNameRef('$receiver'))));
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('toMap_5', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyMap'), array());
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('toMutableMap'), array(new PhiNameRef('$receiver')));
        }
         else {
          return new PhiInvocation(new PhiNameRef('toMutableMap'), array(new PhiNameRef('$receiver')));
        }
      }
    }))));
    phiVars(array(array('toMutableMap', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('LinkedHashMap_init_2'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('toMap_6', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'putAll_a2k3zr$'), array(new PhiNameRef('$receiver'))));
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('plus_42', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('mapOf'), array(new PhiNameRef('pair')))));
      }
       else {
        phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_2'), array(new PhiNameRef('$receiver'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver_0')));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('plus_43', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMap'), array(new PhiNameRef('pairs')))));
      }
       else {
        phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_2'), array(new PhiNameRef('$receiver'))))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll_0'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('pairs'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver_0')));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('plus_44', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toMap_1'), array(new PhiNameRef('pairs')))));
      }
       else {
        phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_2'), array(new PhiNameRef('$receiver'))))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('pairs'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver_0')));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('plus_45', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('putAll_1'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('pairs'))));
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyMap'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('plus_46', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('LinkedHashMap_init_2'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'putAll_a2k3zr$'), array(new PhiNameRef('map_12'))));
      return new PhiNameRef('$receiver_0');
    }))));
    phiVars(array(array('minus_11', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toMutableMap'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'remove_11rb$'), array(new PhiNameRef('key'))));
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyMap'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('minus_12', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toMutableMap'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_ipc267$'), array(new PhiDot(new PhiNameRef('$receiver_0'), 'keys'), new PhiNameRef('keys'))));
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyMap'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('minus_13', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toMutableMap'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_ye1y7v$'), array(new PhiDot(new PhiNameRef('$receiver_0'), 'keys'), new PhiNameRef('keys'))));
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyMap'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('minus_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('toMutableMap'), array(new PhiNameRef('$receiver'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_tj7pfx$'), array(new PhiDot(new PhiNameRef('$receiver_0'), 'keys'), new PhiNameRef('keys'))));
      return new PhiInvocation(new PhiNameRef('optimizeReadOnlyMap'), array(new PhiNameRef('$receiver_0')));
    }))));
    phiVars(array(array('optimizeReadOnlyMap', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptyMap'), array());
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          return new PhiNameRef('$receiver');
        }
         else {
          return new PhiNameRef('$receiver');
        }
      }
    }))));
    phiVars(array(array('addAll_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('elements'), new PhiNameRef('Collection'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'addAll_brywnq$'), array(new PhiNameRef('elements')));
      }
       else {
        phiVars(array(array('result', false)));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'add_11rb$'), array(new PhiNameRef('item'))))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), true));
          }
        }
        return new PhiNameRef('result');
      }
    }))));
    phiVars(array(array('addAll_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('result', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'add_11rb$'), array(new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), true));
        }
      }
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('addAll', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'addAll_brywnq$'), array(new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('elements')))));
    }))));
    phiVars(array(array('removeAll', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterInPlace'), array(new PhiNameRef('$receiver'), new PhiNameRef('predicate'), true));
    }))));
    phiVars(array(array('retainAll_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterInPlace'), array(new PhiNameRef('$receiver'), new PhiNameRef('predicate'), false));
    }))));
    phiVars(array(array('filterInPlace', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiObjectLiteral(array(array(new PhiNameRef('v'), false))))));
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'hasNext'), array())) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'next'), array()))), new PhiNameRef('predicateResultToRemove'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'remove'), array()));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('result'), 'v'), true));
        }
      }
      return new PhiDot(new PhiNameRef('result'), 'v');
    }))));
    phiVars(array(array('removeAll_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterInPlace_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('predicate'), true));
    }))));
    phiVars(array(array('retainAll_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('filterInPlace_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('predicate'), false));
    }))));
    phiVars(array(array('filterInPlace_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('RandomAccess')))))) {
        return new PhiInvocation(new PhiNameRef('filterInPlace'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiNameRef('MutableIterable'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('predicate'), new PhiNameRef('predicateResultToRemove')));
      }
      phiVars(array(array('writeIndex', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('readIndex', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('readIndex'), new PhiNameRef('tmp$_0')); new PhiNameRef('readIndex')++) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('readIndex'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))), new PhiNameRef('predicateResultToRemove'))))) {
          continue;
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('writeIndex'), new PhiNameRef('readIndex')))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'set_wxm5ur$'), array(new PhiNameRef('writeIndex'), new PhiNameRef('element'))));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('writeIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('writeIndex'), 1.0), 0.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('writeIndex'), new PhiDot(new PhiNameRef('$receiver'), 'size')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('downTo'), array(new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('$receiver'))), new PhiNameRef('writeIndex'))), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'hasNext'), array())) {
          phiVars(array(array('removeIndex', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'next'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'removeAt_za3lpa$'), array(new PhiNameRef('removeIndex'))));
        }
        return true;
      }
       else {
        return false;
      }
    }))));
    phiVars(array(array('removeAll_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('elements_0', new PhiInvocation(new PhiNameRef('convertToSetForSetOperationWith'), array(new PhiNameRef('elements'), new PhiNameRef('$receiver'))))));
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'MutableCollection'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'removeAll_brywnq$'), array(new PhiNameRef('elements_0')));
    }))));
    phiVars(array(array('removeAll_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toHashSet_9'), array(new PhiNameRef('elements'))))));
      return new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'isEmpty'), array())), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'removeAll_brywnq$'), array(new PhiNameRef('set_19'))));
    }))));
    phiVars(array(array('removeAll_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0)), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'removeAll_brywnq$'), array(new PhiInvocation(new PhiNameRef('toHashSet'), array(new PhiNameRef('elements'))))));
    }))));
    phiVars(array(array('retainAll', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('elements_0', new PhiInvocation(new PhiNameRef('convertToSetForSetOperationWith'), array(new PhiNameRef('elements'), new PhiNameRef('$receiver'))))));
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'MutableCollection'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'retainAll_brywnq$'), array(new PhiNameRef('elements_0')));
    }))));
    phiVars(array(array('retainAll_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0)))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'retainAll_brywnq$'), array(new PhiInvocation(new PhiNameRef('toHashSet'), array(new PhiNameRef('elements')))));
      }
       else {
        return new PhiInvocation(new PhiNameRef('retainNothing'), array(new PhiNameRef('$receiver')));
      }
    }))));
    phiVars(array(array('retainAll_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('set_19', new PhiInvocation(new PhiNameRef('toHashSet_9'), array(new PhiNameRef('elements'))))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'isEmpty'), array())))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'retainAll_brywnq$'), array(new PhiNameRef('set_19')));
      }
       else {
        return new PhiInvocation(new PhiNameRef('retainNothing'), array(new PhiNameRef('$receiver')));
      }
    }))));
    phiVars(array(array('retainNothing', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array())))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'clear'), array()));
      return new PhiNameRef('result');
    }))));
    phiVars(array(array('ReversedListReadOnly', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractList'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'delegate_0'), new PhiNameRef('delegate')));
    }))));
    phiVars(array(array('ReversedList', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractMutableList'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'delegate_0'), new PhiNameRef('delegate')));
    }))));
    phiVars(array(array('reverseElementIndex', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0))), 'contains_mef7kx$'), array(new PhiNameRef('index'))))) {
        return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('index')), 1.0), 0.0);
      }
       else {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Index '), new PhiNameRef('index')), new PhiStringLiteral(' should be in range [')), new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0), 0.0)))), new PhiStringLiteral('].')))));
      }
    }))));
    phiVars(array(array('reversePositionIndex', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiDot(new PhiNameRef('$receiver'), 'size'))), 'contains_mef7kx$'), array(new PhiNameRef('index'))))) {
        return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiNameRef('index')), 0.0);
      }
       else {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Index '), new PhiNameRef('index')), new PhiStringLiteral(' should be in range [')), new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiDot(new PhiNameRef('$receiver'), 'size')))), new PhiStringLiteral('].')))));
      }
    }))));
    phiVars(array(array('asReversed', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('ReversedListReadOnly'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('asReversed_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('ReversedList'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('Sequence_0', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Sequence$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$iterator'), new PhiNameRef('closure$iterator')));
    }))));
    phiVars(array(array('asSequence$lambda_10', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiNameRef('this$asSequence');
      });
    }))));
    phiVars(array(array('asSequence_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('constrainOnce'), array(new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('asSequence$lambda_10'), array(new PhiNameRef('$receiver')))))));
    }))));
    phiVars(array(array('sequenceOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('emptySequence'), array()), new PhiInvocation(new PhiNameRef('asSequence'), array(new PhiNameRef('elements'))));
    }))));
    phiVars(array(array('emptySequence', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptySequence_getInstance'), array());
    }))));
    phiVars(array(array('EmptySequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('EmptySequence_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('EmptySequence_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('EmptySequence_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('EmptySequence'), array()));
      }
      return new PhiNameRef('EmptySequence_instance');
    }))));
    phiVars(array(array('flatten$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('it'), 'iterator'), array());
    }))));
    phiVars(array(array('flatten', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('flatten_2'), array(new PhiNameRef('$receiver'), new PhiNameRef('flatten$lambda')));
    }))));
    phiVars(array(array('flatten$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('it'), 'iterator'), array());
    }))));
    phiVars(array(array('flatten_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('flatten_2'), array(new PhiNameRef('$receiver'), new PhiNameRef('flatten$lambda_0')));
    }))));
    phiVars(array(array('flatten$lambda_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('it');
    }))));
    phiVars(array(array('flatten_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('TransformingSequence'))))) {
        return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiNameRef('TransformingSequence'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'flatten_0'), array(new PhiNameRef('iterator_3')));
      }
      return new PhiNew(new PhiNameRef('FlatteningSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('flatten$lambda_1'), new PhiNameRef('iterator_3')));
    }))));
    phiVars(array(array('unzip_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('listT', new PhiInvocation(new PhiNameRef('ArrayList_init'), array()))));
      phiVars(array(array('listR', new PhiInvocation(new PhiNameRef('ArrayList_init'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('pair', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('listT'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('pair'), 'first'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('listR'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('listT'), new PhiNameRef('listR')));
    }))));
    phiVars(array(array('FilteringSequence', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('sendWhen'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sendWhen'), true));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sendWhen_0'), new PhiNameRef('sendWhen')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'predicate_0'), new PhiNameRef('predicate')));
    }))));
    phiVars(array(array('FilteringSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$FilteringSequence'), new PhiNameRef('this$FilteringSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$FilteringSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
    }))));
    phiVars(array(array('TransformingSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'transformer_0'), new PhiNameRef('transformer')));
    }))));
    phiVars(array(array('TransformingSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$TransformingSequence'), new PhiNameRef('this$TransformingSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$TransformingSequence'), 'sequence_0'), 'iterator'), array())));
    }))));
    phiVars(array(array('TransformingIndexedSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'transformer_0'), new PhiNameRef('transformer')));
    }))));
    phiVars(array(array('TransformingIndexedSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$TransformingIndexedSequence'), new PhiNameRef('this$TransformingIndexedSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$TransformingIndexedSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), 0.0));
    }))));
    phiVars(array(array('IndexingSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
    }))));
    phiVars(array(array('IndexingSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$IndexingSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), 0.0));
    }))));
    phiVars(array(array('MergingSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence1_0'), new PhiNameRef('sequence1')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence2_0'), new PhiNameRef('sequence2')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'transform_0'), new PhiNameRef('transform')));
    }))));
    phiVars(array(array('MergingSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$MergingSequence'), new PhiNameRef('this$MergingSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator1'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$MergingSequence'), 'sequence1_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator2'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$MergingSequence'), 'sequence2_0'), 'iterator'), array())));
    }))));
    phiVars(array(array('FlatteningSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'transformer_0'), new PhiNameRef('transformer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator_0'), new PhiNameRef('iterator_3')));
    }))));
    phiVars(array(array('FlatteningSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$FlatteningSequence'), new PhiNameRef('this$FlatteningSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$FlatteningSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'itemIterator'), null));
    }))));
    phiVars(array(array('DropTakeSequence', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('SubSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'startIndex_0'), new PhiNameRef('startIndex')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'endIndex_0'), new PhiNameRef('endIndex')));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'startIndex_0'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiStringLiteral('startIndex should be non-negative, but is '), new PhiDot(new PhiNameRef('this'), 'startIndex_0')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'endIndex_0'), 0.0)))) {
        phiVars(array(array('message_0', new PhiBinaryOperation('+', new PhiStringLiteral('endIndex should be non-negative, but is '), new PhiDot(new PhiNameRef('this'), 'endIndex_0')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message_0'), 'toString'), array()))));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'endIndex_0'), new PhiDot(new PhiNameRef('this'), 'startIndex_0'))))) {
        phiVars(array(array('message_1', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('endIndex should be not less than startIndex, but was '), new PhiDot(new PhiNameRef('this'), 'endIndex_0')), new PhiStringLiteral(' < ')), new PhiDot(new PhiNameRef('this'), 'startIndex_0')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message_1'), 'toString'), array()))));
      }
    }))));
    phiVars(array(array('SubSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$SubSequence'), new PhiNameRef('this$SubSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$SubSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'position'), 0.0));
    }))));
    phiVars(array(array('TakeSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'count_0'), new PhiNameRef('count_26')));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'count_0'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('count must be non-negative, but was '), new PhiDot(new PhiNameRef('this'), 'count_0')), new PhiStringLiteral('.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
    }))));
    phiVars(array(array('TakeSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'left'), new PhiDot(new PhiNameRef('this$TakeSequence'), 'count_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$TakeSequence'), 'sequence_0'), 'iterator'), array())));
    }))));
    phiVars(array(array('TakeWhileSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'predicate_0'), new PhiNameRef('predicate')));
    }))));
    phiVars(array(array('TakeWhileSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$TakeWhileSequence'), new PhiNameRef('this$TakeWhileSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$TakeWhileSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
    }))));
    phiVars(array(array('DropSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'count_0'), new PhiNameRef('count_26')));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'count_0'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('count must be non-negative, but was '), new PhiDot(new PhiNameRef('this'), 'count_0')), new PhiStringLiteral('.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
    }))));
    phiVars(array(array('DropSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$DropSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'left'), new PhiDot(new PhiNameRef('this$DropSequence'), 'count_0')));
    }))));
    phiVars(array(array('DropWhileSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('sequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'predicate_0'), new PhiNameRef('predicate')));
    }))));
    phiVars(array(array('DropWhileSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$DropWhileSequence'), new PhiNameRef('this$DropWhileSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'iterator'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this$DropWhileSequence'), 'sequence_0'), 'iterator'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'dropState'), new PhiPrefixOperation('-', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
    }))));
    phiVars(array(array('DistinctSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'source_0'), new PhiNameRef('source')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'keySelector_0'), new PhiNameRef('keySelector')));
    }))));
    phiVars(array(array('DistinctIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('AbstractIterator'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'source_0'), new PhiNameRef('source')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'keySelector_0'), new PhiNameRef('keySelector')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'observed_0'), new PhiInvocation(new PhiNameRef('HashSet_init'), array())));
    }))));
    phiVars(array(array('GeneratorSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'getInitialValue_0'), new PhiNameRef('getInitialValue')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'getNextValue_0'), new PhiNameRef('getNextValue')));
    }))));
    phiVars(array(array('GeneratorSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$GeneratorSequence'), new PhiNameRef('this$GeneratorSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 2.0)));
    }))));
    phiVars(array(array('constrainOnce', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('ConstrainedOnceSequence'))), new PhiNameRef('$receiver'), new PhiNew(new PhiNameRef('ConstrainedOnceSequence'), array(new PhiNameRef('$receiver'))));
    }))));
    phiVars(array(array('generateSequence$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('closure$nextFunction'), array());
      });
    }))));
    phiVars(array(array('generateSequence_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('constrainOnce'), array(new PhiNew(new PhiNameRef('GeneratorSequence'), array(new PhiNameRef('nextFunction'), new PhiInvocation(new PhiNameRef('generateSequence$lambda'), array(new PhiNameRef('nextFunction')))))));
    }))));
    phiVars(array(array('generateSequence$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiNameRef('closure$seed');
      });
    }))));
    phiVars(array(array('generateSequence_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('==', new PhiNameRef('seed'), null), new PhiInvocation(new PhiNameRef('EmptySequence_getInstance'), array()), new PhiNew(new PhiNameRef('GeneratorSequence'), array(new PhiInvocation(new PhiNameRef('generateSequence$lambda_0'), array(new PhiNameRef('seed'))), new PhiNameRef('nextFunction'))));
    }))));
    phiVars(array(array('generateSequence', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('GeneratorSequence'), array(new PhiNameRef('seedFunction'), new PhiNameRef('nextFunction')));
    }))));
    phiVars(array(array('EmptySet', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('EmptySet_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'serialVersionUID_0'), new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(1.993859828E9, 7.93161749E8))));
    }))));
    phiVars(array(array('EmptySet_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('EmptySet_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('EmptySet'), array()));
      }
      return new PhiNameRef('EmptySet_instance');
    }))));
    phiVars(array(array('emptySet', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptySet_getInstance'), array());
    }))));
    phiVars(array(array('setOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('elements'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('toSet'), array(new PhiNameRef('elements'))), new PhiInvocation(new PhiNameRef('emptySet'), array()));
    }))));
    phiVars(array(array('mutableSetOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection'), array(new PhiNameRef('elements'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('elements'), 'length')))))));
    }))));
    phiVars(array(array('hashSetOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection'), array(new PhiNameRef('elements'), new PhiInvocation(new PhiNameRef('HashSet_init_1'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('elements'), 'length')))))));
    }))));
    phiVars(array(array('linkedSetOf_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toCollection'), array(new PhiNameRef('elements'), new PhiInvocation(new PhiNameRef('LinkedHashSet_init_2'), array(new PhiInvocation(new PhiNameRef('mapCapacity'), array(new PhiDot(new PhiNameRef('elements'), 'length')))))));
    }))));
    phiVars(array(array('optimizeReadOnlySet', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 0.0))) {
        return new PhiInvocation(new PhiNameRef('emptySet'), array());
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), 1.0))) {
          return new PhiInvocation(new PhiNameRef('setOf'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()), 'next'), array())));
        }
         else {
          return new PhiNameRef('$receiver');
        }
      }
    }))));
    phiVars(array(array('compareValuesBy', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('selectors'), 'length'), 0.0)))) {
        phiVars(array(array('message', new PhiStringLiteral('Failed requirement.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('selectors'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('fn', new PhiBrackets(new PhiNameRef('selectors'), new PhiNameRef('tmp$')))));
        phiVars(array(array('v1', new PhiInvocation(new PhiNameRef('fn'), array(new PhiNameRef('a'))))));
        phiVars(array(array('v2', new PhiInvocation(new PhiNameRef('fn'), array(new PhiNameRef('b'))))));
        phiVars(array(array('diff', new PhiInvocation(new PhiNameRef('compareValues'), array(new PhiNameRef('v1'), new PhiNameRef('v2'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('diff'), 0.0))) {
          return new PhiNameRef('diff');
        }
      }
      return 0.0;
    }))));
    phiVars(array(array('compareValues', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('a'), new PhiNameRef('b')))) {
        return 0.0;
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('a'), null))) {
        return new PhiPrefixOperation('-', 1.0);
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('b'), null))) {
        return 1.0;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isComparable'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('a')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('b')));
    }))));
    phiVars(array(array('compareBy$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selectors'), new PhiNameRef('closure$selectors')));
    }))));
    phiVars(array(array('compareBy_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('compareBy$ObjectLiteral'), array(new PhiNameRef('selectors')));
    }))));
    phiVars(array(array('compareBy$ObjectLiteral_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('compareBy$ObjectLiteral_1', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('compareByDescending$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('compareByDescending$ObjectLiteral_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('thenBy$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$thenBy'), new PhiNameRef('this$thenBy')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('thenBy$ObjectLiteral_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$thenBy'), new PhiNameRef('this$thenBy')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('thenByDescending$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$thenByDescending'), new PhiNameRef('this$thenByDescending')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('thenByDescending$ObjectLiteral_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$thenByDescending'), new PhiNameRef('this$thenByDescending')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$selector'), new PhiNameRef('closure$selector')));
    }))));
    phiVars(array(array('thenComparator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$thenComparator'), new PhiNameRef('this$thenComparator')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparison'), new PhiNameRef('closure$comparison')));
    }))));
    phiVars(array(array('then$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$then'), new PhiNameRef('this$then')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
    }))));
    phiVars(array(array('then', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('then$ObjectLiteral'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('thenDescending$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$thenDescending'), new PhiNameRef('this$thenDescending')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
    }))));
    phiVars(array(array('thenDescending', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('thenDescending$ObjectLiteral'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('nullsFirst$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
    }))));
    phiVars(array(array('nullsFirst', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('nullsFirst$ObjectLiteral'), array(new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('nullsLast$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$comparator'), new PhiNameRef('closure$comparator')));
    }))));
    phiVars(array(array('nullsLast', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('nullsLast$ObjectLiteral'), array(new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('naturalOrder', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('NaturalOrderComparator_getInstance'), array())), new PhiNameRef('Comparator'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))));
    phiVars(array(array('reverseOrder', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('ReverseOrderComparator_getInstance'), array())), new PhiNameRef('Comparator'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))));
    phiVars(array(array('reversed_14', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('$receiver'), new PhiNameRef('ReversedComparator'))))) {
        return new PhiDot(new PhiNameRef('$receiver'), 'comparator');
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('NaturalOrderComparator_getInstance'), array()))))) {
          return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('ReverseOrderComparator_getInstance'), array())), new PhiNameRef('Comparator'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
        }
         else {
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiNameRef('ReverseOrderComparator_getInstance'), array()))))) {
            return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('NaturalOrderComparator_getInstance'), array())), new PhiNameRef('Comparator'))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
          }
           else {
            return new PhiNew(new PhiNameRef('ReversedComparator'), array(new PhiNameRef('$receiver')));
          }
        }
      }
    }))));
    phiVars(array(array('ReversedComparator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'comparator'), new PhiNameRef('comparator')));
    }))));
    phiVars(array(array('NaturalOrderComparator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('NaturalOrderComparator_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('NaturalOrderComparator_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('NaturalOrderComparator_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('NaturalOrderComparator'), array()));
      }
      return new PhiNameRef('NaturalOrderComparator_instance');
    }))));
    phiVars(array(array('ReverseOrderComparator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ReverseOrderComparator_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('ReverseOrderComparator_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ReverseOrderComparator_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('ReverseOrderComparator'), array()));
      }
      return new PhiNameRef('ReverseOrderComparator_instance');
    }))));
    phiVars(array(array('ContinuationInterceptor', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('ContinuationInterceptor$Key_getInstance'), array()));
    }))));
    phiVars(array(array('ContinuationInterceptor$Key', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ContinuationInterceptor$Key_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('ContinuationInterceptor$Key_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ContinuationInterceptor$Key_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('ContinuationInterceptor$Key'), array()));
      }
      return new PhiNameRef('ContinuationInterceptor$Key_instance');
    }))));
    phiVars(array(array('CoroutineContext', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('CoroutineContext$Element', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('CoroutineContext$Key', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('AbstractCoroutineContextElement', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'key_d52xrr$_0'), new PhiNameRef('key')));
    }))));
    phiVars(array(array('EmptyCoroutineContext', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('EmptyCoroutineContext_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('EmptyCoroutineContext_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('EmptyCoroutineContext_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('EmptyCoroutineContext'), array()));
      }
      return new PhiNameRef('EmptyCoroutineContext_instance');
    }))));
    phiVars(array(array('CombinedContext', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'left'), new PhiNameRef('left')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'element'), new PhiNameRef('element')));
    }))));
    phiVars(array(array('CombinedContext$toString$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('acc'), 'length'), 0.0), new PhiInvocation(new PhiDot(new PhiNameRef('element'), 'toString'), array()), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiNameRef('acc'), new PhiStringLiteral(', ')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('element')))));
    }))));
    phiVars(array(array('plusImpl$lambda', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('removed', new PhiInvocation(new PhiDot(new PhiNameRef('acc'), 'minusKey_ds72xk$'), array(new PhiDot(new PhiNameRef('element'), 'key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('removed'), new PhiInvocation(new PhiNameRef('EmptyCoroutineContext_getInstance'), array())))) {
        return new PhiNameRef('element');
      }
       else {
        phiVars(array(array('interceptor', new PhiInvocation(new PhiDot(new PhiNameRef('removed'), 'get_8oh8b3$'), array(new PhiInvocation(new PhiNameRef('ContinuationInterceptor$Key_getInstance'), array()))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('interceptor'), null))) {
          return new PhiNew(new PhiNameRef('CombinedContext'), array(new PhiNameRef('removed'), new PhiNameRef('element')));
        }
         else {
          phiVars(array(array('left', new PhiInvocation(new PhiDot(new PhiNameRef('removed'), 'minusKey_ds72xk$'), array(new PhiInvocation(new PhiNameRef('ContinuationInterceptor$Key_getInstance'), array()))))));
          return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('left'), new PhiInvocation(new PhiNameRef('EmptyCoroutineContext_getInstance'), array())), new PhiNew(new PhiNameRef('CombinedContext'), array(new PhiNameRef('element'), new PhiNameRef('interceptor'))), new PhiNew(new PhiNameRef('CombinedContext'), array(new PhiNew(new PhiNameRef('CombinedContext'), array(new PhiNameRef('left'), new PhiNameRef('element'))), new PhiNameRef('interceptor'))));
        }
      }
    }))));
    phiVars(array(array('plusImpl', new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('context'), new PhiInvocation(new PhiNameRef('EmptyCoroutineContext_getInstance'), array())), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('context'), 'fold_m9u1mr$'), array(new PhiNameRef('$receiver'), new PhiNameRef('plusImpl$lambda'))));
    }))));
    phiVars(array(array('Continuation', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('RestrictsSuspension', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('startCoroutine', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('createCoroutineUnchecked'), array(new PhiNameRef('$receiver'), new PhiNameRef('receiver'), new PhiNameRef('completion'))), 'resume_11rb$'), array(new PhiInvocation(new PhiNameRef('Unit_getInstance'), array()))));
    }))));
    phiVars(array(array('startCoroutine_0', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('createCoroutineUnchecked_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('completion'))), 'resume_11rb$'), array(new PhiInvocation(new PhiNameRef('Unit_getInstance'), array()))));
    }))));
    phiVars(array(array('createCoroutine', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('SafeContinuation'), array(new PhiInvocation(new PhiNameRef('createCoroutineUnchecked'), array(new PhiNameRef('$receiver'), new PhiNameRef('receiver'), new PhiNameRef('completion'))), new PhiNameRef('COROUTINE_SUSPENDED')));
    }))));
    phiVars(array(array('createCoroutine_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('SafeContinuation'), array(new PhiInvocation(new PhiNameRef('createCoroutineUnchecked_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('completion'))), new PhiNameRef('COROUTINE_SUSPENDED')));
    }))));
    phiVars(array(array('suspendCoroutine$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('safe', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'coroutines'), 'experimental'), 'SafeContinuation_init_n4f53e$'), array(new PhiNameRef('c'))))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('closure$block'), array(new PhiNameRef('safe'))));
        return new PhiInvocation(new PhiDot(new PhiNameRef('safe'), 'getResult'), array());
      });
    }))));
    phiVars(array(array('processBareContinuationResume', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      {
        try {
          phiVars(array(array('result', new PhiInvocation(new PhiNameRef('block'), array()))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('result'), new PhiNameRef('COROUTINE_SUSPENDED')))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('completion')), new PhiNameRef('Continuation'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'resume_11rb$'), array(new PhiNameRef('result'))));
          }
        }
         catch (t) {
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('t'), new PhiNameRef('Throwable'))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('completion'), 'resumeWithException_tcv7n7$'), array(new PhiNameRef('t'))));
          }
           else {
            phiThrow(new PhiNameRef('t'));
          }
        }
      }
    }))));
    phiVars(array(array('buildSequence$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('buildIterator'), array(new PhiNameRef('closure$builderAction')));
      });
    }))));
    phiVars(array(array('buildSequence', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiInvocation(new PhiNameRef('buildSequence$lambda'), array(new PhiNameRef('builderAction')))));
    }))));
    phiVars(array(array('buildIterator', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiNew(new PhiNameRef('SequenceBuilderIterator'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('iterator_3'), 'nextStep'), new PhiInvocation(new PhiNameRef('createCoroutineUnchecked'), array(new PhiNameRef('builderAction'), new PhiNameRef('iterator_3'), new PhiNameRef('iterator_3')))));
      return new PhiNameRef('iterator_3');
    }))));
    phiVars(array(array('SequenceBuilder', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('SequenceBuilderIterator', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('SequenceBuilder'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), new PhiNameRef('State_NotReady')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextValue_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextIterator_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextStep'), null));
    }))));
    phiVars(array(array('SequenceBuilderIterator$yield$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this$SequenceBuilderIterator'), 'nextStep'), new PhiNameRef('c')));
        return new PhiNameRef('COROUTINE_SUSPENDED');
      });
    }))));
    phiVars(array(array('SequenceBuilderIterator$yieldAll$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this$SequenceBuilderIterator'), 'nextStep'), new PhiNameRef('c')));
        return new PhiNameRef('COROUTINE_SUSPENDED');
      });
    }))));
    phiVars(array(array('NoInfer', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Exact', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('LowPriorityInOverloadResolution', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('HidesMembers', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('OnlyInputTypes', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('InlineOnly', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('DynamicExtension', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('Delegates', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('Delegates_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('Delegates$observable$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$onChange'), new PhiNameRef('closure$onChange')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('ObservableProperty'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('initialValue'))));
    }))));
    phiVars(array(array('Delegates$vetoable$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'closure$onChange'), new PhiNameRef('closure$onChange')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('ObservableProperty'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('initialValue'))));
    }))));
    phiVars(array(array('Delegates_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('Delegates_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('Delegates'), array()));
      }
      return new PhiNameRef('Delegates_instance');
    }))));
    phiVars(array(array('NotNullVar', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value_0'), null));
    }))));
    phiVars(array(array('ReadOnlyProperty', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('ReadWriteProperty', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('ObservableProperty', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value_x0pqrw$_0'), new PhiNameRef('initialValue')));
    }))));
    phiVars(array(array('ClosedFloatingPointRange', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('ComparableRange', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'start_f2kfoi$_0'), new PhiNameRef('start')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'endInclusive_f2kfoi$_0'), new PhiNameRef('endInclusive')));
    }))));
    phiVars(array(array('ClosedDoubleRange', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_start_0'), new PhiNameRef('start')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_endInclusive_0'), new PhiNameRef('endInclusive')));
    }))));
    phiVars(array(array('rangeTo_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('ComparableRange'), array(new PhiNameRef('$receiver'), new PhiNameRef('that')));
    }))));
    phiVars(array(array('rangeTo', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('ClosedDoubleRange'), array(new PhiNameRef('$receiver'), new PhiNameRef('that')));
    }))));
    phiVars(array(array('checkStepIsPositive', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('isPositive')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Step must be positive, was: '), new PhiNameRef('step_2')), new PhiStringLiteral('.')))));
      }
    }))));
    phiVars(array(array('equals_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('other')))))) {
        return true;
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')))) {
        return false;
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('tmp$', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver_0'))))), 'toUpperCase'), array()), 'charCodeAt'), array(0.0)))))));
      phiVars(array(array('$receiver_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('other'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver_1'))))), 'toUpperCase'), array()), 'charCodeAt'), array(0.0))))))) {
        return true;
      }
      phiVars(array(array('$receiver_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('tmp$_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver_2'))))), 'toLowerCase'), array()), 'charCodeAt'), array(0.0)))))));
      phiVars(array(array('$receiver_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('other'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver_3'))))), 'toLowerCase'), array()), 'charCodeAt'), array(0.0))))))) {
        return true;
      }
      return false;
    }))));
    phiVars(array(array('isSurrogate', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('CharRange'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('CharCompanionObject'), 'MIN_SURROGATE'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('CharCompanionObject'), 'MAX_SURROGATE'))))), 'contains_mef7kx$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('trimMargin', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('marginPrefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('marginPrefix'), new PhiStringLiteral('|')));
      }
      return new PhiInvocation(new PhiNameRef('replaceIndentByMargin'), array(new PhiNameRef('$receiver'), new PhiStringLiteral(''), new PhiNameRef('marginPrefix')));
    }))));
    phiVars(array(array('replaceIndentByMargin', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('newIndent'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('newIndent'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('marginPrefix'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('marginPrefix'), new PhiStringLiteral('|')));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'isBlank_gw00vp$'), array(new PhiNameRef('marginPrefix'))))))) {
        phiVars(array(array('message', new PhiStringLiteral('marginPrefix must be non-blank string.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiVars(array(array('lines_0', new PhiInvocation(new PhiNameRef('lines'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('resultSizeEstimate', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'imul'), array(new PhiDot(new PhiNameRef('newIndent'), 'length'), new PhiDot(new PhiNameRef('lines_0'), 'size')))), 0.0))));
      phiVars(array(array('indentAddFunction', new PhiInvocation(new PhiNameRef('getIndentFunction'), array(new PhiNameRef('newIndent'))))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('lines_0'))))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('lines_0'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_1', )));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('tmp$_2', )));
        phiVars(array(array('tmp$_3', )));
        phiVars(array(array('tmp$_4', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('index_0'), 0.0), new PhiBinaryOperation('===', new PhiNameRef('index_0'), new PhiNameRef('lastIndex'))), new PhiInvocation(new PhiNameRef('isBlank'), array(new PhiNameRef('item')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_4'), null));
        }
         else {
          phiVars(array(array('closure$marginPrefix', new PhiNameRef('marginPrefix'))));
          phiVars(array(array('indentCutFunction$result', )));
          phiVars(array(array('indexOfFirst$result', )));
          {
            phiExpressionStatement(new PhiStringLiteral('Here was label indexOfFirst$break'));
            {
              phiVars(array(array('tmp$_5', )));
              phiVars(array(array('tmp$_6', )));
              phiVars(array(array('tmp$_7', )));
              phiVars(array(array('tmp$_8', )));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_5'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('item')))));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_6'), new PhiDot(new PhiNameRef('tmp$_5'), 'first')));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_7'), new PhiDot(new PhiNameRef('tmp$_5'), 'last')));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_8'), new PhiDot(new PhiNameRef('tmp$_5'), 'step')));
              phiVars(array(array('index_1', new PhiNameRef('tmp$_6'))));
              for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index_1'), new PhiNameRef('tmp$_7')); new PhiBinaryOperation('+=', new PhiNameRef('index_1'), new PhiNameRef('tmp$_8'))) {
                if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isWhitespace'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('item'), 'charCodeAt'), array(new PhiNameRef('index_1')))))))))))) {
                  phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiNameRef('index_1')));
                  phiExpressionStatement(new PhiNameRef('goto indexOfFirst_usd_break'));
                }
              }
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiPrefixOperation('-', 1.0)));
            }
            phiExpressionStatement(new PhiNameRef('indexOfFirst_usd_break:'));
          }
          phiVars(array(array('firstNonWhitespaceIndex', new PhiNameRef('indexOfFirst$result'))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('firstNonWhitespaceIndex'), new PhiPrefixOperation('-', 1.0)))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indentCutFunction$result'), null));
          }
           else {
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('startsWith_1'), array(new PhiNameRef('item'), new PhiNameRef('closure$marginPrefix'), new PhiNameRef('firstNonWhitespaceIndex'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indentCutFunction$result'), new PhiInvocation(new PhiDot(new PhiNameRef('item'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('firstNonWhitespaceIndex'), new PhiDot(new PhiNameRef('closure$marginPrefix'), 'length')), 0.0)))));
            }
             else {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indentCutFunction$result'), null));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_4'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_3'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiNameRef('indentCutFunction$result')), null), new PhiInvocation(new PhiNameRef('indentAddFunction'), array(new PhiNameRef('tmp$_2'))), null)), null), new PhiNameRef('tmp$_3'), new PhiNameRef('item'))));
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiNameRef('tmp$_4')), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_8'), array(new PhiNameRef('destination'), new PhiInvocation(new PhiNameRef('StringBuilder_init'), array(new PhiNameRef('resultSizeEstimate'))), new PhiStringLiteral('\n'))), 'toString'), array());
    }))));
    phiVars(array(array('trimIndent', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('replaceIndent'), array(new PhiNameRef('$receiver'), new PhiStringLiteral('')));
    }))));
    phiVars(array(array('replaceIndent', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('newIndent'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('newIndent'), new PhiStringLiteral('')));
      }
      phiVars(array(array('tmp$', )));
      phiVars(array(array('lines_0', new PhiInvocation(new PhiNameRef('lines'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('lines_0'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'isBlank_gw00vp$'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      phiVars(array(array('destination_0', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('destination'), 10.0)))))));
      phiVars(array(array('tmp$_1', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination_0'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('indentWidth'), array(new PhiNameRef('item'))))));
      }
      phiVars(array(array('minCommonIndent', new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('min_11'), array(new PhiNameRef('destination_0')))), null), new PhiNameRef('tmp$'), 0.0))));
      phiVars(array(array('resultSizeEstimate', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'imul'), array(new PhiDot(new PhiNameRef('newIndent'), 'length'), new PhiDot(new PhiNameRef('lines_0'), 'size')))), 0.0))));
      phiVars(array(array('indentAddFunction', new PhiInvocation(new PhiNameRef('getIndentFunction'), array(new PhiNameRef('newIndent'))))));
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('lines_0'))))));
      phiVars(array(array('destination_1', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$_2', )));
      phiVars(array(array('tmp$_3', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiInvocation(new PhiDot(new PhiNameRef('lines_0'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_2'), 'hasNext'), array())) {
        phiVars(array(array('item_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_2'), 'next'), array()))));
        phiVars(array(array('tmp$_4', )));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_3'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_3'), 1.0), 0.0))), new PhiNameRef('tmp$_3')))));
        phiVars(array(array('tmp$_5', )));
        phiVars(array(array('tmp$_6', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_4'), new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('index_0'), 0.0), new PhiBinaryOperation('===', new PhiNameRef('index_0'), new PhiNameRef('lastIndex'))), new PhiInvocation(new PhiNameRef('isBlank'), array(new PhiNameRef('item_0')))), null, new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_6'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_5'), new PhiInvocation(new PhiNameRef('drop_11'), array(new PhiNameRef('item_0'), new PhiNameRef('minCommonIndent')))), null), new PhiInvocation(new PhiNameRef('indentAddFunction'), array(new PhiNameRef('tmp$_5'))), null)), null), new PhiNameRef('tmp$_6'), new PhiNameRef('item_0')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination_1'), 'add_11rb$'), array(new PhiNameRef('tmp$_4'))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_8'), array(new PhiNameRef('destination_1'), new PhiInvocation(new PhiNameRef('StringBuilder_init'), array(new PhiNameRef('resultSizeEstimate'))), new PhiStringLiteral('\n'))), 'toString'), array());
    }))));
    phiVars(array(array('prependIndent$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isBlank'), array(new PhiNameRef('it'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('it'), 'length'), new PhiDot(new PhiNameRef('closure$indent'), 'length')))) {
            return new PhiNameRef('closure$indent');
          }
           else {
            return new PhiNameRef('it');
          }
        }
         else {
          return new PhiBinaryOperation('+', new PhiNameRef('closure$indent'), new PhiNameRef('it'));
        }
      });
    }))));
    phiVars(array(array('prependIndent', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('indent'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indent'), new PhiStringLiteral('    ')));
      }
      return new PhiInvocation(new PhiNameRef('joinToString_9'), array(new PhiInvocation(new PhiNameRef('map_10'), array(new PhiInvocation(new PhiNameRef('lineSequence'), array(new PhiNameRef('$receiver'))), new PhiInvocation(new PhiNameRef('prependIndent$lambda'), array(new PhiNameRef('indent'))))), new PhiStringLiteral('\n')));
    }))));
    phiVars(array(array('indentWidth', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('indexOfFirst$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label indexOfFirst$break'));
        {
          phiVars(array(array('tmp$', )));
          phiVars(array(array('tmp$_0', )));
          phiVars(array(array('tmp$_1', )));
          phiVars(array(array('tmp$_2', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
          phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
          for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isWhitespace'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiNameRef('index')));
              phiExpressionStatement(new PhiNameRef('goto indexOfFirst_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiPrefixOperation('-', 1.0)));
        }
        phiExpressionStatement(new PhiNameRef('indexOfFirst_usd_break:'));
      }
      phiVars(array(array('it', new PhiNameRef('indexOfFirst$result'))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('it'), new PhiPrefixOperation('-', 1.0)), new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('it'));
    }))));
    phiVars(array(array('getIndentFunction$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('line');
    }))));
    phiVars(array(array('getIndentFunction$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiBinaryOperation('+', new PhiNameRef('closure$indent'), new PhiNameRef('line'));
      });
    }))));
    phiVars(array(array('getIndentFunction', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('indent'), 'length'), 0.0))) {
        return new PhiNameRef('getIndentFunction$lambda');
      }
       else {
        return new PhiInvocation(new PhiNameRef('getIndentFunction$lambda_0'), array(new PhiNameRef('indent')));
      }
    }))));
    phiVars(array(array('reindent', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastIndex', new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_1', )));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('tmp$_2', )));
        phiVars(array(array('tmp$_3', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('index_0'), 0.0), new PhiBinaryOperation('===', new PhiNameRef('index_0'), new PhiNameRef('lastIndex'))), new PhiInvocation(new PhiNameRef('isBlank'), array(new PhiNameRef('item')))), null, new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_3'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiInvocation(new PhiNameRef('indentCutFunction'), array(new PhiNameRef('item')))), null), new PhiInvocation(new PhiNameRef('indentAddFunction'), array(new PhiNameRef('tmp$_2'))), null)), null), new PhiNameRef('tmp$_3'), new PhiNameRef('item')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('joinTo_8'), array(new PhiNameRef('destination'), new PhiInvocation(new PhiNameRef('StringBuilder_init'), array(new PhiNameRef('resultSizeEstimate'))), new PhiStringLiteral('\n'))), 'toString'), array());
    }))));
    phiVars(array(array('append', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('value'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('value'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'append_gw00v9$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('append_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('value'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('value'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'append_gw00v9$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('append_1', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('value'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('value'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'append_s8jyv4$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('appendElement', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('transform'), null))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiNameRef('element'), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'append_gw00v9$'), array(new PhiNameRef('element'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isChar'), array(new PhiNameRef('element'))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'append_s8itvh$'), array(new PhiNameRef('element'))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'append_gw00v9$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('element'))))));
          }
        }
      }
    }))));
    phiVars(array(array('toByteOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toByteOrNull_0'), array(new PhiNameRef('$receiver'), 10.0));
    }))));
    phiVars(array(array('toByteOrNull_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toIntOrNull_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('radix')))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('tmp$'), null))) {
        return null;
      }
      phiVars(array(array('int', new PhiNameRef('tmp$'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('int'), new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MIN_VALUE')), new PhiBinaryOperation('>', new PhiNameRef('int'), new PhiDot(new PhiNameRef('ByteCompanionObject'), 'MAX_VALUE'))))) {
        return null;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiNameRef('int')));
    }))));
    phiVars(array(array('toShortOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toShortOrNull_0'), array(new PhiNameRef('$receiver'), 10.0));
    }))));
    phiVars(array(array('toShortOrNull_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('toIntOrNull_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('radix')))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('tmp$'), null))) {
        return null;
      }
      phiVars(array(array('int', new PhiNameRef('tmp$'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('int'), new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MIN_VALUE')), new PhiBinaryOperation('>', new PhiNameRef('int'), new PhiDot(new PhiNameRef('ShortCompanionObject'), 'MAX_VALUE'))))) {
        return null;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiNameRef('int')));
    }))));
    phiVars(array(array('toIntOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toIntOrNull_0'), array(new PhiNameRef('$receiver'), 10.0));
    }))));
    phiVars(array(array('toIntOrNull_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('checkRadix'), array(new PhiNameRef('radix'))));
      phiVars(array(array('length', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('length'), 0.0))) {
        return null;
      }
      phiVars(array(array('start', )));
      phiVars(array(array('isNegative', )));
      phiVars(array(array('limit', )));
      phiVars(array(array('firstChar', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstChar'))), 48.0))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('length'), 1.0))) {
          return null;
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('start'), 1.0));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstChar'))), 45.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isNegative'), true));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiDot(new PhiNameRef('IntCompanionObject'), 'MIN_VALUE')));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstChar'))), 43.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isNegative'), false));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 2.147483647E9)));
          }
           else {
            return null;
          }
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('start'), 0.0));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isNegative'), false));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiPrefixOperation('-', 2.147483647E9)));
      }
      phiVars(array(array('limitBeforeMul', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiNameRef('limit'), new PhiNameRef('radix')), 0.0))));
      phiVars(array(array('result', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), 1.0), 0.0)));
      phiVars(array(array('i', new PhiNameRef('start'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('digit', new PhiInvocation(new PhiNameRef('digitOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))), new PhiNameRef('radix'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('digit'), 0.0))) {
          return null;
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('result'), new PhiNameRef('limitBeforeMul')))) {
          return null;
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'imul'), array(new PhiNameRef('result'), new PhiNameRef('radix')))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('limit'), new PhiNameRef('digit')), 0.0)))) {
          return null;
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('result'), new PhiNameRef('digit')), 0.0)));
      }
      return new PhiConditional(new PhiNameRef('isNegative'), new PhiNameRef('result'), new PhiPrefixOperation('-', new PhiNameRef('result')));
    }))));
    phiVars(array(array('toLongOrNull', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toLongOrNull_0'), array(new PhiNameRef('$receiver'), 10.0));
    }))));
    phiVars(array(array('toLongOrNull_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('checkRadix'), array(new PhiNameRef('radix'))));
      phiVars(array(array('length', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('length'), 0.0))) {
        return null;
      }
      phiVars(array(array('start', )));
      phiVars(array(array('isNegative', )));
      phiVars(array(array('limit', )));
      phiVars(array(array('firstChar', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstChar'))), 48.0))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('length'), 1.0))) {
          return null;
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('start'), 1.0));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstChar'))), 45.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isNegative'), true));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(0.0, new PhiPrefixOperation('-', 2.147483648E9)))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstChar'))), 43.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isNegative'), false));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(1.0, new PhiPrefixOperation('-', 2.147483648E9)))));
          }
           else {
            return null;
          }
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('start'), 0.0));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isNegative'), false));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), new PhiNew(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), array(1.0, new PhiPrefixOperation('-', 2.147483648E9)))));
      }
      phiVars(array(array('limitBeforeMul', new PhiInvocation(new PhiDot(new PhiNameRef('limit'), 'div'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('radix'))))))));
      phiVars(array(array('result', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'ZERO'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), 1.0), 0.0)));
      phiVars(array(array('i', new PhiNameRef('start'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('digit', new PhiInvocation(new PhiNameRef('digitOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))), new PhiNameRef('radix'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('digit'), 0.0))) {
          return null;
        }
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'compareTo_11rb$'), array(new PhiNameRef('limitBeforeMul'))), 0.0))) {
          return null;
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'multiply'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('radix')))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('limit'), 'add'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('digit'))))))), 0.0))) {
          return null;
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'subtract'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(new PhiNameRef('digit')))))));
      }
      return new PhiConditional(new PhiNameRef('isNegative'), new PhiNameRef('result'), new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'unaryMinus'), array()));
    }))));
    phiVars(array(array('trim_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('startIndex', 0.0)));
      phiVars(array(array('endIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0))));
      phiVars(array(array('startFound', false)));
      while (new PhiBinaryOperation('<=', new PhiNameRef('startIndex'), new PhiNameRef('endIndex'))) {
        phiVars(array(array('index', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('startFound')), new PhiNameRef('startIndex'), new PhiNameRef('endIndex')))));
        phiVars(array(array('match_0', new PhiInvocation(new PhiNameRef('contains_7'), array(new PhiNameRef('chars'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))))))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('startFound')))) {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startFound'), true));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('startIndex'), 1.0), 0.0)));
          }
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            break;
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('endIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('endIndex'), 1.0), 0.0)));
          }
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('endIndex'), 1.0), 0.0)));
    }))));
    phiVars(array(array('trim_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiVars(array(array('startIndex', 0.0)));
      phiVars(array(array('endIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver_0'), 'length'), 1.0), 0.0))));
      phiVars(array(array('startFound', false)));
      while (new PhiBinaryOperation('<=', new PhiNameRef('startIndex'), new PhiNameRef('endIndex'))) {
        phiVars(array(array('index', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('startFound')), new PhiNameRef('startIndex'), new PhiNameRef('endIndex')))));
        phiVars(array(array('match_0', new PhiInvocation(new PhiNameRef('contains_7'), array(new PhiNameRef('chars'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'charCodeAt'), array(new PhiNameRef('index'))))))))))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('startFound')))) {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startFound'), true));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('startIndex'), 1.0), 0.0)));
          }
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            break;
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('endIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('endIndex'), 1.0), 0.0)));
          }
        }
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('endIndex'), 1.0), 0.0))), 'toString'), array());
    }))));
    phiVars(array(array('trimStart_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('trimStart$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimStart$break'));
        {
          phiVars(array(array('tmp$', )));
          phiVars(array(array('tmp$_0', )));
          phiVars(array(array('tmp$_1', )));
          phiVars(array(array('tmp$_2', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
          phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
          for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('contains_7'), array(new PhiNameRef('chars'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('index'), new PhiDot(new PhiNameRef('$receiver'), 'length')))));
              phiExpressionStatement(new PhiNameRef('goto trimStart_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimStart_usd_break:'));
      }
      return new PhiNameRef('trimStart$result');
    }))));
    phiVars(array(array('trimStart', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiVars(array(array('trimStart_2pivbd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimStart_2pivbd$break'));
        {
          phiVars(array(array('tmp$_0', )));
          phiVars(array(array('tmp$_1', )));
          phiVars(array(array('tmp$_2', )));
          phiVars(array(array('tmp$_3', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver_0')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$_0'), 'first')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$_0'), 'last')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_3'), new PhiDot(new PhiNameRef('tmp$_0'), 'step')));
          phiVars(array(array('index', new PhiNameRef('tmp$_1'))));
          for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_2')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_3'))) {
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('contains_7'), array(new PhiNameRef('chars'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'charCodeAt'), array(new PhiNameRef('index')))))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart_2pivbd$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('index'), new PhiDot(new PhiNameRef('$receiver_0'), 'length')))));
              phiExpressionStatement(new PhiNameRef('goto trimStart_2pivbd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart_2pivbd$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimStart_2pivbd_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('trimStart_2pivbd$result'), 'toString'), array());
    }))));
    phiVars(array(array('trimEnd_2', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('trimEnd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimEnd$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('contains_7'), array(new PhiNameRef('chars'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd$result'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))), 'toString'), array())));
              phiExpressionStatement(new PhiNameRef('goto trimEnd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimEnd_usd_break:'));
      }
      return new PhiNameRef('trimEnd$result');
    }))));
    phiVars(array(array('trimEnd', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiVars(array(array('trimEnd_2pivbd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimEnd_2pivbd$break'));
        {
          phiVars(array(array('tmp$_0', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver_0'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('contains_7'), array(new PhiNameRef('chars'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'charCodeAt'), array(new PhiNameRef('index')))))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd_2pivbd$result'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver_0'), 0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))), 'toString'), array())));
              phiExpressionStatement(new PhiNameRef('goto trimEnd_2pivbd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd_2pivbd$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimEnd_2pivbd_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('trimEnd_2pivbd$result'), 'toString'), array());
    }))));
    phiVars(array(array('trim_4', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('startIndex', 0.0)));
      phiVars(array(array('endIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0))));
      phiVars(array(array('startFound', false)));
      while (new PhiBinaryOperation('<=', new PhiNameRef('startIndex'), new PhiNameRef('endIndex'))) {
        phiVars(array(array('index', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('startFound')), new PhiNameRef('startIndex'), new PhiNameRef('endIndex')))));
        phiVars(array(array('match_0', new PhiInvocation(new PhiNameRef('isWhitespace'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))))))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('startFound')))) {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startFound'), true));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('startIndex'), 1.0), 0.0)));
          }
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            break;
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('endIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('endIndex'), 1.0), 0.0)));
          }
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('endIndex'), 1.0), 0.0)));
    }))));
    phiVars(array(array('trimStart_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('trimStart$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimStart$break'));
        {
          phiVars(array(array('tmp$', )));
          phiVars(array(array('tmp$_0', )));
          phiVars(array(array('tmp$_1', )));
          phiVars(array(array('tmp$_2', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
          phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
          for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isWhitespace'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('index'), new PhiDot(new PhiNameRef('$receiver'), 'length')))));
              phiExpressionStatement(new PhiNameRef('goto trimStart_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimStart_usd_break:'));
      }
      return new PhiNameRef('trimStart$result');
    }))));
    phiVars(array(array('trimEnd_3', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('trimEnd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimEnd$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('isWhitespace'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd$result'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))), 'toString'), array())));
              phiExpressionStatement(new PhiNameRef('goto trimEnd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimEnd_usd_break:'));
      }
      return new PhiNameRef('trimEnd$result');
    }))));
    phiVars(array(array('padStart', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('padChar'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('padChar'), 32.0));
      }
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Desired length '), new PhiNameRef('length')), new PhiStringLiteral(' is less than zero.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiNameRef('length'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
      }
      phiVars(array(array('sb', new PhiInvocation(new PhiNameRef('StringBuilder_init'), array(new PhiNameRef('length'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), new PhiDot(new PhiNameRef('$receiver'), 'length')), 0.0)));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('padChar'))))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_gw00v9$'), array(new PhiNameRef('$receiver'))));
      return new PhiNameRef('sb');
    }))));
    phiVars(array(array('padStart_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('padChar'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('padChar'), 32.0));
      }
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('padStart'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('length'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('padChar'))))), 'toString'), array());
    }))));
    phiVars(array(array('padEnd', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('padChar'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('padChar'), 32.0));
      }
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('length'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Desired length '), new PhiNameRef('length')), new PhiStringLiteral(' is less than zero.')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<=', new PhiNameRef('length'), new PhiDot(new PhiNameRef('$receiver'), 'length')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
      }
      phiVars(array(array('sb', new PhiInvocation(new PhiNameRef('StringBuilder_init'), array(new PhiNameRef('length'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_gw00v9$'), array(new PhiNameRef('$receiver'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), new PhiDot(new PhiNameRef('$receiver'), 'length')), 0.0)));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('padChar'))))));
      }
      return new PhiNameRef('sb');
    }))));
    phiVars(array(array('padEnd_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('padChar'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('padChar'), 32.0));
      }
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('padEnd'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('length'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('padChar'))))), 'toString'), array());
    }))));
    phiVars(array(array('iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$iterator'), new PhiNameRef('this$iterator')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('CharIterator'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), 0.0));
    }))));
    phiVars(array(array('iterator_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('iterator$ObjectLiteral'), array(new PhiNameRef('$receiver')));
    }))));
    phiVars(array(array('get_indices_8', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
    }))));
    phiVars(array(array('get_lastIndex_9', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0);
    }))));
    phiVars(array(array('hasSurrogatePairAt', new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 2.0), 0.0))), 'contains_mef7kx$'), array(new PhiNameRef('index'))), new PhiInvocation(new PhiNameRef('isHighSurrogate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))), new PhiInvocation(new PhiNameRef('isLowSurrogate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))))))));
    }))));
    phiVars(array(array('substring_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiDot(new PhiNameRef('range'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('range'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('subSequence_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('range'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('substring_3', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('range'), 'endInclusive'), 1.0), 0.0))), 'toString'), array());
    }))));
    phiVars(array(array('substringBefore', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_11'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiNameRef('index'))));
    }))));
    phiVars(array(array('substringBefore_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiNameRef('index'))));
    }))));
    phiVars(array(array('substringAfter', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_11'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0), new PhiDot(new PhiNameRef('$receiver'), 'length'))));
    }))));
    phiVars(array(array('substringAfter_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), new PhiDot(new PhiNameRef('delimiter'), 'length')), 0.0), new PhiDot(new PhiNameRef('$receiver'), 'length'))));
    }))));
    phiVars(array(array('substringBeforeLast', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiNameRef('index'))));
    }))));
    phiVars(array(array('substringBeforeLast_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiNameRef('index'))));
    }))));
    phiVars(array(array('substringAfterLast', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0), new PhiDot(new PhiNameRef('$receiver'), 'length'))));
    }))));
    phiVars(array(array('substringAfterLast_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)), new PhiNameRef('missingDelimiterValue'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), new PhiDot(new PhiNameRef('delimiter'), 'length')), 0.0), new PhiDot(new PhiNameRef('$receiver'), 'length'))));
    }))));
    phiVars(array(array('replaceRange', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('endIndex'), new PhiNameRef('startIndex')))) {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('End index ('), new PhiNameRef('endIndex')), new PhiStringLiteral(') is less than start index (')), new PhiNameRef('startIndex')), new PhiStringLiteral(').')))));
      }
      phiVars(array(array('sb', new PhiNew(new PhiNameRef('StringBuilder'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('$receiver'), 0.0, new PhiNameRef('startIndex'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_gw00v9$'), array(new PhiNameRef('replacement'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('$receiver'), new PhiNameRef('endIndex'), new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      return new PhiNameRef('sb');
    }))));
    phiVars(array(array('replaceRange_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('replaceRange'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('range'), 'endInclusive'), 1.0), 0.0), new PhiNameRef('replacement')));
    }))));
    phiVars(array(array('removeRange', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('endIndex'), new PhiNameRef('startIndex')))) {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('End index ('), new PhiNameRef('endIndex')), new PhiStringLiteral(') is less than start index (')), new PhiNameRef('startIndex')), new PhiStringLiteral(').')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('endIndex'), new PhiNameRef('startIndex')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
      }
      phiVars(array(array('sb', new PhiInvocation(new PhiNameRef('StringBuilder_init'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiBinaryOperation('-', new PhiNameRef('endIndex'), new PhiNameRef('startIndex'))), 0.0))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('$receiver'), 0.0, new PhiNameRef('startIndex'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('$receiver'), new PhiNameRef('endIndex'), new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      return new PhiNameRef('sb');
    }))));
    phiVars(array(array('removeRange_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('removeRange'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('range'), 'start'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('range'), 'endInclusive'), 1.0), 0.0)));
    }))));
    phiVars(array(array('removePrefix', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('startsWith_2'), array(new PhiNameRef('$receiver'), new PhiNameRef('prefix'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiDot(new PhiNameRef('$receiver'), 'length')));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
    }))));
    phiVars(array(array('removePrefix_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('startsWith_2'), array(new PhiNameRef('$receiver'), new PhiNameRef('prefix'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiDot(new PhiNameRef('prefix'), 'length')));
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('removeSuffix', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('endsWith_1'), array(new PhiNameRef('$receiver'), new PhiNameRef('suffix'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0)));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
    }))));
    phiVars(array(array('removeSuffix_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('endsWith_1'), array(new PhiNameRef('$receiver'), new PhiNameRef('suffix'))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0)));
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('removeSurrounding', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0)), new PhiInvocation(new PhiNameRef('startsWith_2'), array(new PhiNameRef('$receiver'), new PhiNameRef('prefix')))), new PhiInvocation(new PhiNameRef('endsWith_1'), array(new PhiNameRef('$receiver'), new PhiNameRef('suffix')))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0)));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
    }))));
    phiVars(array(array('removeSurrounding_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0)), new PhiInvocation(new PhiNameRef('startsWith_2'), array(new PhiNameRef('$receiver'), new PhiNameRef('prefix')))), new PhiInvocation(new PhiNameRef('endsWith_1'), array(new PhiNameRef('$receiver'), new PhiNameRef('suffix')))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0)));
      }
      return new PhiNameRef('$receiver');
    }))));
    phiVars(array(array('removeSurrounding_1', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('removeSurrounding'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'), new PhiNameRef('delimiter')));
    }))));
    phiVars(array(array('removeSurrounding_2', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('removeSurrounding_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'), new PhiNameRef('delimiter')));
    }))));
    phiVars(array(array('replaceBefore', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_11'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 0.0, new PhiNameRef('index'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replaceBefore_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 0.0, new PhiNameRef('index'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replaceAfter', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_11'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('startIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))));
        phiVars(array(array('endIndex', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('startIndex'), new PhiNameRef('endIndex'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replaceAfter_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('indexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('startIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), new PhiDot(new PhiNameRef('delimiter'), 'length')), 0.0))));
        phiVars(array(array('endIndex', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('startIndex'), new PhiNameRef('endIndex'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replaceAfterLast', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('startIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), new PhiDot(new PhiNameRef('delimiter'), 'length')), 0.0))));
        phiVars(array(array('endIndex', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('startIndex'), new PhiNameRef('endIndex'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replaceAfterLast_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('startIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))));
        phiVars(array(array('endIndex', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('startIndex'), new PhiNameRef('endIndex'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replaceBeforeLast', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_0'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('delimiter'))))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 0.0, new PhiNameRef('index'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('replaceBeforeLast_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('missingDelimiterValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('missingDelimiterValue'), new PhiNameRef('$receiver')));
      }
      phiVars(array(array('index', new PhiInvocation(new PhiNameRef('lastIndexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiter'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('missingDelimiterValue')));
      }
       else {
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 0.0, new PhiNameRef('index'), new PhiNameRef('replacement'))), 'toString'), array())));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('regionMatchesImpl', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('||', new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('otherOffset'), 0.0), new PhiBinaryOperation('<', new PhiNameRef('thisOffset'), 0.0)), new PhiBinaryOperation('>', new PhiNameRef('thisOffset'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('length')), 0.0))), new PhiBinaryOperation('>', new PhiNameRef('otherOffset'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('other'), 'length'), new PhiNameRef('length')), 0.0))))) {
        return false;
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('equals_0'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('thisOffset'), new PhiNameRef('index')), 0.0))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'charCodeAt'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('otherOffset'), new PhiNameRef('index')), 0.0))))), new PhiNameRef('ignoreCase')))))) {
          return false;
        }
      }
      return true;
    }))));
    phiVars(array(array('startsWith', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('equals_0'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), new PhiNameRef('ignoreCase'))));
    }))));
    phiVars(array(array('endsWith', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), new PhiInvocation(new PhiNameRef('equals_0'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver'))))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), new PhiNameRef('ignoreCase'))));
    }))));
    phiVars(array(array('startsWith_2', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string'))), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('prefix')), new PhiStringLiteral('string'))))) {
        return new PhiInvocation(new PhiNameRef('startsWith_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('prefix')));
      }
       else {
        return new PhiInvocation(new PhiNameRef('regionMatchesImpl'), array(new PhiNameRef('$receiver'), 0.0, new PhiNameRef('prefix'), 0.0, new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiNameRef('ignoreCase')));
      }
    }))));
    phiVars(array(array('startsWith_3', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string'))), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('prefix')), new PhiStringLiteral('string'))))) {
        return new PhiInvocation(new PhiNameRef('startsWith_1'), array(new PhiNameRef('$receiver'), new PhiNameRef('prefix'), new PhiNameRef('startIndex')));
      }
       else {
        return new PhiInvocation(new PhiNameRef('regionMatchesImpl'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiNameRef('prefix'), 0.0, new PhiDot(new PhiNameRef('prefix'), 'length'), new PhiNameRef('ignoreCase')));
      }
    }))));
    phiVars(array(array('endsWith_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string'))), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('suffix')), new PhiStringLiteral('string'))))) {
        return new PhiInvocation(new PhiNameRef('endsWith_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('suffix')));
      }
       else {
        return new PhiInvocation(new PhiNameRef('regionMatchesImpl'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('suffix'), 'length')), 0.0), new PhiNameRef('suffix'), 0.0, new PhiDot(new PhiNameRef('suffix'), 'length'), new PhiNameRef('ignoreCase')));
      }
    }))));
    phiVars(array(array('commonPrefixWith', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('shortestLength', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('i', 0.0)));
      while (new PhiBinaryOperation('&&', new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiNameRef('shortestLength')), new PhiInvocation(new PhiNameRef('equals_0'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'charCodeAt'), array(new PhiNameRef('i'))))), new PhiNameRef('ignoreCase'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('i'), 1.0), 0.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiInvocation(new PhiNameRef('hasSurrogatePairAt'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('i'), 1.0), 0.0))), new PhiInvocation(new PhiNameRef('hasSurrogatePairAt'), array(new PhiNameRef('other'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('i'), 1.0), 0.0)))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('i'), 1.0), 0.0)));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiNameRef('i'))), 'toString'), array());
    }))));
    phiVars(array(array('commonSuffixWith', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('thisLength', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('otherLength', new PhiDot(new PhiNameRef('other'), 'length'))));
      phiVars(array(array('shortestLength', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('thisLength'), new PhiNameRef('otherLength'))))));
      phiVars(array(array('i', 0.0)));
      while (new PhiBinaryOperation('&&', new PhiBinaryOperation('<', new PhiNameRef('i'), new PhiNameRef('shortestLength')), new PhiInvocation(new PhiNameRef('equals_0'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('-', new PhiNameRef('thisLength'), new PhiNameRef('i')), 1.0), 0.0))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'charCodeAt'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('-', new PhiNameRef('otherLength'), new PhiNameRef('i')), 1.0), 0.0))))), new PhiNameRef('ignoreCase'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('i'), 1.0), 0.0)));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiInvocation(new PhiNameRef('hasSurrogatePairAt'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('-', new PhiNameRef('thisLength'), new PhiNameRef('i')), 1.0), 0.0))), new PhiInvocation(new PhiNameRef('hasSurrogatePairAt'), array(new PhiNameRef('other'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('-', new PhiNameRef('otherLength'), new PhiNameRef('i')), 1.0), 0.0)))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('i'), 1.0), 0.0)));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('thisLength'), new PhiNameRef('i')), 0.0), new PhiNameRef('thisLength'))), 'toString'), array());
    }))));
    phiVars(array(array('findAnyOf', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('chars'), 'length'), 1.0)), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string'))))) {
        phiVars(array(array('char', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('single_7'), array(new PhiNameRef('chars'))))))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('last_25')))) {
          phiVars(array(array('ch', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'indexOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('ch'))))), new PhiNameRef('startIndex')))));
        }
         else {
          phiVars(array(array('ch_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'lastIndexOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('ch_0'))))), new PhiNameRef('startIndex')))));
        }
        phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
        return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0), null, new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('char'))))));
      }
      phiVars(array(array('indices', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('last_25')), new PhiNew(new PhiNameRef('IntRange'), array(new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiNameRef('startIndex'), 0.0)), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiNameRef('downTo'), array(new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver'))))), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('charAtIndex', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index_0'))))))));
        phiVars(array(array('indexOfFirst$result', )));
        {
          phiExpressionStatement(new PhiStringLiteral('Here was label indexOfFirst$break'));
          {
            phiVars(array(array('tmp$_1', )));
            phiVars(array(array('tmp$_2', )));
            phiVars(array(array('tmp$_3', )));
            phiVars(array(array('tmp$_4', )));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_355ntz$'), array(new PhiNameRef('chars')))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$_1'), 'first')));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_3'), new PhiDot(new PhiNameRef('tmp$_1'), 'last')));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_4'), new PhiDot(new PhiNameRef('tmp$_1'), 'step')));
            phiVars(array(array('index_1', new PhiNameRef('tmp$_2'))));
            for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index_1'), new PhiNameRef('tmp$_3')); new PhiBinaryOperation('+=', new PhiNameRef('index_1'), new PhiNameRef('tmp$_4'))) {
              if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('equals_0'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('chars'), new PhiNameRef('index_1')))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('charAtIndex'))), new PhiNameRef('ignoreCase'))))) {
                phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiNameRef('index_1')));
                phiExpressionStatement(new PhiNameRef('goto indexOfFirst_usd_break'));
              }
            }
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiPrefixOperation('-', 1.0)));
          }
          phiExpressionStatement(new PhiNameRef('indexOfFirst_usd_break:'));
        }
        phiVars(array(array('matchingCharIndex', new PhiNameRef('indexOfFirst$result'))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('matchingCharIndex'), 0.0))) {
          return new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('index_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('chars'), new PhiNameRef('matchingCharIndex'))))));
        }
      }
      return null;
    }))));
    phiVars(array(array('indexOfAny', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('findAnyOf'), array(new PhiNameRef('$receiver'), new PhiNameRef('chars'), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase'), false))), null), new PhiDot(new PhiNameRef('tmp$'), 'first'), null)), null), new PhiNameRef('tmp$_0'), new PhiPrefixOperation('-', 1.0));
    }))));
    phiVars(array(array('lastIndexOfAny', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('findAnyOf'), array(new PhiNameRef('$receiver'), new PhiNameRef('chars'), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase'), true))), null), new PhiDot(new PhiNameRef('tmp$'), 'first'), null)), null), new PhiNameRef('tmp$_0'), new PhiPrefixOperation('-', 1.0));
    }))));
    phiVars(array(array('indexOf_13', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('last_25'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), false));
      }
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('indices', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('last_25')), new PhiNew(new PhiNameRef('IntRange'), array(new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiNameRef('startIndex'), 0.0)), new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('endIndex'), new PhiDot(new PhiNameRef('$receiver'), 'length'))))), new PhiInvocation(new PhiNameRef('downTo'), array(new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiNameRef('endIndex'), 0.0))))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')), new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('other')), new PhiStringLiteral('string'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('regionMatches'), array(new PhiNameRef('other'), 0.0, new PhiNameRef('$receiver'), new PhiNameRef('index'), new PhiDot(new PhiNameRef('other'), 'length'), new PhiNameRef('ignoreCase'))))) {
            return new PhiNameRef('index');
          }
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
          phiVars(array(array('index_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('regionMatchesImpl'), array(new PhiNameRef('other'), 0.0, new PhiNameRef('$receiver'), new PhiNameRef('index_0'), new PhiDot(new PhiNameRef('other'), 'length'), new PhiNameRef('ignoreCase'))))) {
            return new PhiNameRef('index_0');
          }
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))));
    phiVars(array(array('findAnyOf_0', new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiPrefixOperation('!', new PhiNameRef('ignoreCase')), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('strings'), 'size'), 1.0)))) {
        phiVars(array(array('string', new PhiInvocation(new PhiNameRef('single_17'), array(new PhiNameRef('strings'))))));
        phiVars(array(array('index', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('last_25')), new PhiInvocation(new PhiNameRef('indexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('string'), new PhiNameRef('startIndex'))), new PhiInvocation(new PhiNameRef('lastIndexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('string'), new PhiNameRef('startIndex')))))));
        return new PhiConditional(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0), null, new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('index'), new PhiNameRef('string'))));
      }
      phiVars(array(array('indices', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('last_25')), new PhiNew(new PhiNameRef('IntRange'), array(new PhiInvocation(new PhiNameRef('coerceAtLeast'), array(new PhiNameRef('startIndex'), 0.0)), new PhiDot(new PhiNameRef('$receiver'), 'length'))), new PhiInvocation(new PhiNameRef('downTo'), array(new PhiInvocation(new PhiNameRef('coerceAtMost_2'), array(new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver'))))), 0.0))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
          phiVars(array(array('index_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
          phiVars(array(array('firstOrNull$result', )));
          {
            phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull$break'));
            {
              phiVars(array(array('tmp$_1', )));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('strings'), 'iterator'), array())));
              while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'hasNext'), array())) {
                phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_1'), 'next'), array()))));
                if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('regionMatches'), array(new PhiNameRef('element'), 0.0, new PhiNameRef('$receiver'), new PhiNameRef('index_0'), new PhiDot(new PhiNameRef('element'), 'length'), new PhiNameRef('ignoreCase'))))) {
                  phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result'), new PhiNameRef('element')));
                  phiExpressionStatement(new PhiNameRef('goto firstOrNull_usd_break'));
                }
              }
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result'), null));
            }
            phiExpressionStatement(new PhiNameRef('firstOrNull_usd_break:'));
          }
          phiVars(array(array('matchingString', new PhiNameRef('firstOrNull$result'))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('matchingString'), null))) {
            return new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('index_0'), new PhiNameRef('matchingString')));
          }
        }
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('indices'), 'iterator'), array())));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
          phiVars(array(array('index_1', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
          phiVars(array(array('firstOrNull$result_0', )));
          {
            phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull$break_0'));
            {
              phiVars(array(array('tmp$_2', )));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiInvocation(new PhiDot(new PhiNameRef('strings'), 'iterator'), array())));
              while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_2'), 'hasNext'), array())) {
                phiVars(array(array('element_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_2'), 'next'), array()))));
                if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('regionMatchesImpl'), array(new PhiNameRef('element_0'), 0.0, new PhiNameRef('$receiver'), new PhiNameRef('index_1'), new PhiDot(new PhiNameRef('element_0'), 'length'), new PhiNameRef('ignoreCase'))))) {
                  phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result_0'), new PhiNameRef('element_0')));
                  phiExpressionStatement(new PhiNameRef('goto firstOrNull_usd_break_0'));
                }
              }
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result_0'), null));
            }
            phiExpressionStatement(new PhiNameRef('firstOrNull_usd_break_0:'));
          }
          phiVars(array(array('matchingString_0', new PhiNameRef('firstOrNull$result_0'))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('matchingString_0'), null))) {
            return new PhiInvocation(new PhiNameRef('to'), array(new PhiNameRef('index_1'), new PhiNameRef('matchingString_0')));
          }
        }
      }
      return null;
    }))));
    phiVars(array(array('findAnyOf_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiInvocation(new PhiNameRef('findAnyOf_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('strings'), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase'), false));
    }))));
    phiVars(array(array('findLastAnyOf', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiInvocation(new PhiNameRef('findAnyOf_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('strings'), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase'), true));
    }))));
    phiVars(array(array('indexOfAny_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('findAnyOf_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('strings'), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase'), false))), null), new PhiDot(new PhiNameRef('tmp$'), 'first'), null)), null), new PhiNameRef('tmp$_0'), new PhiPrefixOperation('-', 1.0));
    }))));
    phiVars(array(array('lastIndexOfAny_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('findAnyOf_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('strings'), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase'), true))), null), new PhiDot(new PhiNameRef('tmp$'), 'first'), null)), null), new PhiNameRef('tmp$_0'), new PhiPrefixOperation('-', 1.0));
    }))));
    phiVars(array(array('indexOf_11', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('indexOfAny'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))))), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase')))));
      }
       else {
        phiVars(array(array('ch', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))))));
        phiVars(array(array('fromIndex', new PhiNameRef('startIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'indexOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('ch'))))), new PhiNameRef('fromIndex')))));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('indexOf_12', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')))), new PhiInvocation(new PhiNameRef('indexOf_13'), array(new PhiNameRef('$receiver'), new PhiNameRef('string'), new PhiNameRef('startIndex'), new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('ignoreCase'))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'indexOf'), array(new PhiNameRef('string'), new PhiNameRef('startIndex'))));
    }))));
    phiVars(array(array('lastIndexOf_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('lastIndexOfAny'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))))), new PhiNameRef('startIndex'), new PhiNameRef('ignoreCase')))));
      }
       else {
        phiVars(array(array('ch', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))))));
        phiVars(array(array('fromIndex', new PhiNameRef('startIndex'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'lastIndexOf'), array(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('ch'))))), new PhiNameRef('fromIndex')))));
      }
      return new PhiNameRef('tmp$');
    }))));
    phiVars(array(array('lastIndexOf_12', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiNameRef('$receiver')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('$receiver')), new PhiStringLiteral('string')))), new PhiInvocation(new PhiNameRef('indexOf_13'), array(new PhiNameRef('$receiver'), new PhiNameRef('string'), new PhiNameRef('startIndex'), 0.0, new PhiNameRef('ignoreCase'), true)), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'lastIndexOf'), array(new PhiNameRef('string'), new PhiNameRef('startIndex'))));
    }))));
    phiVars(array(array('contains_41', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('other')), new PhiStringLiteral('string')), new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_12'), array(new PhiNameRef('$receiver'), new PhiNameRef('other'), new PhiPrefixOperation('void', 0.0), new PhiNameRef('ignoreCase'))), 0.0), new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_13'), array(new PhiNameRef('$receiver'), new PhiNameRef('other'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiNameRef('ignoreCase'))), 0.0));
    }))));
    phiVars(array(array('contains_42', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiNameRef('indexOf_11'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('char'))), new PhiPrefixOperation('void', 0.0), new PhiNameRef('ignoreCase'))), 0.0);
    }))));
    phiVars(array(array('DelimitedRangesSequence', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'input_0'), new PhiNameRef('input')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'startIndex_0'), new PhiNameRef('startIndex')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'limit_0'), new PhiNameRef('limit')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'getNextMatch_0'), new PhiNameRef('getNextMatch')));
    }))));
    phiVars(array(array('DelimitedRangesSequence$iterator$ObjectLiteral', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), new PhiNameRef('this$DelimitedRangesSequence')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'currentStartIndex'), new PhiInvocation(new PhiNameRef('coerceIn_2'), array(new PhiDot(new PhiNameRef('this$DelimitedRangesSequence'), 'startIndex_0'), 0.0, new PhiDot(new PhiDot(new PhiNameRef('this$DelimitedRangesSequence'), 'input_0'), 'length')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextSearchIndex'), new PhiDot(new PhiNameRef('this'), 'currentStartIndex')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'counter'), 0.0));
    }))));
    phiVars(array(array('rangesDelimitedBy$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('findAnyOf'), array(new PhiNameRef('$receiver'), new PhiNameRef('closure$delimiters'), new PhiNameRef('startIndex'), new PhiNameRef('closure$ignoreCase'), false))), null), new PhiInvocation(new PhiNameRef('to'), array(new PhiDot(new PhiNameRef('tmp$'), 'first'), 1.0)), null);
      });
    }))));
    phiVars(array(array('rangesDelimitedBy', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Limit must be non-negative, but was '), new PhiNameRef('limit')), new PhiStringLiteral('.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiNew(new PhiNameRef('DelimitedRangesSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiNameRef('limit'), new PhiInvocation(new PhiNameRef('rangesDelimitedBy$lambda'), array(new PhiNameRef('delimiters'), new PhiNameRef('ignoreCase')))));
    }))));
    phiVars(array(array('rangesDelimitedBy$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('findAnyOf_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('closure$delimitersList'), new PhiNameRef('startIndex'), new PhiNameRef('closure$ignoreCase'), false))), null), new PhiInvocation(new PhiNameRef('to'), array(new PhiDot(new PhiNameRef('tmp$'), 'first'), new PhiDot(new PhiDot(new PhiNameRef('tmp$'), 'second'), 'length'))), null);
      });
    }))));
    phiVars(array(array('rangesDelimitedBy_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Limit must be non-negative, but was '), new PhiNameRef('limit')), new PhiStringLiteral('.')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiVars(array(array('delimitersList', new PhiInvocation(new PhiNameRef('asList'), array(new PhiNameRef('delimiters'))))));
      return new PhiNew(new PhiNameRef('DelimitedRangesSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiNameRef('limit'), new PhiInvocation(new PhiNameRef('rangesDelimitedBy$lambda_0'), array(new PhiNameRef('delimitersList'), new PhiNameRef('ignoreCase')))));
    }))));
    phiVars(array(array('splitToSequence$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('substring_3'), array(new PhiNameRef('this$splitToSequence'), new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('splitToSequence', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      return new PhiInvocation(new PhiNameRef('map_10'), array(new PhiInvocation(new PhiNameRef('rangesDelimitedBy_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiters'), new PhiPrefixOperation('void', 0.0), new PhiNameRef('ignoreCase'), new PhiNameRef('limit'))), new PhiInvocation(new PhiNameRef('splitToSequence$lambda'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('split_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('asIterable_10'), array(new PhiInvocation(new PhiNameRef('rangesDelimitedBy_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiters'), new PhiPrefixOperation('void', 0.0), new PhiNameRef('ignoreCase'), new PhiNameRef('limit'))))))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver_0'), 10.0)))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('substring_3'), array(new PhiNameRef('$receiver'), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('splitToSequence$lambda_0', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        return new PhiInvocation(new PhiNameRef('substring_3'), array(new PhiNameRef('this$splitToSequence'), new PhiNameRef('it')));
      });
    }))));
    phiVars(array(array('splitToSequence_0', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      return new PhiInvocation(new PhiNameRef('map_10'), array(new PhiInvocation(new PhiNameRef('rangesDelimitedBy'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiters'), new PhiPrefixOperation('void', 0.0), new PhiNameRef('ignoreCase'), new PhiNameRef('limit'))), new PhiInvocation(new PhiNameRef('splitToSequence$lambda_0'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('split_1', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreCase'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreCase'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      phiVars(array(array('$receiver_0', new PhiInvocation(new PhiNameRef('asIterable_10'), array(new PhiInvocation(new PhiNameRef('rangesDelimitedBy'), array(new PhiNameRef('$receiver'), new PhiNameRef('delimiters'), new PhiPrefixOperation('void', 0.0), new PhiNameRef('ignoreCase'), new PhiNameRef('limit'))))))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver_0'), 10.0)))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('substring_3'), array(new PhiNameRef('$receiver'), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))));
    phiVars(array(array('lineSequence', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('splitToSequence'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiStringLiteral('\r\n'), new PhiStringLiteral('\n'), new PhiStringLiteral('\r')))));
    }))));
    phiVars(array(array('lines', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('toList_10'), array(new PhiInvocation(new PhiNameRef('lineSequence'), array(new PhiNameRef('$receiver')))));
    }))));
    phiVars(array(array('Typography', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('Typography_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'quote'), 34.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'dollar'), 36.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'amp'), 38.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'less'), 60.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'greater'), 62.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nbsp'), 160.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'times'), 215.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'cent'), 162.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'pound'), 163.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'section'), 167.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'copyright'), 169.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'leftGuillemete'), 171.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'rightGuillemete'), 187.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'registered'), 174.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'degree'), 176.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'plusMinus'), 177.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'paragraph'), 182.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'middleDot'), 183.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'half'), 189.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ndash'), 8211.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'mdash'), 8212.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'leftSingleQuote'), 8216.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'rightSingleQuote'), 8217.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lowSingleQuote'), 8218.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'leftDoubleQuote'), 8220.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'rightDoubleQuote'), 8221.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lowDoubleQuote'), 8222.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'dagger'), 8224.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'doubleDagger'), 8225.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'bullet'), 8226.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ellipsis'), 8230.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'prime'), 8242.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'doublePrime'), 8243.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'euro'), 8364.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'tm'), 8482.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'almostEqual'), 8776.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'notEqual'), 8800.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lessOrEqual'), 8804.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'greaterOrEqual'), 8805.0));
    }))));
    phiVars(array(array('Typography_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('Typography_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('Typography'), array()));
      }
      return new PhiNameRef('Typography_instance');
    }))));
    phiVars(array(array('MatchGroupCollection', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MatchNamedGroupCollection', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MatchResult', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('MatchResult$Destructured', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'match'), new PhiNameRef('match_0')));
    }))));
    phiVars(array(array('KotlinVersion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('KotlinVersion$Companion_getInstance'), array()));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'major'), new PhiNameRef('major')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'minor'), new PhiNameRef('minor')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'patch'), new PhiNameRef('patch')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'version_0'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'versionOf_0'), array(new PhiDot(new PhiNameRef('this'), 'major'), new PhiDot(new PhiNameRef('this'), 'minor'), new PhiDot(new PhiNameRef('this'), 'patch')))));
    }))));
    phiVars(array(array('KotlinVersion$Companion', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('KotlinVersion$Companion_instance'), new PhiNameRef('this')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'MAX_COMPONENT_VALUE'), 255.0));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'CURRENT'), new PhiNew(new PhiNameRef('KotlinVersion'), array(1.0, 1.0, 1.0))));
    }))));
    phiVars(array(array('KotlinVersion$Companion_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('KotlinVersion$Companion_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('KotlinVersion$Companion'), array()));
      }
      return new PhiNameRef('KotlinVersion$Companion_instance');
    }))));
    phiVars(array(array('KotlinVersion_init', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('$this'), new PhiBinaryOperation('||', new PhiNameRef('$this'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'))))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('KotlinVersion'), 'call'), array(new PhiNameRef('$this'), new PhiNameRef('major'), new PhiNameRef('minor'), 0.0)));
      return new PhiNameRef('$this');
    }))));
    phiVars(array(array('Lazy', new PhiFunctionExpression(null, array(), function () {
    }))));
    phiVars(array(array('lazyOf', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('InitializedLazyImpl'), array(new PhiNameRef('value')));
    }))));
    phiVars(array(array('LazyThreadSafetyMode', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Enum'), 'call'), array(new PhiNameRef('this'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name$'), new PhiNameRef('name')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'ordinal$'), new PhiNameRef('ordinal')));
    }))));
    phiVars(array(array('LazyThreadSafetyMode_initFields', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('LazyThreadSafetyMode_initFields'), new PhiFunctionExpression(null, array(), function () {
      })));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('LazyThreadSafetyMode$SYNCHRONIZED_instance'), new PhiNew(new PhiNameRef('LazyThreadSafetyMode'), array(new PhiStringLiteral('SYNCHRONIZED'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('LazyThreadSafetyMode$PUBLICATION_instance'), new PhiNew(new PhiNameRef('LazyThreadSafetyMode'), array(new PhiStringLiteral('PUBLICATION'), 1.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('LazyThreadSafetyMode$NONE_instance'), new PhiNew(new PhiNameRef('LazyThreadSafetyMode'), array(new PhiStringLiteral('NONE'), 2.0))));
    }))));
    phiVars(array(array('LazyThreadSafetyMode$SYNCHRONIZED_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode_initFields'), array()));
      return new PhiNameRef('LazyThreadSafetyMode$SYNCHRONIZED_instance');
    }))));
    phiVars(array(array('LazyThreadSafetyMode$PUBLICATION_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode_initFields'), array()));
      return new PhiNameRef('LazyThreadSafetyMode$PUBLICATION_instance');
    }))));
    phiVars(array(array('LazyThreadSafetyMode$NONE_getInstance', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode_initFields'), array()));
      return new PhiNameRef('LazyThreadSafetyMode$NONE_instance');
    }))));
    phiVars(array(array('LazyThreadSafetyMode$values', new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array(new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode$SYNCHRONIZED_getInstance'), array()), new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode$PUBLICATION_getInstance'), array()), new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode$NONE_getInstance'), array())));
    }))));
    phiVars(array(array('LazyThreadSafetyMode$valueOf', new PhiFunctionExpression(null, array(), function () {
      switch (new PhiNameRef('name')) {
        case new PhiStringLiteral('SYNCHRONIZED'):
          return new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode$SYNCHRONIZED_getInstance'), array());
        case new PhiStringLiteral('PUBLICATION'):
          return new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode$PUBLICATION_getInstance'), array());
        case new PhiStringLiteral('NONE'):
          return new PhiInvocation(new PhiNameRef('LazyThreadSafetyMode$NONE_getInstance'), array());
        default:phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwISE'), array(new PhiBinaryOperation('+', new PhiStringLiteral('No enum constant kotlin.LazyThreadSafetyMode.'), new PhiNameRef('name')))));
      }
    }))));
    phiVars(array(array('UNINITIALIZED_VALUE', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('UNINITIALIZED_VALUE_instance'), new PhiNameRef('this')));
    }))));
    phiVars(array(array('UNINITIALIZED_VALUE_getInstance', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('UNINITIALIZED_VALUE_instance'), null))) {
        phiExpressionStatement(new PhiNew(new PhiNameRef('UNINITIALIZED_VALUE'), array()));
      }
      return new PhiNameRef('UNINITIALIZED_VALUE_instance');
    }))));
    phiVars(array(array('SynchronizedLazyImpl', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lock'), null));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'initializer_0'), new PhiNameRef('initializer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiInvocation(new PhiNameRef('UNINITIALIZED_VALUE_getInstance'), array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lock_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('lock'), null), new PhiNameRef('lock'), new PhiNameRef('this'))));
    }))));
    phiVars(array(array('SynchronizedLazyImpl$get_SynchronizedLazyImpl$value$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiFunctionExpression(null, array(), function () {
        phiVars(array(array('tmp$', )));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('_v2', new PhiDot(new PhiNameRef('this$SynchronizedLazyImpl'), '_value_0'))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('_v2'), new PhiInvocation(new PhiNameRef('UNINITIALIZED_VALUE_getInstance'), array())))) {
          return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('_v2')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
        }
         else {
          phiVars(array(array('typedValue', new PhiInvocation(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('this$SynchronizedLazyImpl'), 'initializer_0')), null), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), array()))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this$SynchronizedLazyImpl'), '_value_0'), new PhiNameRef('typedValue')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this$SynchronizedLazyImpl'), 'initializer_0'), null));
          return new PhiNameRef('typedValue');
        }
      });
    }))));
    phiVars(array(array('UnsafeLazyImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'initializer_0'), new PhiNameRef('initializer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiInvocation(new PhiNameRef('UNINITIALIZED_VALUE_getInstance'), array())));
    }))));
    phiVars(array(array('InitializedLazyImpl', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value_jtqip$_0'), new PhiNameRef('value')));
    }))));
    phiVars(array(array('require$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('Failed requirement.');
    }))));
    phiVars(array(array('requireNotNull$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('Required value was null.');
    }))));
    phiVars(array(array('check$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('Check failed.');
    }))));
    phiVars(array(array('checkNotNull$lambda', new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('Required value was null.');
    }))));
    phiVars(array(array('NotImplementedError', new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), new PhiStringLiteral('An operation is not implemented.')));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Error_0'), 'call'), array(new PhiNameRef('this'), new PhiNameRef('message'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'name'), new PhiStringLiteral('NotImplementedError')));
    }))));
    phiVars(array(array('Pair', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'first'), new PhiNameRef('first_24')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'second'), new PhiNameRef('second')));
    }))));
    phiVars(array(array('to', new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('Pair'), array(new PhiNameRef('$receiver'), new PhiNameRef('that')));
    }))));
    phiVars(array(array('toList_12', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('listOf_1'), array(new PhiArrayLiteral(array(new PhiDot(new PhiNameRef('$receiver'), 'first'), new PhiDot(new PhiNameRef('$receiver'), 'second')))));
    }))));
    phiVars(array(array('Triple', new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'first'), new PhiNameRef('first_24')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'second'), new PhiNameRef('second')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'third'), new PhiNameRef('third')));
    }))));
    phiVars(array(array('toList_13', new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('listOf_1'), array(new PhiArrayLiteral(array(new PhiDot(new PhiNameRef('$receiver'), 'first'), new PhiDot(new PhiNameRef('$receiver'), 'second'), new PhiDot(new PhiNameRef('$receiver'), 'third')))));
    }))));
    phiVars(array(array('Any', new PhiNameRef('Object'))));
    phiVars(array(array('Enum', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'Enum'))));
    phiVars(array(array('Annotation_0', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'Annotation'))));
    phiVars(array(array('Comparable', new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'Comparable'))));
    phiVars(array(array('CharCompanionObject', new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'js'), 'internal'), 'CharCompanionObject'))));
    phiVars(array(array('Throwable', new PhiNameRef('Error'))));
    phiVars(array(array('DoubleCompanionObject', new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'js'), 'internal'), 'DoubleCompanionObject'))));
    phiVars(array(array('ByteCompanionObject', new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'js'), 'internal'), 'ByteCompanionObject'))));
    phiVars(array(array('IntCompanionObject', new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'js'), 'internal'), 'IntCompanionObject'))));
    phiVars(array(array('ShortCompanionObject', new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'js'), 'internal'), 'ShortCompanionObject'))));
    phiVars(array(array('FloatCompanionObject', new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'kotlin'), 'js'), 'internal'), 'FloatCompanionObject'))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharProgressionIterator'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('CharIterator'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgressionIterator'), 'prototype'), 'constructor'), new PhiNameRef('CharProgressionIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntProgressionIterator'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('IntIterator'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgressionIterator'), 'prototype'), 'constructor'), new PhiNameRef('IntProgressionIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongProgressionIterator'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LongIterator'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgressionIterator'), 'prototype'), 'constructor'), new PhiNameRef('LongProgressionIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharRange'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('CharProgression'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), 'constructor'), new PhiNameRef('CharRange')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntRange'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('IntProgression'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), 'constructor'), new PhiNameRef('IntRange')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongRange'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('LongProgression'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), 'constructor'), new PhiNameRef('LongRange')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationTarget'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AnnotationTarget'), 'prototype'), 'constructor'), new PhiNameRef('AnnotationTarget')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationRetention'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AnnotationRetention'), 'prototype'), 'constructor'), new PhiNameRef('AnnotationRetention')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableCollection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableList$IteratorImpl'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableList$ListIteratorImpl')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableList$SubList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMutableMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'constructor'), new PhiNameRef('ArrayList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), 'constructor'), new PhiNameRef('HashMap$EntrySet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('HashMap'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'constructor'), new PhiNameRef('HashMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('HashSet'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), 'constructor'), new PhiNameRef('HashSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashMap$ChainEntry'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$ChainEntry'), 'prototype'), 'constructor'), new PhiNameRef('LinkedHashMap$ChainEntry')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), 'constructor'), new PhiNameRef('LinkedHashMap$EntrySet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashMap'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'constructor'), new PhiNameRef('LinkedHashMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashSet'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('HashSet'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashSet'), 'prototype'), 'constructor'), new PhiNameRef('LinkedHashSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NodeJsOutput'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('BaseOutput'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NodeJsOutput'), 'prototype'), 'constructor'), new PhiNameRef('NodeJsOutput')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('OutputToConsoleLog'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('BaseOutput'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('OutputToConsoleLog'), 'prototype'), 'constructor'), new PhiNameRef('OutputToConsoleLog')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('BufferedOutput'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('BaseOutput'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BufferedOutput'), 'prototype'), 'constructor'), new PhiNameRef('BufferedOutput')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('BufferedOutputToConsoleLog'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('BufferedOutput'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BufferedOutputToConsoleLog'), 'prototype'), 'constructor'), new PhiNameRef('BufferedOutputToConsoleLog')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Error_0'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Throwable'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Error_0'), 'prototype'), 'constructor'), new PhiNameRef('Error_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Exception'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Throwable'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Exception'), 'prototype'), 'constructor'), new PhiNameRef('Exception')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RuntimeException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Exception'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype'), 'constructor'), new PhiNameRef('RuntimeException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IllegalArgumentException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IllegalArgumentException'), 'prototype'), 'constructor'), new PhiNameRef('IllegalArgumentException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IllegalStateException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IllegalStateException'), 'prototype'), 'constructor'), new PhiNameRef('IllegalStateException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IndexOutOfBoundsException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexOutOfBoundsException'), 'prototype'), 'constructor'), new PhiNameRef('IndexOutOfBoundsException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ConcurrentModificationException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ConcurrentModificationException'), 'prototype'), 'constructor'), new PhiNameRef('ConcurrentModificationException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('UnsupportedOperationException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('UnsupportedOperationException'), 'prototype'), 'constructor'), new PhiNameRef('UnsupportedOperationException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NumberFormatException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NumberFormatException'), 'prototype'), 'constructor'), new PhiNameRef('NumberFormatException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NullPointerException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NullPointerException'), 'prototype'), 'constructor'), new PhiNameRef('NullPointerException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ClassCastException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClassCastException'), 'prototype'), 'constructor'), new PhiNameRef('ClassCastException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AssertionError'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Error_0'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AssertionError'), 'prototype'), 'constructor'), new PhiNameRef('AssertionError')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NoSuchElementException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Exception'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NoSuchElementException'), 'prototype'), 'constructor'), new PhiNameRef('NoSuchElementException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NoWhenBranchMatchedException'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('RuntimeException'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NoWhenBranchMatchedException'), 'prototype'), 'constructor'), new PhiNameRef('NoWhenBranchMatchedException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'constructor'), new PhiNameRef('AbstractList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('asList$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RegexOption'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('RegexOption'), 'prototype'), 'constructor'), new PhiNameRef('RegexOption')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('asList$ObjectLiteral_0'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral_0'), 'prototype'), 'constructor'), new PhiNameRef('asList$ObjectLiteral_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KParameter$Kind'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KParameter$Kind'), 'prototype'), 'constructor'), new PhiNameRef('KParameter$Kind')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVariance'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KVariance'), 'prototype'), 'constructor'), new PhiNameRef('KVariance')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVisibility'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KVisibility'), 'prototype'), 'constructor'), new PhiNameRef('KVisibility')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('State'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('State'), 'prototype'), 'constructor'), new PhiNameRef('State')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList$SubList'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$SubList'), 'prototype'), 'constructor'), new PhiNameRef('AbstractList$SubList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList$ListIteratorImpl'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractList$IteratorImpl'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$ListIteratorImpl'), 'prototype'), 'constructor'), new PhiNameRef('AbstractList$ListIteratorImpl')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractSet'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractSet'), 'prototype'), 'constructor'), new PhiNameRef('AbstractSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractSet'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReversedListReadOnly'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedListReadOnly'), 'prototype'), 'constructor'), new PhiNameRef('ReversedListReadOnly')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), 'constructor'), new PhiNameRef('ReversedList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DistinctIterator'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('AbstractIterator'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DistinctIterator'), 'prototype'), 'constructor'), new PhiNameRef('DistinctIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('SequenceBuilder'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'constructor'), new PhiNameRef('SequenceBuilderIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Delegates$observable$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('ObservableProperty'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates$observable$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('Delegates$observable$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Delegates$vetoable$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('ObservableProperty'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates$vetoable$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('Delegates$vetoable$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('iterator$ObjectLiteral'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('CharIterator'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('iterator$ObjectLiteral'), 'prototype'), 'constructor'), new PhiNameRef('iterator$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LazyThreadSafetyMode'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Enum'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LazyThreadSafetyMode'), 'prototype'), 'constructor'), new PhiNameRef('LazyThreadSafetyMode')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NotImplementedError'), 'prototype'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(new PhiDot(new PhiNameRef('Error_0'), 'prototype')))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NotImplementedError'), 'prototype'), 'constructor'), new PhiNameRef('NotImplementedError')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Annotation'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Annotation')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CharSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Iterable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Iterable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableIterable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableIterable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Collection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Collection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableCollection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableCollection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterable'), new PhiNameRef('Collection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('List'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('List')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Collection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableCollection'), new PhiNameRef('List'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Set'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Set')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Collection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableSet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableSet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableCollection'), new PhiNameRef('Set'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Map'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), null), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Map$Entry'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Entry')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Map'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Map')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMap'), 'prototype'), 'remove_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableMap$MutableEntry'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableEntry')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Map$Entry'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Map'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Iterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Iterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ListIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ListIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableListIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableListIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'), new PhiNameRef('ListIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Function'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Function')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ByteIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextByte'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ByteIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ByteIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextChar'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CharIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ShortIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextShort'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ShortIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ShortIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextInt'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IntIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextLong'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LongIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FloatIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextFloat'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('FloatIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('FloatIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DoubleIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextDouble'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DoubleIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DoubleIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BooleanIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextBoolean'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('BooleanIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('BooleanIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgressionIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'hasNext_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgressionIterator'), 'prototype'), 'nextChar'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('value', new PhiDot(new PhiNameRef('this'), 'next_0'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'finalElement_0')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'hasNext_0'), false));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiDot(new PhiNameRef('this'), 'step')), 0.0)));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toChar'), array(new PhiNameRef('value')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharProgressionIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CharProgressionIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CharIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgressionIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'hasNext_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgressionIterator'), 'prototype'), 'nextInt'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('value', new PhiDot(new PhiNameRef('this'), 'next_0'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'finalElement_0')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'hasNext_0'), false));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiDot(new PhiNameRef('this'), 'step')), 0.0)));
      }
      return new PhiNameRef('value');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntProgressionIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IntProgressionIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('IntIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgressionIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'hasNext_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgressionIterator'), 'prototype'), 'nextLong'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('value', new PhiDot(new PhiNameRef('this'), 'next_0'))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'finalElement_0'))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'hasNext_0'), false));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'next_0'), 'add'), array(new PhiDot(new PhiNameRef('this'), 'step')))));
      }
      return new PhiNameRef('value');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongProgressionIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LongProgressionIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('LongIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgression'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('CharProgressionIterator'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last'))), new PhiDot(new PhiNameRef('this'), 'step')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgression'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'step'), 0.0), new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last')))), new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgression'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('CharProgression'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('other'), 'first')))), new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('other'), 'last'))))), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'step'), new PhiDot(new PhiNameRef('other'), 'step')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgression'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), 0.0)), 0.0), new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last'))), 0.0)), 0.0)), 0.0), new PhiDot(new PhiNameRef('this'), 'step')), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgression'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'step'), 0.0), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))))), new PhiStringLiteral('..')), new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last')))))), new PhiStringLiteral(' step ')), new PhiDot(new PhiNameRef('this'), 'step')), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))))), new PhiStringLiteral(' downTo ')), new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last')))))), new PhiStringLiteral(' step ')), new PhiPrefixOperation('-', new PhiDot(new PhiNameRef('this'), 'step'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharProgression$Companion'), 'prototype'), 'fromClosedRange_ayra44$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('CharProgression'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('rangeStart'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('rangeEnd'))), new PhiNameRef('step_2')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharProgression$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('CharProgression$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharProgression'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CharProgression')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgression'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntProgressionIterator'), array(new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('this'), 'last'), new PhiDot(new PhiNameRef('this'), 'step')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgression'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'step'), 0.0), new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('this'), 'last')), new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('this'), 'last')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgression'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('IntProgression'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('other'), 'first')), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'last'), new PhiDot(new PhiNameRef('other'), 'last'))), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'step'), new PhiDot(new PhiNameRef('other'), 'step')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgression'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiDot(new PhiNameRef('this'), 'first')), 0.0), new PhiDot(new PhiNameRef('this'), 'last')), 0.0)), 0.0), new PhiDot(new PhiNameRef('this'), 'step')), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgression'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'step'), 0.0), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'toString'), array()), new PhiStringLiteral('..')), new PhiDot(new PhiNameRef('this'), 'last')), new PhiStringLiteral(' step ')), new PhiDot(new PhiNameRef('this'), 'step')), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'toString'), array()), new PhiStringLiteral(' downTo ')), new PhiDot(new PhiNameRef('this'), 'last')), new PhiStringLiteral(' step ')), new PhiPrefixOperation('-', new PhiDot(new PhiNameRef('this'), 'step'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntProgression$Companion'), 'prototype'), 'fromClosedRange_qt1dr2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IntProgression'), array(new PhiNameRef('rangeStart'), new PhiNameRef('rangeEnd'), new PhiNameRef('step_2')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntProgression$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('IntProgression$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntProgression'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IntProgression')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgression'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('LongProgressionIterator'), array(new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('this'), 'last'), new PhiDot(new PhiNameRef('this'), 'step')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgression'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'step'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0), new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'compareTo_11rb$'), array(new PhiDot(new PhiNameRef('this'), 'last'))), 0.0), new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'compareTo_11rb$'), array(new PhiDot(new PhiNameRef('this'), 'last'))), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgression'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('LongProgression'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('other'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'last'), new PhiDot(new PhiNameRef('other'), 'last')))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'step'), new PhiDot(new PhiNameRef('other'), 'step'))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgression'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(31.0)), 'multiply'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(31.0)), 'multiply'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'xor'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'shiftRightUnsigned'), array(32.0)))))), 'add'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'last'), 'xor'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'last'), 'shiftRightUnsigned'), array(32.0)))))))), 'add'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'step'), 'xor'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'step'), 'shiftRightUnsigned'), array(32.0)))))), 'toInt'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgression'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'step'), 'compareTo_11rb$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(0.0)))), 0.0), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'toString'), array()), new PhiStringLiteral('..')), new PhiDot(new PhiNameRef('this'), 'last')), new PhiStringLiteral(' step ')), new PhiDot(new PhiNameRef('this'), 'step')), new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'toString'), array()), new PhiStringLiteral(' downTo ')), new PhiDot(new PhiNameRef('this'), 'last')), new PhiStringLiteral(' step ')), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'step'), 'unaryMinus'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongProgression$Companion'), 'prototype'), 'fromClosedRange_b9bd0d$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('LongProgression'), array(new PhiNameRef('rangeStart'), new PhiNameRef('rangeEnd'), new PhiNameRef('step_2')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongProgression$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('LongProgression$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongProgression'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LongProgression')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedRange'), 'prototype'), 'contains_mef7kx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'start'))), 0.0), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'endInclusive'))), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedRange'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiDot(new PhiNameRef('this'), 'start'), new PhiDot(new PhiNameRef('this'), 'endInclusive'))), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ClosedRange'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ClosedRange')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), new PhiStringLiteral('start'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiDot(new PhiNameRef('this'), 'first')));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), new PhiStringLiteral('endInclusive'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiDot(new PhiNameRef('this'), 'last')));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), 'contains_mef7kx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('value')))), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('value'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('CharRange'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('other'), 'first')))), new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('other'), 'last')))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))), 0.0)), 0.0), new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last'))), 0.0)), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CharRange'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'first'))))), new PhiStringLiteral('..')), new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'last'))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharRange$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('CharRange$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CharRange'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CharRange')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ClosedRange'), new PhiNameRef('CharProgression'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), new PhiStringLiteral('start'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'first');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), new PhiStringLiteral('endInclusive'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'last');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), 'contains_mef7kx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('<=', new PhiDot(new PhiNameRef('this'), 'first'), new PhiNameRef('value')), new PhiBinaryOperation('<=', new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'last')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('this'), 'last'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('IntRange'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('other'), 'first')), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'last'), new PhiDot(new PhiNameRef('other'), 'last')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiDot(new PhiNameRef('this'), 'first')), 0.0), new PhiDot(new PhiNameRef('this'), 'last')), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IntRange'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'toString'), array()), new PhiStringLiteral('..')), new PhiDot(new PhiNameRef('this'), 'last'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntRange$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('IntRange$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IntRange'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IntRange')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ClosedRange'), new PhiNameRef('IntProgression'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), new PhiStringLiteral('start'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'first');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), new PhiStringLiteral('endInclusive'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'last');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), 'contains_mef7kx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'compareTo_11rb$'), array(new PhiNameRef('value'))), 0.0), new PhiBinaryOperation('<=', new PhiInvocation(new PhiDot(new PhiNameRef('value'), 'compareTo_11rb$'), array(new PhiDot(new PhiNameRef('this'), 'last'))), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'compareTo_11rb$'), array(new PhiDot(new PhiNameRef('this'), 'last'))), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('LongRange'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('other'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'last'), new PhiDot(new PhiNameRef('other'), 'last'))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Long'), 'fromInt'), array(31.0)), 'multiply'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'xor'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'shiftRightUnsigned'), array(32.0)))))), 'add'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'last'), 'xor'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'last'), 'shiftRightUnsigned'), array(32.0)))))), 'toInt'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LongRange'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'first'), 'toString'), array()), new PhiStringLiteral('..')), new PhiDot(new PhiNameRef('this'), 'last'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongRange$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('LongRange$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LongRange'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LongRange')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ClosedRange'), new PhiNameRef('LongProgression'))))))));
    phiVars(array(array('AnnotationTarget$CLASS_instance', )));
    phiVars(array(array('AnnotationTarget$ANNOTATION_CLASS_instance', )));
    phiVars(array(array('AnnotationTarget$TYPE_PARAMETER_instance', )));
    phiVars(array(array('AnnotationTarget$PROPERTY_instance', )));
    phiVars(array(array('AnnotationTarget$FIELD_instance', )));
    phiVars(array(array('AnnotationTarget$LOCAL_VARIABLE_instance', )));
    phiVars(array(array('AnnotationTarget$VALUE_PARAMETER_instance', )));
    phiVars(array(array('AnnotationTarget$CONSTRUCTOR_instance', )));
    phiVars(array(array('AnnotationTarget$FUNCTION_instance', )));
    phiVars(array(array('AnnotationTarget$PROPERTY_GETTER_instance', )));
    phiVars(array(array('AnnotationTarget$PROPERTY_SETTER_instance', )));
    phiVars(array(array('AnnotationTarget$TYPE_instance', )));
    phiVars(array(array('AnnotationTarget$EXPRESSION_instance', )));
    phiVars(array(array('AnnotationTarget$FILE_instance', )));
    phiVars(array(array('AnnotationTarget$TYPEALIAS_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationTarget'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AnnotationTarget')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationTarget'), 'values'), new PhiNameRef('AnnotationTarget$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationTarget'), 'valueOf_61zpoe$'), new PhiNameRef('AnnotationTarget$valueOf')));
    phiVars(array(array('AnnotationRetention$SOURCE_instance', )));
    phiVars(array(array('AnnotationRetention$BINARY_instance', )));
    phiVars(array(array('AnnotationRetention$RUNTIME_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationRetention'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AnnotationRetention')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationRetention'), 'values'), new PhiNameRef('AnnotationRetention$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AnnotationRetention'), 'valueOf_61zpoe$'), new PhiNameRef('AnnotationRetention$valueOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Target'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Target')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Retention'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Retention')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Repeatable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Repeatable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MustBeDocumented'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MustBeDocumented')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('PureReifiable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('PureReifiable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('PlatformDependent'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('PlatformDependent')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Comparator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Comparator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Comparator$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$comparison'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Comparator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('Comparator_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.Comparator_x4fedy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Comparator$f'), array(new PhiNameRef('comparison')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('native'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('native')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('nativeGetter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('nativeGetter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('nativeSetter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('nativeSetter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('nativeInvoke'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('nativeInvoke')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('library'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('library')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('marker'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('marker')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JsName'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JsName')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JsModule'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JsModule')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JsNonModule'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JsNonModule')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JsQualifier'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JsQualifier')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JvmOverloads'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JvmOverloads')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JvmName'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JvmName')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JvmMultifileClass'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JvmMultifileClass')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('JvmField'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('JvmField')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('arrayIterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('length', new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$array'), 'length'))));
      return new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'index'), new PhiNameRef('length'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('arrayIterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'closure$array'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'index')), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('arrayIterator$ObjectLiteral'), 'prototype'), 'remove'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$array'), 'splice'), array(new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'index'), 1.0), 0.0)), new PhiDot(new PhiNameRef('this'), 'index')), 1.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('arrayIterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('PropertyMetadata'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('PropertyMetadata')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BoxedChar'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('BoxedChar'))), new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'c'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('other'), 'c')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BoxedChar'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'c'))), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BoxedChar'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiDot(new PhiNameRef('this'), 'c')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BoxedChar'), 'prototype'), 'compareTo_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('-', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiDot(new PhiNameRef('this'), 'c'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('other'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BoxedChar'), 'prototype'), 'valueOf'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'c');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('BoxedChar'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('BoxedChar')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparable'))))))));
    phiVars(array(array('toLowerCase', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toLowerCase_myv2d0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver'))))), 'toLowerCase'), array()), 'charCodeAt'), array(0.0));
    }))))));
    phiVars(array(array('toUpperCase', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toUpperCase_myv2d0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver'))))), 'toUpperCase'), array()), 'charCodeAt'), array(0.0));
    }))))));
    phiVars(array(array('orEmpty', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.orEmpty_oachgz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('$receiver'), null), new PhiNameRef('$receiver'), new PhiArrayLiteral(array()));
    }))))));
    phiVars(array(array('toTypedArray', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.toTypedArray_4c7yge$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'copyToArray'), array(new PhiNameRef('$receiver')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'iterator'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'remove'), array()));
          return true;
        }
      }
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), 'addAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('modified', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'add_11rb$'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modified'), true));
        }
      }
      return new PhiNameRef('modified');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), 'removeAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiNameRef('removeAll'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('this')), new PhiNameRef('MutableIterable'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiInvocation(new PhiNameRef('AbstractMutableCollection$removeAll$lambda'), array(new PhiNameRef('elements')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), 'retainAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiNameRef('removeAll'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('this')), new PhiNameRef('MutableIterable'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiInvocation(new PhiNameRef('AbstractMutableCollection$retainAll$lambda'), array(new PhiNameRef('elements')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'iterator'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'remove'), array()));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableCollection'), 'prototype'), 'toJSON'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'toArray'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableCollection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractMutableCollection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableCollection'), new PhiNameRef('AbstractCollection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'add_wxm5ur$'), array(new PhiDot(new PhiNameRef('this'), 'size'), new PhiNameRef('element'))));
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'addAll_u57x28$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('_index', new PhiNameRef('index'))));
      phiVars(array(array('changed', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'add_wxm5ur$'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('_index')), new PhiBinaryOperation('=', new PhiNameRef('_index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('e'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('changed'), true));
      }
      return new PhiNameRef('changed');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'removeRange_vux9f0$'), array(0.0, new PhiDot(new PhiNameRef('this'), 'size'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'removeAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('removeAll_0'), array(new PhiNameRef('this'), new PhiInvocation(new PhiNameRef('AbstractMutableList$removeAll$lambda'), array(new PhiNameRef('elements')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'retainAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('removeAll_0'), array(new PhiNameRef('this'), new PhiInvocation(new PhiNameRef('AbstractMutableList$retainAll$lambda'), array(new PhiNameRef('elements')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('AbstractMutableList$IteratorImpl'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>=', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'indexOf_11rb$'), array(new PhiNameRef('element'))), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'indexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('this')))));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'get_za3lpa$'), array(new PhiNameRef('index'))), new PhiNameRef('element'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'lastIndexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('downTo'), array(new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('this'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'get_za3lpa$'), array(new PhiNameRef('index'))), new PhiNameRef('element'))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'listIterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'listIterator_za3lpa$'), array(0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'listIterator_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), array(new PhiNameRef('this'), new PhiNameRef('index')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'subList_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('AbstractMutableList$SubList'), array(new PhiNameRef('this'), new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'removeRange_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'listIterator_za3lpa$'), array(new PhiNameRef('fromIndex'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('toIndex'), new PhiNameRef('fromIndex')), 0.0), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'remove'), array()));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('other'), new PhiNameRef('this')))) {
        return true;
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('List')))))) {
        return false;
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'orderedEquals_0'), array(new PhiNameRef('this'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'orderedHashCode_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$IteratorImpl'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'size'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$IteratorImpl'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'index_0')), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'get_za3lpa$'), array(new PhiDot(new PhiNameRef('this'), 'last_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$IteratorImpl'), 'prototype'), 'remove'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiPrefixOperation('-', 1.0))))) {
        phiVars(array(array('message', new PhiStringLiteral('Call next() or previous() before removing element from the iterator.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'removeAt_za3lpa$'), array(new PhiDot(new PhiNameRef('this'), 'last_0'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiDot(new PhiNameRef('this'), 'last_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiPrefixOperation('-', 1.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableList$IteratorImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IteratorImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), 'hasPrevious'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'index_0'), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), 'nextIndex'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'index_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), 'previous'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasPrevious'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'index_0'), 1.0), 0.0)), new PhiDot(new PhiNameRef('this'), 'index_0'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'get_za3lpa$'), array(new PhiDot(new PhiNameRef('this'), 'last_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), 'previousIndex'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'index_0'), 1.0), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'add_wxm5ur$'), array(new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiNameRef('element'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'index_0'), 1.0), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiPrefixOperation('-', 1.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), 'prototype'), 'set_11rb$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiPrefixOperation('-', 1.0))))) {
        phiVars(array(array('message', new PhiStringLiteral('Call next() or previous() before updating element value with the iterator.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'set_wxm5ur$'), array(new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiNameRef('element'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableList$ListIteratorImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ListIteratorImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableListIterator'), new PhiNameRef('AbstractMutableList$IteratorImpl'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), 'prototype'), 'add_wxm5ur$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkPositionIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), '_size_0'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'list_0'), 'add_wxm5ur$'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('index')), 0.0), new PhiNameRef('element'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_size_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), '_size_0'), 1.0), 0.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkElementIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), '_size_0'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'list_0'), 'get_za3lpa$'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('index')), 0.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), 'prototype'), 'removeAt_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkElementIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), '_size_0'))));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'list_0'), 'removeAt_za3lpa$'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('index')), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_size_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), '_size_0'), 1.0), 0.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), 'prototype'), 'set_wxm5ur$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkElementIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), '_size_0'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'list_0'), 'set_wxm5ur$'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('index')), 0.0), new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), '_size_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableList$SubList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SubList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableList'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractMutableList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableList'), new PhiNameRef('AbstractMutableCollection'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype'), new PhiStringLiteral('key'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'key_af2vu2$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype'), new PhiStringLiteral('value'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), '_value_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype'), 'setValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('oldValue', new PhiDot(new PhiNameRef('this'), '_value_0'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiNameRef('newValue')));
      return new PhiNameRef('oldValue');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractMap$Companion_getInstance'), array()), 'entryHashCode_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractMap$Companion_getInstance'), array()), 'entryToString_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractMap$Companion_getInstance'), array()), 'entryEquals_0'), array(new PhiNameRef('this'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap$SimpleEntry'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SimpleEntry')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableMap$MutableEntry'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'entries'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('UnsupportedOperationException'), array(new PhiStringLiteral('Add is not supported on keys'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'containsKey_11rb$'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'next'), array()), 'key');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'remove'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'remove'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('entryIterator', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'entries'), 'iterator'), array()))));
      return new PhiNew(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral$iterator$ObjectLiteral'), array(new PhiNameRef('entryIterator')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'containsKey_11rb$'), array(new PhiNameRef('element'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'remove_11rb$'), array(new PhiNameRef('element'))));
        return true;
      }
      return false;
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableSet'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), new PhiStringLiteral('keys'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), '_keys_n25ags$_0'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_keys_n25ags$_0'), new PhiNew(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$keys$ObjectLiteral'), array(new PhiNameRef('this')))));
      }
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), '_keys_n25ags$_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), 'putAll_a2k3zr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('from'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
        phiVars(array(array('tmp$', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
        phiVars(array(array('key', new PhiDot(new PhiNameRef('tmp$'), 'key'))));
        phiVars(array(array('value', new PhiDot(new PhiNameRef('tmp$'), 'value'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('value'))));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('UnsupportedOperationException'), array(new PhiStringLiteral('Add is not supported on values'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'containsValue_11rc$'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'next'), array()), 'value');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'remove'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'remove'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('entryIterator', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'entries'), 'iterator'), array()))));
      return new PhiNew(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral$iterator$ObjectLiteral'), array(new PhiNameRef('entryIterator')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMutableMap'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')))) {
        return true;
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Collection')))))) {
        return false;
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'orderedEquals_0'), array(new PhiNameRef('this'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'orderedHashCode_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableCollection'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), new PhiStringLiteral('values'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), '_values_n25ags$_0'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_values_n25ags$_0'), new PhiNew(new PhiNameRef('AbstractMutableMap$get_AbstractMutableMap$values$ObjectLiteral'), array(new PhiNameRef('this')))));
      }
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), '_values_n25ags$_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iter', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'entries'), 'iterator'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iter'), 'hasNext'), array())) {
        phiVars(array(array('entry', new PhiInvocation(new PhiDot(new PhiNameRef('iter'), 'next'), array()))));
        phiVars(array(array('k', new PhiDot(new PhiNameRef('entry'), 'key'))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('key'), new PhiNameRef('k'))))) {
          phiVars(array(array('value', new PhiDot(new PhiNameRef('entry'), 'value'))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('iter'), 'remove'), array()));
          return new PhiNameRef('value');
        }
      }
      return null;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractMutableMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableMap'), new PhiNameRef('AbstractMap'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('other'), new PhiNameRef('this')))) {
        return true;
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Set')))))) {
        return false;
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractSet$Companion_getInstance'), array()), 'setEquals_0'), array(new PhiNameRef('this'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableSet'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractSet$Companion_getInstance'), array()), 'unorderedHashCode_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMutableSet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractMutableSet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableSet'), new PhiNameRef('AbstractMutableCollection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'trimToSize'), new PhiFunctionExpression(null, array(), function () {
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'ensureCapacity_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'length');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'rangeCheck_2lys7f$_0'), array(new PhiNameRef('index'))))), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'set_wxm5ur$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'rangeCheck_2lys7f$_0'), array(new PhiNameRef('index'))));
      phiVars(array(array('$receiver', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiNameRef('index')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiNameRef('index')), new PhiNameRef('element')));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'push'), array(new PhiNameRef('element'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'add_wxm5ur$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'splice'), array(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'insertionRangeCheck_2lys7f$_0'), array(new PhiNameRef('index'))), 0.0, new PhiNameRef('element'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'addAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'isEmpty'), array()))) {
        return false;
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'concat'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'copyToArray'), array(new PhiNameRef('elements')))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'addAll_u57x28$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'insertionRangeCheck_2lys7f$_0'), array(new PhiNameRef('index'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), 'size')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'addAll_brywnq$'), array(new PhiNameRef('elements')));
      }
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'isEmpty'), array()))) {
        return false;
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), 'size')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'addAll_brywnq$'), array(new PhiNameRef('elements')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('index'), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'copyToArray'), array(new PhiNameRef('elements'))), 'concat'), array(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0')))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'slice'), array(0.0, new PhiNameRef('index'))), 'concat'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'copyToArray'), array(new PhiNameRef('elements'))), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'slice'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), 'size')))))));
        }
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'removeAt_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'rangeCheck_2lys7f$_0'), array(new PhiNameRef('index'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('this')))), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'pop'), array()), new PhiBrackets(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'splice'), array(new PhiNameRef('index'), 1.0)), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('get_indices'), array(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiNameRef('index')), new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'splice'), array(new PhiNameRef('index'), 1.0)));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
          return true;
        }
      }
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'removeRange_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'splice'), array(new PhiNameRef('fromIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('toIndex'), new PhiNameRef('fromIndex')), 0.0))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiArrayLiteral(array())));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'modCount'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'modCount'), 1.0), 0.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'indexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('indexOf'), array(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'lastIndexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('lastIndexOf'), array(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayToString'), array(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'toArray'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'array_9xgyxj$_0'), 'slice'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'rangeCheck_2lys7f$_0'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkElementIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), 'size'))));
      return new PhiNameRef('index');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayList'), 'prototype'), 'insertionRangeCheck_2lys7f$_0'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkPositionIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), 'size'))));
      return new PhiNameRef('index');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ArrayList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ArrayList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RandomAccess'), new PhiNameRef('AbstractMutableList'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EqualityComparator$HashCode'), 'prototype'), 'equals_oaftn8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('value1'), new PhiNameRef('value2')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EqualityComparator$HashCode'), 'prototype'), 'getHashCode_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('value'), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiNameRef('value'))), null)), null), new PhiNameRef('tmp$'), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EqualityComparator$HashCode'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('HashCode')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('EqualityComparator'))))))));
    phiVars(array(array('EqualityComparator$HashCode_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EqualityComparator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EqualityComparator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('UnsupportedOperationException'), array(new PhiStringLiteral('Add is not supported on entries'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'containsEntry_krtws3$_0'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'internalMap_bievda$_0'), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'contains_11rb$'), array(new PhiNameRef('element'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'remove_11rb$'), array(new PhiDot(new PhiNameRef('element'), 'key'))));
        return true;
      }
      return false;
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('HashMap$EntrySet'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('HashMap$EntrySet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EntrySet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableSet'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'containsKey_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'), 'contains_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'containsValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'))));
      phiVars(array(array('any$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label any$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'equality_bievda$_0'), 'equals_oaftn8$'), array(new PhiDot(new PhiNameRef('element'), 'value'), new PhiNameRef('value'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), true));
              phiExpressionStatement(new PhiNameRef('goto any_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), false));
        }
        phiExpressionStatement(new PhiNameRef('any_usd_break:'));
      }
      return new PhiNameRef('any$result');
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), new PhiStringLiteral('entries'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), '_entries_bievda$_0'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_entries_bievda$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'createEntrySet'), array())));
      }
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), '_entries_bievda$_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'createEntrySet'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('HashMap$EntrySet'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'), 'get_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'put_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'), 'remove_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('HashMap'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'internalMap_bievda$_0'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('HashMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('HashMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableMap'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('old', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), 'put_xwzc9p$'), array(new PhiNameRef('element'), new PhiNameRef('this'))))));
      return new PhiBinaryOperation('==', new PhiNameRef('old'), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), 'containsKey_11rb$'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), 'isEmpty'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), 'keys'), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!=', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), 'remove_11rb$'), array(new PhiNameRef('element'))), null);
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('HashSet'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_biaydw$_0'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('HashSet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('HashSet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableSet'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), new PhiStringLiteral('equality'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'equality_mb5kdg$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'size_mb5kdg$_0');
    })), array(new PhiNameRef('set'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size_mb5kdg$_0'), new PhiNameRef('size')));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'put_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('hashCode', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'equality'), 'getHashCode_s8jyv4$'), array(new PhiNameRef('key'))))));
      phiVars(array(array('chain', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'getChainOrNull_0'), array(new PhiNameRef('hashCode'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('chain'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('hashCode')), new PhiArrayLiteral(array(new PhiNew(new PhiNameRef('AbstractMutableMap$SimpleEntry'), array(new PhiNameRef('key'), new PhiNameRef('value')))))));
      }
       else {
        phiVars(array(array('entry', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'findEntryInChain_0'), array(new PhiNameRef('chain'), new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('entry'), null))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('entry'), 'setValue_11rc$'), array(new PhiNameRef('value')));
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('chain'), 'push'), array(new PhiNew(new PhiNameRef('AbstractMutableMap$SimpleEntry'), array(new PhiNameRef('key'), new PhiNameRef('value'))))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'size'), 1.0), 0.0)));
      return null;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('hashCode', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'equality'), 'getHashCode_s8jyv4$'), array(new PhiNameRef('key'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'getChainOrNull_0'), array(new PhiNameRef('hashCode')))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('tmp$'), null))) {
        return null;
      }
      phiVars(array(array('chain', new PhiNameRef('tmp$'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('chain'), 'length'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_0')); new PhiNameRef('index')++) {
        phiVars(array(array('entry', new PhiBrackets(new PhiNameRef('chain'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'equality'), 'equals_oaftn8$'), array(new PhiNameRef('key'), new PhiDot(new PhiNameRef('entry'), 'key'))))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('chain'), 'length'), 1.0))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('chain'), 'length'), 0.0));
            phiExpressionStatement(new PhiPrefixOperation('delete', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('hashCode'))));
          }
           else {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('chain'), 'splice'), array(new PhiNameRef('index'), 1.0)));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'size'), 1.0), 0.0)));
          return new PhiDot(new PhiNameRef('entry'), 'value');
        }
      }
      return null;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(null))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size'), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!=', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'getEntry_0'), array(new PhiNameRef('key'))), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'getEntry_0'), array(new PhiNameRef('key')))), null), new PhiDot(new PhiNameRef('tmp$'), 'value'), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'getEntry_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'getChainOrNull_0'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'equality'), 'getHashCode_s8jyv4$'), array(new PhiNameRef('key')))))), null), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'findEntryInChain_0'), array(new PhiNameRef('tmp$'), new PhiNameRef('key'))), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'findEntryInChain_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'equality'), 'equals_oaftn8$'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiNameRef('key'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_usd_break:'));
      }
      return new PhiNameRef('firstOrNull$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap$iterator$ObjectLiteral'), 'prototype'), 'computeNext_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('this'), 'chain'), null))) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'itemIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'itemIndex'), 1.0), 0.0)), new PhiDot(new PhiNameRef('this'), 'itemIndex')), new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'chain')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'length')))) {
          return 0.0;
        }
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'keyIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'keyIndex'), 1.0), 0.0)), new PhiDot(new PhiNameRef('this'), 'keyIndex')), new PhiDot(new PhiDot(new PhiNameRef('this'), 'keys'), 'length')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'chain'), new PhiBrackets(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$InternalHashCodeMap'), 'backingMap_0'), new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'keys'), new PhiDot(new PhiNameRef('this'), 'keyIndex')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'itemIndex'), 0.0));
        return 0.0;
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'chain'), null));
        return 1.0;
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'state'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'computeNext_0'), array())));
      }
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'state'), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiVars(array(array('lastEntry', new PhiBrackets(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'chain')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), new PhiDot(new PhiNameRef('this'), 'itemIndex')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lastEntry'), new PhiNameRef('lastEntry')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state'), new PhiPrefixOperation('-', 1.0)));
      return new PhiNameRef('lastEntry');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap$iterator$ObjectLiteral'), 'prototype'), 'remove'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'lastEntry'), null))) {
        phiVars(array(array('message', new PhiStringLiteral('Required value was null.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$InternalHashCodeMap'), 'remove_11rb$'), array(new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'lastEntry')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'key'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lastEntry'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'itemIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'itemIndex'), 1.0), 0.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InternalHashCodeMap$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('InternalHashCodeMap$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalHashCodeMap'), 'prototype'), 'getChainOrNull_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('chain', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('hashCode')))));
      return new PhiConditional(new PhiBinaryOperation('!==', new PhiNameRef('chain'), new PhiNameRef('undefined')), new PhiNameRef('chain'), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InternalHashCodeMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('InternalHashCodeMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('InternalMap'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InternalMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('InternalMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterable'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), new PhiStringLiteral('equality'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'equality_o1oc42$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'size_o1oc42$_0');
    })), array(new PhiNameRef('set'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size_o1oc42$_0'), new PhiNameRef('size')));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('key')), new PhiStringLiteral('string'))))) {
        return false;
      }
      return new PhiBinaryOperation('!==', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('key')), new PhiNameRef('undefined'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('key')), new PhiStringLiteral('string'))))) {
        return null;
      }
      phiVars(array(array('value', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('key')))));
      return new PhiConditional(new PhiBinaryOperation('!==', new PhiNameRef('value'), new PhiNameRef('undefined')), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('value')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), 'put_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('key')), new PhiStringLiteral('string'))))) {
        phiVars(array(array('message', new PhiStringLiteral('Failed requirement.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiVars(array(array('oldValue', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('key')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('key')), new PhiNameRef('value')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('oldValue'), new PhiNameRef('undefined')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'size'), 1.0), 0.0)));
        return null;
      }
       else {
        return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('oldValue')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('key')), new PhiStringLiteral('string'))))) {
        return null;
      }
      phiVars(array(array('value', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('key')))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('value'), new PhiNameRef('undefined')))) {
        phiExpressionStatement(new PhiPrefixOperation('delete', new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiNameRef('key'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'size'), 1.0), 0.0)));
        return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('value')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
      }
       else {
        return null;
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'backingMap_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'create'), array(null))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'size'), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator_0'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator_0'), 'next'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'lastKey_0'), new PhiNameRef('key')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('key')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$InternalStringMap'), 'newMapEntry_0'), array(new PhiNameRef('tmp$_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap$iterator$ObjectLiteral'), 'prototype'), 'remove'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('this'), 'this$InternalStringMap')));
      phiVars(array(array('value', new PhiDot(new PhiNameRef('this'), 'lastKey_0'))));
      phiVars(array(array('checkNotNull_p3yddy$result', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
        phiVars(array(array('message', new PhiStringLiteral('Required value was null.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('checkNotNull_p3yddy$result'), new PhiNameRef('value')));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'remove_11rb$'), array(new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('checkNotNull_p3yddy$result')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InternalStringMap$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('InternalStringMap$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), 'prototype'), new PhiStringLiteral('key'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'closure$key');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), 'prototype'), new PhiStringLiteral('value'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$InternalStringMap'), 'get_11rb$'), array(new PhiDot(new PhiNameRef('this'), 'closure$key')))), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), 'prototype'), 'setValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$InternalStringMap'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('this'), 'closure$key'), new PhiNameRef('newValue')))), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractMap$Companion_getInstance'), array()), 'entryHashCode_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractMap$Companion_getInstance'), array()), 'entryToString_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractMap$Companion_getInstance'), array()), 'entryEquals_0'), array(new PhiNameRef('this'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableMap$MutableEntry'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InternalStringMap'), 'prototype'), 'newMapEntry_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('InternalStringMap$newMapEntry$ObjectLiteral'), array(new PhiNameRef('key'), new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InternalStringMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('InternalStringMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('InternalMap'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashMap$ChainEntry'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ChainEntry')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableMap$SimpleEntry'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet$EntryIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('this'), 'next_0'), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet$EntryIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiVars(array(array('current', new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'next_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), new PhiNameRef('current')));
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('current'), 'next_0'))));
      phiExpressionStatement(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), '$outer'));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'next_0'), new PhiConditional(new PhiBinaryOperation('!==', new PhiNameRef('$receiver'), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), '$outer'), 'head_bqz7u3$_0')), new PhiNameRef('$receiver'), null)));
      return new PhiNameRef('current');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet$EntryIterator'), 'prototype'), 'remove'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('!=', new PhiDot(new PhiNameRef('this'), 'last_0'), null)))) {
        phiVars(array(array('message', new PhiStringLiteral('Check failed.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), '$outer'), 'remove_w3vk1v$_0'), array(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'last_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), '$outer'), 'map_bqz7u3$_0'), 'remove_11rb$'), array(new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('this'), 'last_0')), null), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'key'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'last_0'), null));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet$EntryIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EntryIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), 'add_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('UnsupportedOperationException'), array(new PhiStringLiteral('Add is not supported on entries'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'containsEntry_krtws3$_0'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('LinkedHashMap$EntrySet$EntryIterator'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'contains_11rb$'), array(new PhiNameRef('element'))))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'remove_11rb$'), array(new PhiDot(new PhiNameRef('element'), 'key'))));
        return true;
      }
      return false;
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashMap$EntrySet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EntrySet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableSet'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'addToEnd_w3vk1v$_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('$receiver'), 'next_0'), null), new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('$receiver'), 'prev_0'), null))))) {
        phiVars(array(array('message', new PhiStringLiteral('Check failed.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiVars(array(array('_head', new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('_head'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'), new PhiNameRef('$receiver')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'next_0'), new PhiNameRef('$receiver')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'prev_0'), new PhiNameRef('$receiver')));
      }
       else {
        phiVars(array(array('value', new PhiDot(new PhiNameRef('_head'), 'prev_0'))));
        phiVars(array(array('checkNotNull_p3yddy$result', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('message_0', new PhiStringLiteral('Required value was null.'))));
          phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message_0'), 'toString'), array()))));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('checkNotNull_p3yddy$result'), new PhiNameRef('value')));
        }
        phiVars(array(array('_tail', new PhiNameRef('checkNotNull_p3yddy$result'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'prev_0'), new PhiNameRef('_tail')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'next_0'), new PhiNameRef('_head')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_head'), 'prev_0'), new PhiNameRef('$receiver')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_tail'), 'next_0'), new PhiNameRef('$receiver')));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'remove_w3vk1v$_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'next_0'), new PhiNameRef('$receiver')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'), null));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'), new PhiNameRef('$receiver')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'), new PhiDot(new PhiNameRef('$receiver'), 'next_0')));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'next_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'prev_0'), new PhiDot(new PhiNameRef('$receiver'), 'prev_0')));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('$receiver'), 'prev_0')), null), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'next_0'), new PhiDot(new PhiNameRef('$receiver'), 'next_0')));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'next_0'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('$receiver'), 'prev_0'), null));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), 'clear'), array()));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'), null));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'containsKey_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), 'containsKey_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'containsValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('tmp$'), null))) {
        return false;
      }
      phiVars(array(array('node', new PhiNameRef('tmp$'))));
      while (new PhiBinaryOperation('!==', new PhiNameRef('node'), new PhiDot(new PhiNameRef('this'), 'head_bqz7u3$_0'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('node'), 'value'), new PhiNameRef('value'))))) {
          return true;
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('node'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('node'), 'next_0')), null), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()))));
      }
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'createEntrySet'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('LinkedHashMap$EntrySet'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), 'get_11rb$'), array(new PhiNameRef('key')))), null), new PhiDot(new PhiNameRef('tmp$'), 'value'), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'put_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('old', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), 'get_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('old'), null))) {
        phiVars(array(array('newEntry', new PhiNew(new PhiNameRef('LinkedHashMap$ChainEntry'), array(new PhiNameRef('key'), new PhiNameRef('value'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('newEntry'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'addToEnd_w3vk1v$_0'), array(new PhiNameRef('newEntry'))));
        return null;
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiNameRef('old'), 'setValue_11rc$'), array(new PhiNameRef('value')));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('entry', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), 'remove_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiNameRef('entry'), null))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'remove_w3vk1v$_0'), array(new PhiNameRef('entry'))));
        return new PhiDot(new PhiNameRef('entry'), 'value');
      }
      return null;
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map_bqz7u3$_0'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LinkedHashMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('HashMap'), new PhiNameRef('Map'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LinkedHashSet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LinkedHashSet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('HashSet'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RandomAccess'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('RandomAccess')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Volatile'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Volatile')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Synchronized'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Synchronized')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiVars(array(array('synchronized', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.synchronized_eocq09$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('block'), array());
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BaseOutput'), 'prototype'), 'println'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'print_s8jyv4$'), array(new PhiStringLiteral('\n'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BaseOutput'), 'prototype'), 'println_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'print_s8jyv4$'), array(new PhiNameRef('message'))));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'println'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BaseOutput'), 'prototype'), 'flush'), new PhiFunctionExpression(null, array(), function () {
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('BaseOutput'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('BaseOutput')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NodeJsOutput'), 'prototype'), 'print_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'outputStream'), 'write'), array(new PhiNameRef('message')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NodeJsOutput'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NodeJsOutput')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('BaseOutput'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('OutputToConsoleLog'), 'prototype'), 'print_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('console'), 'log'), array(new PhiNameRef('message'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('OutputToConsoleLog'), 'prototype'), 'println_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('console'), 'log'), array(new PhiNameRef('message'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('OutputToConsoleLog'), 'prototype'), 'println'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('console'), 'log'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('OutputToConsoleLog'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('OutputToConsoleLog')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('BaseOutput'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BufferedOutput'), 'prototype'), 'print_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('+=', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiInvocation(new PhiNameRef('String'), array(new PhiNameRef('message')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BufferedOutput'), 'prototype'), 'flush'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiStringLiteral('')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('BufferedOutput'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('BufferedOutput')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('BaseOutput'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BufferedOutputToConsoleLog'), 'prototype'), 'print_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('s', new PhiInvocation(new PhiNameRef('String'), array(new PhiNameRef('message'))))));
      phiVars(array(array('i', new PhiInvocation(new PhiNameRef('lastIndexOf_0'), array(new PhiNameRef('s'), 10.0)))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiInvocation(new PhiDot(new PhiNameRef('s'), 'substring'), array(0.0, new PhiNameRef('i'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'flush'), array()));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('s'), new PhiInvocation(new PhiDot(new PhiNameRef('s'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('i'), 1.0), 0.0)))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiNameRef('s'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('BufferedOutputToConsoleLog'), 'prototype'), 'flush'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('console'), 'log'), array(new PhiDot(new PhiNameRef('this'), 'buffer'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'buffer'), new PhiStringLiteral('')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('BufferedOutputToConsoleLog'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('BufferedOutputToConsoleLog')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('BufferedOutput'))))))));
    phiVars(array(array('output', )));
    phiVars(array(array('jsTypeOf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.js.jsTypeOf_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('typeof', new PhiNameRef('a'));
    }))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('CoroutineImpl'), 'prototype'), new PhiStringLiteral('context'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'context_d1fu0y$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CoroutineImpl'), 'prototype'), 'resume_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('data')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'doResumeWrapper_0'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CoroutineImpl'), 'prototype'), 'resumeWithException_tcv7n7$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), new PhiDot(new PhiNameRef('this'), 'exceptionState_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'exception_0'), new PhiNameRef('exception')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'doResumeWrapper_0'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CoroutineImpl'), 'prototype'), 'doResumeWrapper_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('completion', new PhiDot(new PhiNameRef('this'), 'resultContinuation_0'))));
      phiVars(array(array('tmp$', )));
      {
        try {
          phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'doResume'), array()))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('result'), new PhiNameRef('COROUTINE_SUSPENDED')))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('completion')), new PhiNameRef('Continuation'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'resume_11rb$'), array(new PhiNameRef('result'))));
          }
        }
         catch (t) {
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('t'), new PhiNameRef('Throwable'))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('completion'), 'resumeWithException_tcv7n7$'), array(new PhiNameRef('t'))));
          }
           else {
            phiThrow(new PhiNameRef('t'));
          }
        }
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CoroutineImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CoroutineImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Continuation'))))))));
    phiVars(array(array('UNDECIDED', )));
    phiVars(array(array('RESUMED', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Fail'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Fail')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('SafeContinuation'), 'prototype'), new PhiStringLiteral('context'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'context');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SafeContinuation'), 'prototype'), 'resume_11rb$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('UNDECIDED')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('value')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('COROUTINE_SUSPENDED')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('RESUMED')));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'resume_11rb$'), array(new PhiNameRef('value'))));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalStateException'), array(new PhiStringLiteral('Already resumed'))));
        }
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SafeContinuation'), 'prototype'), 'resumeWithException_tcv7n7$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('UNDECIDED')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNew(new PhiNameRef('Fail'), array(new PhiNameRef('exception')))));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('COROUTINE_SUSPENDED')))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('RESUMED')));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'resumeWithException_tcv7n7$'), array(new PhiNameRef('exception'))));
        }
         else {
          phiThrow(new PhiNew(new PhiNameRef('IllegalStateException'), array(new PhiStringLiteral('Already resumed'))));
        }
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SafeContinuation'), 'prototype'), 'getResult'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('UNDECIDED')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'result_0'), new PhiNameRef('COROUTINE_SUSPENDED')));
      }
      phiVars(array(array('result', new PhiDot(new PhiNameRef('this'), 'result_0'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('result'), new PhiNameRef('RESUMED')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('COROUTINE_SUSPENDED')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('result'), new PhiNameRef('Fail'))))) {
          phiThrow(new PhiDot(new PhiNameRef('result'), 'exception'));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('result')));
        }
      }
      return new PhiNameRef('tmp$');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('SafeContinuation'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SafeContinuation')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Continuation'))))))));
    phiVars(array(array('startCoroutineUninterceptedOrReturn', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn_xtwlez$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('$receiver'), array(new PhiNameRef('completion'), false));
    }))))));
    phiVars(array(array('startCoroutineUninterceptedOrReturn_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.coroutines.experimental.intrinsics.startCoroutineUninterceptedOrReturn_uao1qo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('$receiver'), array(new PhiNameRef('receiver'), new PhiNameRef('completion'), false));
    }))))));
    phiVars(array(array('asDynamic', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.js.asDynamic_mzud1t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('unsafeCast_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.js.unsafeCast_3752g7$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('unsafeCast', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.js.unsafeCastDynamic'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('Error_0'), 'prototype'), new PhiStringLiteral('message'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'message_lqgip$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('Error_0'), 'prototype'), new PhiStringLiteral('cause'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'cause_lqgip$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Error_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Error')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Throwable'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('Exception'), 'prototype'), new PhiStringLiteral('message'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'message_ujvw20$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('Exception'), 'prototype'), new PhiStringLiteral('cause'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'cause_ujvw20$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Exception'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Exception')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Throwable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RuntimeException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('RuntimeException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Exception'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IllegalArgumentException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IllegalArgumentException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IllegalStateException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IllegalStateException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IndexOutOfBoundsException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IndexOutOfBoundsException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ConcurrentModificationException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ConcurrentModificationException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('UnsupportedOperationException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('UnsupportedOperationException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NumberFormatException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NumberFormatException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NullPointerException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NullPointerException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ClassCastException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ClassCastException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AssertionError'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AssertionError')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Error_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NoSuchElementException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NoSuchElementException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Exception'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NoWhenBranchMatchedException'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NoWhenBranchMatchedException')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RuntimeException'))))))));
    phiVars(array(array('component1_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 0.0);
    }))))));
    phiVars(array(array('component1_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0)));
    }))))));
    phiVars(array(array('component2_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 1.0);
    }))))));
    phiVars(array(array('component2_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 1.0)));
    }))))));
    phiVars(array(array('component3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 2.0);
    }))))));
    phiVars(array(array('component3_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 2.0)));
    }))))));
    phiVars(array(array('component4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 3.0);
    }))))));
    phiVars(array(array('component4_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 3.0)));
    }))))));
    phiVars(array(array('component5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), 4.0);
    }))))));
    phiVars(array(array('component5_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 4.0)));
    }))))));
    phiVars(array(array('elementAt', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_8ujjk8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_mrm5p$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_m2jy6x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_c03ot6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_3aefkx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_rblqex$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_xgrzbe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_1qu12l$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('elementAt_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_gtcw5h$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_qyicq6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_1pvgfa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_shq4vo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_xumoj0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_uafoqm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_ln6iwk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_lnau98$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_v8pqlw$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrElse_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_sjvy5y$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_8ujjk8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_8ujjk8$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_mrm5p$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_mrm5p$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_m2jy6x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_m2jy6x$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_c03ot6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_c03ot6$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_3aefkx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_3aefkx$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_rblqex$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_rblqex$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_xgrzbe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_xgrzbe$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_1qu12l$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_1qu12l$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrNull_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_gtcw5h$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_gtcw5h$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
    }))))));
    phiVars(array(array('find', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_sfx99b$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_sfx99b$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_sfx99b$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_sfx99b_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_sfx99b$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_sfx99b_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_sfx99b$result');
    }))))));
    phiVars(array(array('find_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_c3i447$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_c3i447$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_c3i447$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_c3i447_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_c3i447$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_c3i447_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_c3i447$result');
    }))))));
    phiVars(array(array('find_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_247xw3$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_247xw3$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_247xw3$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_247xw3_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_247xw3$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_247xw3_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_247xw3$result');
    }))))));
    phiVars(array(array('find_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_il4kyb$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_il4kyb$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_il4kyb$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_il4kyb_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_il4kyb$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_il4kyb_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_il4kyb$result');
    }))))));
    phiVars(array(array('find_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_i1oc7r$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_i1oc7r$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_i1oc7r$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_i1oc7r_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_i1oc7r$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_i1oc7r_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_i1oc7r$result');
    }))))));
    phiVars(array(array('find_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_u4nq1f$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_u4nq1f$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_u4nq1f$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_u4nq1f_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_u4nq1f$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_u4nq1f_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_u4nq1f$result');
    }))))));
    phiVars(array(array('find_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_3vq27r$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_3vq27r$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_3vq27r$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_3vq27r_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_3vq27r$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_3vq27r_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_3vq27r$result');
    }))))));
    phiVars(array(array('find_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_xffwn9$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_xffwn9$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_xffwn9$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_xffwn9_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_xffwn9$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_xffwn9_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_xffwn9$result');
    }))))));
    phiVars(array(array('find_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_3ji0pj$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_3ji0pj$break'));
        {
          phiVars(array(array('tmp$', )));
          for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_3ji0pj$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_3ji0pj_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_3ji0pj$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_3ji0pj_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstOrNull_3ji0pj$result')));
    }))))));
    phiVars(array(array('findLast', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_sfx99b$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_sfx99b$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_m7z4lg$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_sfx99b$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_sfx99b_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_sfx99b$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_sfx99b_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_sfx99b$result');
    }))))));
    phiVars(array(array('findLast_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_c3i447$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_c3i447$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_964n91$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_c3i447$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_c3i447_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_c3i447$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_c3i447_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_c3i447$result');
    }))))));
    phiVars(array(array('findLast_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_247xw3$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_247xw3$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_i2lc79$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_247xw3$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_247xw3_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_247xw3$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_247xw3_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_247xw3$result');
    }))))));
    phiVars(array(array('findLast_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_il4kyb$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_il4kyb$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_tmsbgo$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_il4kyb$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_il4kyb_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_il4kyb$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_il4kyb_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_il4kyb$result');
    }))))));
    phiVars(array(array('findLast_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_i1oc7r$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_i1oc7r$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_se6h4x$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_i1oc7r$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_i1oc7r_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_i1oc7r$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_i1oc7r_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_i1oc7r$result');
    }))))));
    phiVars(array(array('findLast_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_u4nq1f$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_u4nq1f$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_rjqryz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_u4nq1f$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_u4nq1f_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_u4nq1f$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_u4nq1f_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_u4nq1f$result');
    }))))));
    phiVars(array(array('findLast_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_3vq27r$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_3vq27r$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_bvy38s$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_3vq27r$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_3vq27r_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_3vq27r$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_3vq27r_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_3vq27r$result');
    }))))));
    phiVars(array(array('findLast_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_xffwn9$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_xffwn9$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_l1lu5t$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_xffwn9$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_xffwn9_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_xffwn9$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_xffwn9_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_xffwn9$result');
    }))))));
    phiVars(array(array('findLast_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_3ji0pj$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_3ji0pj$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_355ntz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_3ji0pj$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_3ji0pj_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_3ji0pj$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_3ji0pj_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('lastOrNull_3ji0pj$result')));
    }))))));
    phiVars(array(array('first_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('first_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('firstOrNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('firstOrNull_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      return null;
    }))))));
    phiVars(array(array('getOrElse', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_qyicq6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_1pvgfa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_shq4vo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_xumoj0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_uafoqm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_ln6iwk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_lnau98$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_v8pqlw$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('getOrElse_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_sjvy5y$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))))), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('indexOfFirst', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_m7z4lg$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_964n91$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_i2lc79$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_tmsbgo$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_se6h4x$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_rjqryz$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_bvy38s$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_l1lu5t$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_355ntz$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_m7z4lg$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_964n91$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_i2lc79$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_tmsbgo$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_se6h4x$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_rjqryz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_bvy38s$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_l1lu5t$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_355ntz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('last_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_m7z4lg$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_964n91$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_i2lc79$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_tmsbgo$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_se6h4x$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_rjqryz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_bvy38s$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_l1lu5t$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('last_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_355ntz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('lastOrNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_m7z4lg$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_964n91$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_i2lc79$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_tmsbgo$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_se6h4x$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_rjqryz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_bvy38s$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_l1lu5t$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('lastOrNull_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'reversed_7wnvza$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_indices_355ntz$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      return null;
    }))))));
    phiVars(array(array('single_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24'))), new PhiStringLiteral('number')), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24'))), new PhiStringLiteral('number')), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24'))), new PhiStringLiteral('number')), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24')), new PhiDot(new PhiNameRef('Kotlin'), 'Long'))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24'))), new PhiStringLiteral('number')), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24'))), new PhiStringLiteral('number')), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24'))), new PhiStringLiteral('boolean')), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('single_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Array contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Array contains no element matching the predicate.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isChar'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('single_24')))))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
    }))))));
    phiVars(array(array('singleOrNull_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('singleOrNull_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('single_24')));
    }))))));
    phiVars(array(array('dropLastWhile', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_8ujjk8$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_mrm5p$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_m2jy6x$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_c03ot6$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_3aefkx$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_rblqex$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_xgrzbe$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_1qu12l$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropLastWhile_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_gtcw5h$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropWhile', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('dropWhile_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item')))))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('filter', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_1x1hc5$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_muebcr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_na3tu9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_j54otz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_8y5rp7$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_ngxnyp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_4abx9h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_40mjvt$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_es6ekl$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('index_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_yy1162$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_9utof$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_9c7hyn$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_xxq4i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_sp77il$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_1eenap$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_a0ikl4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_m16605$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_evsozx$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('index_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIsInstance', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIsInstance_d9eiz9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isR'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIsInstanceTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIsInstanceTo_fz41hi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isR'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_ywpv22$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_oqzfqb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_pth3ij$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_fz4mzi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_xddlih$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_b4wiqz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_y6u45w$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_soq3qv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_7as3in$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_ywpv22$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_oqzfqb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_pth3ij$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_fz4mzi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_xddlih$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_b4wiqz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_y6u45w$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_soq3qv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_7as3in$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('takeLastWhile', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_8ujjk8$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_mrm5p$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_964n91$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_m2jy6x$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_i2lc79$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_c03ot6$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_tmsbgo$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_3aefkx$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_se6h4x$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_rblqex$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_rjqryz$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_xgrzbe$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_bvy38s$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_1qu12l$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_l1lu5t$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeLastWhile_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))))) {
          return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'drop_gtcw5h$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_355ntz$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeWhile', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('takeWhile_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item')))))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('sortBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortBy_99hh6x$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortWith_iwcb0m$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector'))))));
      }
    }))))));
    phiVars(array(array('sortByDescending', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortByDescending_99hh6x$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortWith_iwcb0m$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector'))))));
      }
    }))))));
    phiVars(array(array('sortedBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_99hh6x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_iwcb0m$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_jirwv8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_movtv6$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_p0tdr4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_u08rls$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_30vlmi$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_rsw9pc$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_hom4ws$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_wqwa2y$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_ksd00w$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_1sg7gg$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_fvpt30$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_jucva8$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_xt360o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_7ffj0g$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedBy_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_epurks$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_7ncb86$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_99hh6x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_iwcb0m$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_jirwv8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_movtv6$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_p0tdr4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_u08rls$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_30vlmi$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_rsw9pc$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_hom4ws$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_wqwa2y$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_ksd00w$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_1sg7gg$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_fvpt30$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_jucva8$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_xt360o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_7ffj0g$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_epurks$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_7ncb86$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('isEmpty', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isEmpty_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isEmpty_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isNotEmpty', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isNotEmpty_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('associate', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_51p84z$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_hllm27$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_21tl2r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_ff74x3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_d7c9rj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_ddcx1p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_neh4lr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_su3lit$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associate_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_2m77bl$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_73x53s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_i1orpu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_2yxo7i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_vhfi20$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_oifiz6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_5k9h5a$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_hbdsc2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_8oadti$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_pmkh76$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_67lihi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_prlkfp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_emzy0b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_5wtufc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_hq1329$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_jjomwl$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_bvjqb8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_hxvtq7$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_nlw5ll$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_jnbl5d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_6rsi3p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_mvhbwl$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_jk03w$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_fajp69$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_z2kljv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_s8dkm4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_ro4olb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_deafr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_8rzqwv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_cne8q6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_gcgqha$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_snsha9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_ryii4m$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_6a7lri$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_lxofut$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_u9h8ze$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_u7k4io$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_t6a58$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_30k0gw$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_pdwiok$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_yjydda$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_o9od0g$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_642zho$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_t00y2o$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_l2eg58$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_7k1sps$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_m96iup$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_7g5j6z$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_2azm6x$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_k7x5xb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_jv6p05$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_a6ay1l$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_kx9v79$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_io4c5r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_m4binf$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_qpz03$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_hrglhs$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_9q2ddu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_ae7k4k$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_6h8o5s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_fngh32$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_53zyz4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_9hj6lm$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_5s36kw$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_73x53s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_i1orpu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_2yxo7i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_vhfi20$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_oifiz6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_5k9h5a$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_hbdsc2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_8oadti$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_pmkh76$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_67lihi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_prlkfp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_emzy0b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_5wtufc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_hq1329$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_jjomwl$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_bvjqb8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_hxvtq7$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_nlw5ll$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_1qxbxg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_6kmz48$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_bo8r4m$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_q1iim5$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_mu2a4k$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_x0uw5m$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_xcz1ip$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_mrd1pq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_axxeqe$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_ha2xv2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_lnembp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_n3jh2d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_ted19q$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_bzm9l3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_4auzph$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_akngni$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_au1frb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_cmmt3n$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral'), 'prototype'), 'sourceIterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiDot(new PhiNameRef('this'), 'this$groupingBy')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral'), 'prototype'), 'keyOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Grouping'))))))));
    phiVars(array(array('groupingBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupingBy_73x53s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'groupingBy$f'), array(new PhiNameRef('$receiver'), new PhiNameRef('keySelector')));
    }))))));
    phiVars(array(array('map', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_73x53s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_i1orpu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_2yxo7i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_vhfi20$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_oifiz6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_5k9h5a$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_hbdsc2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_8oadti$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_pmkh76$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_d05wzo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_b1mzcm$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_17cht6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_n9l81o$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_6hpo96$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_xqj56$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_623t7u$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_tk88gi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_8r1kga$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedNotNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedNotNull_aytly7$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('tmp$_1', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedNotNullTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedNotNullTo_97f7ib$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('tmp$_1', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_d8bv34$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_797pmj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_5akchx$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_ey1r33$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_yqgxdn$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_3uie0r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_3zacuz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_r9wz1$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_d11l8l$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapNotNull_oxs7gb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNullTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapNotNullTo_cni40x$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_4g4n0c$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_lvjep5$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_jtf97t$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_18cmir$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_6e2q1j$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_jpuhm1$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_u2n9ft$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_jrz1ox$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_bsh7dj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('distinctBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_73x53s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_i1orpu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_2yxo7i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_vhfi20$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_oifiz6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_5k9h5a$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_hbdsc2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_8oadti$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('distinctBy_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_pmkh76$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('all', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('all_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('any_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('any_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('count', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('count_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('fold', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_agj4oo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_fl151e$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_9nnzbm$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_sgag36$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_sc6mze$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_fnzdea$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_mnppu8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_43zc0i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('fold_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_8nwlk6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_oj0mn0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_qzmh7i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_aijnee$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_28ylm2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_37s2ie$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_faee2y$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_ufoyfg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_z82r06$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_sfak8u$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_svmc2u$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_wssfls$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_9ug2j2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_8vbxp4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_1fuzy8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_lsgf76$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_v5l2cg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_ej6ng6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_i7w5ds$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_et4u4i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_le73fo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_8zkega$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_ltx404$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_qk9kf8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_95xca2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_lxtlx8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_gkwrji$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_ivb0f8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('forEach', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_je628z$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_l09evt$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_q32uhv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_4l7qrh$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_j4vz15$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_w9sc9v$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_txsb7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_g04iob$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEach_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_kxoc7t$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
    }))))));
    phiVars(array(array('forEachIndexed', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_arhcu7$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_1b870r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_2042pt$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_71hk2v$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_xp2l85$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_fd0uwv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_fchhez$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_jzv3dz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_u1r9l7$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('item', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
    }))))));
    phiVars(array(array('maxBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_99hh6x$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_jirwv8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_p0tdr4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_30vlmi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_hom4ws$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_ksd00w$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_fvpt30$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_xt360o$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('maxBy_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_epurks$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('maxElem'))))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('maxElem')));
    }))))));
    phiVars(array(array('minBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_99hh6x$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_jirwv8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_p0tdr4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_30vlmi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_hom4ws$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_ksd00w$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_fvpt30$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_xt360o$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('minBy_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_epurks$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('minElem'))))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('minElem')));
    }))))));
    phiVars(array(array('none_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('none_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('reduce', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_5bz9yp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_ua0gmo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_5x6csy$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_vuuzha$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_8z4g8g$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_m57mj6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_5rthjk$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_if3lfm$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduce_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_724a40$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('reduceIndexed', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_f61gul$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_y1rlg4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_ctdw5m$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_y7bnwe$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_54m7jg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_mzocqy$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_i4uovg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_fqu0be$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), 0.0))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiNameRef('accumulator'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_n25zu4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), 0.0))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'))))))))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('reduceRight', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_m9c08d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_ua0gmo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_5x6csy$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_vuuzha$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_8z4g8g$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_m57mj6$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_5rthjk$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_if3lfm$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_724a40$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator')))))))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('reduceRightIndexed', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_cf9tch$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_m7z4lg$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_y1rlg4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_964n91$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_ctdw5m$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_i2lc79$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_y7bnwe$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_tmsbgo$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_54m7jg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_se6h4x$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_mzocqy$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_rjqryz$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_i4uovg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_bvy38s$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_fqu0be$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_l1lu5t$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_n25zu4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_355ntz$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty array can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator')))))))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('sumBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_9qh8u2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_s616nk$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_sccsus$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_n2f0qi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_8jxuvk$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_lv6o8c$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_a4xh9s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_d84lg4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumBy_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_izzzcg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_vyz3zq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_kkr9hw$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_u2ap1s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_suc1jq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_rqe08c$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_8jdnkg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_vuwwjw$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_1f8lq0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_ik7e6s$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('partition', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_sfx99b$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_c3i447$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_247xw3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_il4kyb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_i1oc7r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_u4nq1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_3vq27r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_xffwn9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_3ji0pj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      for (new PhiBinaryOperation('=', new PhiNameRef('tmp$'), 0.0); new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('$receiver'), 'length')); new PhiPrefixOperation('++', new PhiNameRef('tmp$'))) {
        phiVars(array(array('element', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('tmp$')))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('zip_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_t5fk8e$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_c731w7$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_ochmv5$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_fvmov$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_g0832p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_cpiwht$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_p5twxn$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_6fiayp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_xwrum3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_aoaibi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_2fxjb5$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_ey57vj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_24', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_582drv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_26', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_5584fz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_28', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_dszx9d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_30', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_p8lavz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_32', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_e6btvt$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_34', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_imz1rz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))))), new PhiNameRef('element'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_36', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_fvjg0r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_38', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_u8n9wb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_40', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_2l2rw1$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_42', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_3bxm8r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_44', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_h04u5h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_46', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_t5hjvf$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_48', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_l9qpsl$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')), new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_50', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_rvvoh1$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('size', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('i')))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiNameRef('other'), new PhiNameRef('i')))))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('asList_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asList_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('asList_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asList_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('asList_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asList_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('asList_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asList_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('asList_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asList_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('asList_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asList_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('asList_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asList_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'asList_us0mfu$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$asList'), 'length');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$asList'), 'length'), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('contains_7'), array(new PhiDot(new PhiNameRef('this'), 'this$asList'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'this$asList'), new PhiNameRef('index'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), 'indexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('indexOf_7'), array(new PhiDot(new PhiNameRef('this'), 'this$asList'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral'), 'prototype'), 'lastIndexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('lastIndexOf_8'), array(new PhiDot(new PhiNameRef('this'), 'this$asList'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('asList$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RandomAccess'), new PhiNameRef('AbstractList'))))))));
    phiVars(array(array('copyOf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_us0mfu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_964n91$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_i2lc79$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_tmsbgo$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_se6h4x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_rjqryz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_bvy38s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_l1lu5t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOf_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOf_355ntz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array());
    }))))));
    phiVars(array(array('copyOfRange', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_5f8l3u$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_ietg8x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_qxueih$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_6pxxqk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_2n8m0j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_kh1mav$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_yfnal4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_ke2ov9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('copyOfRange_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.copyOfRange_wlitf7$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array(new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    }))))));
    phiVars(array(array('plus_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_mjy6jw$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'concat'), array(new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_jlnu8a$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_s7ir3o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_c03ot6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_uxdaoa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_omthmc$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_taaqy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_yax8s4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('plus_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_o2f9me$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiArrayLiteral(array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))))));
    }))))));
    phiVars(array(array('plus', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_vu4gah$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'concat'), array(new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_ndt7zj$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_907jet$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_mgkctd$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_tq12cv$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_tec1tx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_pmvpm9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_qsfoml$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plus_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plus_wxyzfz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('plusElement', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusElement_mjy6jw$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'concat'), array(new PhiArrayLiteral(array(new PhiNameRef('element')))));
    }))))));
    phiVars(array(array('sort_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_ra7spe$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('sort_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_hcmc5n$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('sort_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_6749zv$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('sort_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_vuuzha$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('sort_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_y2xy0v$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('sort_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_rx1g57$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('sort_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_qgorx0$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('sort_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sort_vuimop$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sort'), array(new PhiNameRef('comparison'))));
    }))))));
    phiVars(array(array('component1_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_2p1efm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(0.0));
    }))))));
    phiVars(array(array('component2_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_2p1efm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(1.0));
    }))))));
    phiVars(array(array('component3_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component3_2p1efm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(2.0));
    }))))));
    phiVars(array(array('component4_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component4_2p1efm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(3.0));
    }))))));
    phiVars(array(array('component5_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component5_2p1efm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(4.0));
    }))))));
    phiVars(array(array('elementAt_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAt_yzln2o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index')));
    }))))));
    phiVars(array(array('elementAtOrElse_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrElse_q7vxk6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_55thoc$'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrNull_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.elementAtOrNull_yzln2o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrNull_yzln2o$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')));
    }))))));
    phiVars(array(array('find_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.find_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_6jwkkr$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_6jwkkr$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_6jwkkr$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_6jwkkr_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_6jwkkr$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_6jwkkr_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_6jwkkr$result');
    }))))));
    phiVars(array(array('findLast_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('last_25', null)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiNameRef('element')));
        }
      }
      return new PhiNameRef('last_25');
    }))))));
    phiVars(array(array('findLast_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.findLast_dmm9ex$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_dmm9ex$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_dmm9ex$break'));
        {
          phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_dmm9ex$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_dmm9ex_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_dmm9ex$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_dmm9ex_usd_break:'));
      }
      return new PhiNameRef('lastOrNull_dmm9ex$result');
    }))))));
    phiVars(array(array('first_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.first_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Collection contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('firstOrNull_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.firstOrNull_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('getOrElse_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_q7vxk6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'get_lastIndex_55thoc$'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_za3lpa$'), array(new PhiNameRef('index'))), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('indexOfFirst_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item'))))) {
          return new PhiNameRef('index');
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfFirst_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfFirst_dmm9ex$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item'))))) {
          return new PhiNameRef('index');
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('lastIndex', new PhiPrefixOperation('-', 1.0))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastIndex'), new PhiNameRef('index')));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('lastIndex');
    }))))));
    phiVars(array(array('indexOfLast_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.indexOfLast_dmm9ex$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'nextIndex'), array());
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('last_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('last_25', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Collection contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('last_25')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('last_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.last_dmm9ex$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('List contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('lastOrNull_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('last_25', null)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiNameRef('element')));
        }
      }
      return new PhiNameRef('last_25');
    }))))));
    phiVars(array(array('lastOrNull_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.lastOrNull_dmm9ex$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('single_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.single_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Collection contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Collection contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('singleOrNull_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.singleOrNull_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('dropLastWhile_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropLastWhile_dmm9ex$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array())))) {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array())))))) {
            return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'take_ba2ldo$'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'nextIndex'), array()), 1.0), 0.0)));
          }
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('dropWhile_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.dropWhile_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('yielding', false)));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiNameRef('yielding'))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('yielding'), true));
          }
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('filter_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexed_p81qtj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexedTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIndexedTo_i2yxnm$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIsInstance_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIsInstance_6nw4pr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isR'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIsInstanceTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterIsInstanceTo_v8wdbu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isR'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_cslyey$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_cslyey$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('takeLastWhile_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeLastWhile_dmm9ex$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
      }
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array())))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()));
          phiVars(array(array('expectedSize', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'size'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'nextIndex'), array())), 0.0))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('expectedSize'), 0.0))) {
            return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
          }
          phiVars(array(array('$receiver_0', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('expectedSize'))))));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
          }
          return new PhiNameRef('$receiver_0');
        }
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'toList_7wnvza$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeWhile_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.takeWhile_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item')))))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('item'))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('sortBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortBy_yag3x6$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortWith_nqfjgj$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector'))))));
      }
    }))))));
    phiVars(array(array('sortByDescending_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortByDescending_yag3x6$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'size'), 1.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortWith_nqfjgj$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector'))))));
      }
    }))))));
    phiVars(array(array('sortedBy_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedBy_nd8ern$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_eknfly$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sortedByDescending_nd8ern$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'sortedWith_eknfly$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('associate_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associate_wbhhmp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_dvm6j0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateBy_6kgnfi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_q9k9lv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateByTo_5s21dh$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.associateTo_tp6zhs$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_en2w03$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_farraf$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_dvm6j0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupBy_6kgnfi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_2nn80$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupByTo_spnc2q$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_0'), 'prototype'), 'sourceIterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$groupingBy'), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_0'), 'prototype'), 'keyOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Grouping'))))))));
    phiVars(array(array('groupingBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.groupingBy_dvm6j0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'groupingBy$f_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('keySelector')));
    }))))));
    phiVars(array(array('map_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_dvm6j0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexed_yigmvk$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedNotNull_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedNotNull_aw5p9p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_1', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedNotNullTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedNotNullTo_s7kjlj$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_1', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapIndexedTo_qixlg$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNull_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapNotNull_3fhhkf$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNullTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapNotNullTo_p5b1il$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_h3il0w$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('distinctBy_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.distinctBy_dvm6j0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('set_19', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('set_19'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('e'))));
        }
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('all_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('any', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('count_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_4c7yge$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'size');
    }))))));
    phiVars(array(array('count_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('fold_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_l1hrho$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldIndexed_a080b4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRight_flo3fi$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array())))) {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()), new PhiNameRef('accumulator')))));
        }
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldRightIndexed_nj6056$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array())))) {
        phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
        while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
          phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previousIndex'), array()))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()), new PhiNameRef('accumulator')))));
        }
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('forEach_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_i7id1t$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEachIndexed_g8ms6t$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('maxBy_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_nd8ern$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('minBy_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_nd8ern$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('none_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('onEach', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.onEach_w8vc4v$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('reduce_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_lrrcxv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty collection can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceIndexed_8txfjb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty collection can't be reduced."))));
      }
      phiVars(array(array('index', 1.0)));
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')), new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRight_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRight_y5l5zf$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty list can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceRightIndexed_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceRightIndexed_1a67zb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty list can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previousIndex'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('sumBy_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumBy_1nckxa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.sumByDouble_k0tf9a$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('minusElement', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusElement_2ws7j4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'minus_2ws7j4$'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))))));
    phiVars(array(array('partition_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.partition_6jwkkr$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('plusElement_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusElement_2ws7j4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'plus_2ws7j4$'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))))));
    phiVars(array(array('plusElement_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusElement_qloxvw$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'plus_qloxvw$'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))))));
    phiVars(array(array('zip_52', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_curaua$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('arraySize', new PhiDot(new PhiNameRef('other'), 'length'))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)), new PhiNameRef('arraySize'))))))));
      phiVars(array(array('i', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiNameRef('i'), new PhiNameRef('arraySize')))) {
          break;
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'), new PhiBrackets(new PhiNameRef('other'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('i')), new PhiBinaryOperation('=', new PhiNameRef('i'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0'))))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('zip_54', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.zip_3h9v02$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array()))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('other'), 10.0)))))))));
      while (new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'hasNext'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'hasNext'), array()))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'next'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'next'), array()))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('asIterable_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asIterable_7wnvza$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('maxOf_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_5gdoe6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiNameRef('b')))));
    }))))));
    phiVars(array(array('maxOf_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_8bdmd0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiNameRef('b')))));
    }))))));
    phiVars(array(array('maxOf_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('maxOf_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_3pjtqy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'js'), 'max_bug313$'), array(new PhiNameRef('Math'), new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('maxOf_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_dleff0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('maxOf_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_lu1900$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('maxOf_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_d9r5kp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('b'), new PhiNameRef('c')))))));
    }))))));
    phiVars(array(array('maxOf_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_i3nxhr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('b'), new PhiNameRef('c')))))));
    }))))));
    phiVars(array(array('maxOf_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_qt1dr2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('maxOf_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_b9bd0d$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'js'), 'max_bug313$'), array(new PhiNameRef('Math'), new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'js'), 'max_bug313$'), array(new PhiNameRef('Math'), new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('maxOf_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_y2kzbl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('maxOf_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.maxOf_yvo9jy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'max'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('minOf_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_5gdoe6$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiNameRef('b')))));
    }))))));
    phiVars(array(array('minOf_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_8bdmd0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiNameRef('b')))));
    }))))));
    phiVars(array(array('minOf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('minOf_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_3pjtqy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'js'), 'min_bug313$'), array(new PhiNameRef('Math'), new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('minOf_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_dleff0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('minOf_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_lu1900$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    }))))));
    phiVars(array(array('minOf_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_d9r5kp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('b'), new PhiNameRef('c')))))));
    }))))));
    phiVars(array(array('minOf_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_i3nxhr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('b'), new PhiNameRef('c')))))));
    }))))));
    phiVars(array(array('minOf_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_qt1dr2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('minOf_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_b9bd0d$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'js'), 'min_bug313$'), array(new PhiNameRef('Math'), new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'js'), 'min_bug313$'), array(new PhiNameRef('Math'), new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('minOf_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_y2kzbl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('minOf_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.minOf_yvo9jy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('a'), new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiNameRef('b'), new PhiNameRef('c')))));
    }))))));
    phiVars(array(array('flatMap_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMap_2r9935$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.flatMapTo_qdz8ho$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('map_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.map_8169ik$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNull_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapNotNull_9b72hb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNullTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapNotNullTo_ir6y9a$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapTo_qxe4nl$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('all_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.all_9peqz9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('any_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.any_9peqz9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('count_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_abgq59$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'size');
    }))))));
    phiVars(array(array('count_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.count_9peqz9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('forEach_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_62casv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('maxBy_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxBy_44nibo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiDot(new PhiNameRef('$receiver'), 'entries'))));
      phiVars(array(array('maxBy_nd8ern$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label maxBy_nd8ern$break'));
        {
          phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'iterator'), array()))));
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxBy_nd8ern$result'), null));
            phiExpressionStatement(new PhiNameRef('goto maxBy_nd8ern_usd_break'));
          }
          phiVars(array(array('maxElem', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
          phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
            phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
            phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
            if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxBy_nd8ern$result'), new PhiNameRef('maxElem')));
        }
        phiExpressionStatement(new PhiNameRef('maxBy_nd8ern_usd_break:'));
      }
      return new PhiNameRef('maxBy_nd8ern$result');
    }))))));
    phiVars(array(array('maxWith_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.maxWith_e3q53g$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'maxWith_eknfly$'), array(new PhiDot(new PhiNameRef('$receiver'), 'entries'), new PhiNameRef('comparator')));
    }))))));
    phiVars(array(array('minBy_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minBy_44nibo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver_0', new PhiDot(new PhiNameRef('$receiver'), 'entries'))));
      phiVars(array(array('minBy_nd8ern$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label minBy_nd8ern$break'));
        {
          phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'iterator'), array()))));
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minBy_nd8ern$result'), null));
            phiExpressionStatement(new PhiNameRef('goto minBy_nd8ern_usd_break'));
          }
          phiVars(array(array('minElem', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
          phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
            phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
            phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
            if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minBy_nd8ern$result'), new PhiNameRef('minElem')));
        }
        phiExpressionStatement(new PhiNameRef('minBy_nd8ern_usd_break:'));
      }
      return new PhiNameRef('minBy_nd8ern$result');
    }))))));
    phiVars(array(array('none_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.none_9peqz9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('onEach_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.onEach_bdwhnn$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('asIterable_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.asIterable_abgq59$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'entries');
    }))))));
    phiVars(array(array('find_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.find_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_euau3h$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_euau3h$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_euau3h$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_euau3h_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_euau3h$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_euau3h_usd_break:'));
      }
      return new PhiNameRef('firstOrNull_euau3h$result');
    }))))));
    phiVars(array(array('findLast_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.findLast_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('last_25', null)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiNameRef('element')));
        }
      }
      return new PhiNameRef('last_25');
    }))))));
    phiVars(array(array('first_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.first_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Sequence contains no element matching the predicate.'))));
    }))))));
    phiVars(array(array('firstOrNull_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.firstOrNull_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return new PhiNameRef('element');
        }
      }
      return null;
    }))))));
    phiVars(array(array('indexOfFirst_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.indexOfFirst_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item'))))) {
          return new PhiNameRef('index');
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.indexOfLast_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('lastIndex', new PhiPrefixOperation('-', 1.0))));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastIndex'), new PhiNameRef('index')));
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('lastIndex');
    }))))));
    phiVars(array(array('last_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.last_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('last_25', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Sequence contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('last_25')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('lastOrNull_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.lastOrNull_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('last_25', null)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('last_25'), new PhiNameRef('element')));
        }
      }
      return new PhiNameRef('last_25');
    }))))));
    phiVars(array(array('single_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.single_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Sequence contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Sequence contains no element matching the predicate.'))));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('single_24')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('singleOrNull_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.singleOrNull_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiNameRef('element')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiNameRef('single_24');
    }))))));
    phiVars(array(array('filterIndexedTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.filterIndexedTo_t68vbo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('item'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIsInstance_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.filterIsInstance_1ivc31$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'filter_euau3h$'), array(new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'filterIsInstance$f'), array(new PhiNameRef('filterIsInstance$R_0'), new PhiNameRef('isR')))))), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('filterIsInstanceTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.filterIsInstanceTo_e33yd4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('isR'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.filterNotTo_zemxx4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.filterTo_zemxx4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('sorted$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('sortedList', new PhiInvocation(new PhiNameRef('toMutableList_10'), array(new PhiDot(new PhiNameRef('this'), 'this$sorted'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sort'), array(new PhiNameRef('sortedList'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('sortedList'), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('sorted$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiVars(array(array('sortedBy_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.sortedBy_aht3pn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'sortedWith_vjgqpk$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiVars(array(array('sortedByDescending_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.sortedByDescending_aht3pn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'sortedWith_vjgqpk$'), array(new PhiNameRef('$receiver'), new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')))));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('sortedWith$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('sortedList', new PhiInvocation(new PhiNameRef('toMutableList_10'), array(new PhiDot(new PhiNameRef('this'), 'this$sortedWith'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('sortWith'), array(new PhiNameRef('sortedList'), new PhiDot(new PhiNameRef('this'), 'closure$comparator'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('sortedList'), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('sortedWith$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiVars(array(array('associate_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.associate_ohgugh$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.associateBy_z5avom$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.associateBy_rpj48c$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.associateByTo_pdrkj5$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.associateByTo_vqogar$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.associateTo_xiiici$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.flatMapTo_skhdnd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_tj7pfx$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.groupBy_z5avom$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.groupBy_rpj48c$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.groupByTo_m5ds0u$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiNameRef('element'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.groupByTo_r8laog$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiNameRef('element'))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_1'), 'prototype'), 'sourceIterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$groupingBy'), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_1'), 'prototype'), 'keyOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_1'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Grouping'))))))));
    phiVars(array(array('groupingBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.groupingBy_z5avom$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'groupingBy$f'), array(new PhiNameRef('$receiver'), new PhiNameRef('keySelector')));
    }))))));
    phiVars(array(array('mapIndexedNotNullTo_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.mapIndexedNotNullTo_eyjglh$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_1', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.mapIndexedTo_49r4ke$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNullTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.mapNotNullTo_u5l3of$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element')))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.mapTo_kntv26$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('item'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('all_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.all_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('any_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.any_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('count_23', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.count_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('fold_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.fold_azbry2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.foldIndexed_wxmp26$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiNameRef('element')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('forEach_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.forEach_o41pun$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.forEachIndexed_iyis71$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('item'))));
      }
    }))))));
    phiVars(array(array('maxBy_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.maxBy_aht3pn$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('maxElem'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('maxElem');
    }))))));
    phiVars(array(array('minBy_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.minBy_aht3pn$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('minElem'))))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('e'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiNameRef('e')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiNameRef('minElem');
    }))))));
    phiVars(array(array('none_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.none_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('reduce_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.reduce_linb1r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty sequence can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('reduceIndexed_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.reduceIndexed_8denzp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array()))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty sequence can't be reduced."))));
      }
      phiVars(array(array('index', 1.0)));
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array()))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')), new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'next'), array())))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('sumBy_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.sumBy_gvemys$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.sumByDouble_b4hqx8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('element')))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('minus$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('removed', new PhiObjectLiteral(array(array(new PhiNameRef('v'), false))))));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('filter_9'), array(new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiInvocation(new PhiNameRef('minus$ObjectLiteral$iterator$lambda'), array(new PhiNameRef('removed'), new PhiDot(new PhiNameRef('this'), 'closure$element'))))), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('minus$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('minus$ObjectLiteral_0'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('other', new PhiInvocation(new PhiNameRef('toHashSet'), array(new PhiDot(new PhiNameRef('this'), 'closure$elements'))))));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('filterNot_9'), array(new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiInvocation(new PhiNameRef('minus$ObjectLiteral$iterator$lambda_0'), array(new PhiNameRef('other'))))), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('minus$ObjectLiteral_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('minus$ObjectLiteral_1'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('other', new PhiInvocation(new PhiNameRef('convertToSetForSetOperation'), array(new PhiDot(new PhiNameRef('this'), 'closure$elements'))))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$minus'), 'iterator'), array());
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('filterNot_9'), array(new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiInvocation(new PhiNameRef('minus$ObjectLiteral$iterator$lambda_1'), array(new PhiNameRef('other'))))), 'iterator'), array());
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('minus$ObjectLiteral_1'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('minus$ObjectLiteral_2'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('other', new PhiInvocation(new PhiNameRef('toHashSet_9'), array(new PhiDot(new PhiNameRef('this'), 'closure$elements'))))));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()))) {
        return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$minus'), 'iterator'), array());
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('filterNot_9'), array(new PhiDot(new PhiNameRef('this'), 'this$minus'), new PhiInvocation(new PhiNameRef('minus$ObjectLiteral$iterator$lambda_2'), array(new PhiNameRef('other'))))), 'iterator'), array());
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('minus$ObjectLiteral_2'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiVars(array(array('minusElement_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.minusElement_9h40j2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'minus_9h40j2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))))));
    phiVars(array(array('partition_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.partition_euau3h$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('second', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'add_11rb$'), array(new PhiNameRef('element'))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('plusElement_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.plusElement_9h40j2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'plus_9h40j2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))))));
    phiVars(array(array('asSequence_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.asSequence_veqyi0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('minusElement_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusElement_xfiyik$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'minus_xfiyik$'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))))));
    phiVars(array(array('plusElement_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusElement_xfiyik$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'plus_xfiyik$'), array(new PhiNameRef('$receiver'), new PhiNameRef('element')));
    }))))));
    phiVars(array(array('elementAt_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.elementAt_94bcnn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))));
    }))))));
    phiVars(array(array('elementAtOrElse_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.elementAtOrElse_qdauc8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('elementAtOrNull_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.elementAtOrNull_94bcnn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'getOrNull_94bcnn$'), array(new PhiNameRef('$receiver'), new PhiNameRef('index')))));
    }))))));
    phiVars(array(array('find_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.find_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('firstOrNull_2pivbd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull_2pivbd$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_2pivbd$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_2pivbd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull_2pivbd$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_2pivbd_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('firstOrNull_2pivbd$result')));
    }))))));
    phiVars(array(array('findLast_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.findLast_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('lastOrNull_2pivbd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label lastOrNull_2pivbd$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_2pivbd$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
              phiExpressionStatement(new PhiNameRef('goto lastOrNull_2pivbd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastOrNull_2pivbd$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('lastOrNull_2pivbd_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('lastOrNull_2pivbd$result')));
    }))))));
    phiVars(array(array('first_23', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.first_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Char sequence contains no character matching the predicate.'))));
    }))))));
    phiVars(array(array('firstOrNull_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.firstOrNull_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      return null;
    }))))));
    phiVars(array(array('getOrElse_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.getOrElse_qdauc8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))))), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))), new PhiInvocation(new PhiNameRef('defaultValue'), array(new PhiNameRef('index'))));
    }))))));
    phiVars(array(array('indexOfFirst_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.indexOfFirst_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('indexOfLast_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.indexOfLast_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))))) {
          return new PhiNameRef('index');
        }
      }
      return new PhiPrefixOperation('-', 1.0);
    }))))));
    phiVars(array(array('last_24', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.last_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Char sequence contains no character matching the predicate.'))));
    }))))));
    phiVars(array(array('lastOrNull_23', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.lastOrNull_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')));
        }
      }
      return null;
    }))))));
    phiVars(array(array('single_23', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.single_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiStringLiteral('Char sequence contains more than one matching element.'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NoSuchElementException'), array(new PhiStringLiteral('Char sequence contains no character matching the predicate.'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isChar'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('single_24')))))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
    }))))));
    phiVars(array(array('singleOrNull_23', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.singleOrNull_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('single_24', null)));
      phiVars(array(array('found', false)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          if (phiEvaluateToBoolean(new PhiNameRef('found'))) {
            return null;
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('single_24'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('found'), true));
        }
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('found')))) {
        return null;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('single_24')));
    }))))));
    phiVars(array(array('dropLastWhile_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.dropLastWhile_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('dropLastWhile_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.dropLastWhile_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('dropWhile_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.dropWhile_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('index'), new PhiDot(new PhiNameRef('$receiver'), 'length')));
        }
      }
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('dropWhile_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.dropWhile_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiNameRef('index')));
        }
      }
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('filter_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filter_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filter_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'toString'), array());
    }))))));
    phiVars(array(array('filterIndexed_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filterIndexed_3xan9v$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('index_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterIndexed_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filterIndexed_4cgdv1$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('index_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'toString'), array());
    }))))));
    phiVars(array(array('filterIndexedTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filterIndexedTo_2omorh$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('index_0', new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))));
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('index_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filterNot_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filterNot_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'toString'), array());
    }))))));
    phiVars(array(array('filterNotTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filterNotTo_2vcf41$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.filterTo_2vcf41$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('slice_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.slice_djwhei$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'slice_ymrxhc$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('indices'))), 'toString'), array());
    }))))));
    phiVars(array(array('takeLastWhile_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.takeLastWhile_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0), new PhiDot(new PhiNameRef('$receiver'), 'length')));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
    }))))));
    phiVars(array(array('takeLastWhile_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.takeLastWhile_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'downTo_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))), 0.0)), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('takeWhile_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.takeWhile_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiNameRef('index')));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiDot(new PhiNameRef('$receiver'), 'length')));
    }))))));
    phiVars(array(array('takeWhile_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.takeWhile_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, new PhiNameRef('index')));
        }
      }
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('reversed_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.reversed_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'reversed_gw00vp$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))), 'toString'), array());
    }))))));
    phiVars(array(array('associate_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.associate_b3xl1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.associateBy_16h5q4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateBy_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.associateBy_m7aj6v$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('capacity', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'coerceAtLeast_dqglrj$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))), 16.0)))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiNameRef('capacity'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.associateByTo_lm6k0r$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateByTo_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.associateByTo_woixqq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))), new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('associateTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.associateTo_1pzh9q$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('pair', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMap_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.flatMap_83nucd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('flatMapTo_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.flatMapTo_kg2lzy$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('list', new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('destination'), new PhiNameRef('list'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.groupBy_16h5q4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupBy_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.groupBy_m7aj6v$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.groupByTo_mntg7c$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('groupByTo_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.groupByTo_dgnza9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiNameRef('keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
        phiVars(array(array('tmp$_0', )));
        phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
          phiVars(array(array('answer', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('answer')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('value')));
        }
        phiVars(array(array('list', new PhiNameRef('tmp$_0'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('valueTransform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_2'), 'prototype'), 'sourceIterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('iterator_2'), array(new PhiDot(new PhiNameRef('this'), 'this$groupingBy')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_2'), 'prototype'), 'keyOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$keySelector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('groupingBy$ObjectLiteral_2'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Grouping'))))))));
    phiVars(array(array('groupingBy_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.groupingBy_16h5q4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'groupingBy$f'), array(new PhiNameRef('$receiver'), new PhiNameRef('keySelector')));
    }))))));
    phiVars(array(array('map_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.map_16h5q4$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexed_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.mapIndexed_bnyqco$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'))))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedNotNull_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.mapIndexedNotNull_iqd6dn$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_1', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item')))))))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedNotNullTo_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.mapIndexedNotNullTo_cynlyo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_1', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item')))))))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_1'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapIndexedTo_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.mapIndexedTo_4f8103$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNull_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.mapNotNull_10i1d3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapNotNullTo_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.mapNotNullTo_jcwsr8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))), null))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiNameRef('tmp$_0'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapTo_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.mapTo_wrnknd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('all_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.all_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('any_24', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.any_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return true;
        }
      }
      return false;
    }))))));
    phiVars(array(array('count_24', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.count_gw00vp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('count_25', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.count_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('count_26', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('count_26'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('count_26'), 1.0), 0.0)));
        }
      }
      return new PhiNameRef('count_26');
    }))))));
    phiVars(array(array('fold_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.fold_riyz04$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldIndexed_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.foldIndexed_l9i73k$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRight_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.foldRight_xy5j5e$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')))))), new PhiNameRef('accumulator')))));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('foldRightIndexed_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.foldRightIndexed_bpin9y$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))))));
      phiVars(array(array('accumulator', new PhiNameRef('initial'))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))), new PhiNameRef('accumulator')))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiNameRef('accumulator');
    }))))));
    phiVars(array(array('forEach_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.forEach_57f55l$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
    }))))));
    phiVars(array(array('forEachIndexed_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.forEachIndexed_q254al$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('item'))))));
      }
    }))))));
    phiVars(array(array('maxBy_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.maxBy_lwkw4q$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('maxElem', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiVars(array(array('maxValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('maxElem'))))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('maxValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxElem'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('maxValue'), new PhiNameRef('v')));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('maxElem')));
    }))))));
    phiVars(array(array('minBy_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.minBy_lwkw4q$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        return null;
      }
      phiVars(array(array('minElem', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiVars(array(array('minValue', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('minElem'))))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('i', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))))));
        phiVars(array(array('v', new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('e'))))))));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('minValue'), new PhiNameRef('v'))), 0.0))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minElem'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('e')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('minValue'), new PhiNameRef('v')));
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('minElem')));
    }))))));
    phiVars(array(array('none_24', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.none_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          return false;
        }
      }
      return true;
    }))))));
    phiVars(array(array('onEach_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.onEach_jdhw1f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('reduce_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.reduce_bc19pa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty char sequence can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('reduceIndexed_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.reduceIndexed_8uyn22$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty char sequence can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(0.0)))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiVars(array(array('index', 1.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('reduceRight_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.reduceRight_bc19pa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty char sequence can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')))))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$_0'), 1.0), 0.0))), new PhiNameRef('tmp$_0')))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator')))))))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('reduceRightIndexed_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.reduceRightIndexed_8uyn22$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_lastIndex_gw00vp$'), array(new PhiNameRef('$receiver'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'UnsupportedOperationException'), array(new PhiStringLiteral("Empty char sequence can't be reduced."))));
      }
      phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('index')), new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')))))))));
      while (new PhiBinaryOperation('>=', new PhiNameRef('index'), 0.0)) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('accumulator'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('index'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('accumulator')))))))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('accumulator')));
    }))))));
    phiVars(array(array('sumBy_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.sumBy_kg4n8i$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sum_23'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))), 0.0)));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('sumByDouble_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.sumByDouble_4bpanu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('sum_23', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('+=', new PhiNameRef('sum_23'), new PhiInvocation(new PhiNameRef('selector'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element')))))));
      }
      return new PhiNameRef('sum_23');
    }))))));
    phiVars(array(array('partition_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.partition_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('second', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiNameRef('first_24'), new PhiNameRef('second')));
    }))))));
    phiVars(array(array('partition_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.partition_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('first_24', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiVars(array(array('second', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'iterator_gw00vp$'), array(new PhiNameRef('$receiver')))));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('element'))))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
         else {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'append_s8itvh$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('element'))))));
        }
      }
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiInvocation(new PhiDot(new PhiNameRef('first_24'), 'toString'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('second'), 'toString'), array())));
    }))))));
    phiVars(array(array('zip_58', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.zip_tac5w1$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('length', new PhiInvocation(new PhiDot(new PhiNameRef('Math'), 'min'), array(new PhiDot(new PhiNameRef('$receiver'), 'length'), new PhiDot(new PhiNameRef('other'), 'length'))))));
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('length'))))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('length'), 1.0), 0.0)));
      phiVars(array(array('i', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('i'), new PhiNameRef('tmp$')); new PhiNameRef('i')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('i'))))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'charCodeAt'), array(new PhiNameRef('i'))))))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('emptyArray', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.emptyArray_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiArrayLiteral(array());
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Serializable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Serializable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('toFloat', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toFloat_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'toDouble_pdl1vz$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('toFloatOrNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toFloatOrNull_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'toDoubleOrNull_pdl1vz$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('rangeTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.ranges.rangeTo_yni7l$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'rangeTo_38ydlf$'), array(new PhiNameRef('$receiver'), new PhiNameRef('that')));
    }))))));
    phiVars(array(array('RegexOption$IGNORE_CASE_instance', )));
    phiVars(array(array('RegexOption$MULTILINE_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RegexOption'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('RegexOption')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RegexOption'), 'values'), new PhiNameRef('RegexOption$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RegexOption'), 'valueOf_61zpoe$'), new PhiNameRef('RegexOption$valueOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MatchGroup'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MatchGroup')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchGroup'), 'prototype'), 'component1'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'value');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchGroup'), 'prototype'), 'copy_61zpoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('MatchGroup'), array(new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('value'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'value'), new PhiNameRef('value'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchGroup'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('MatchGroup(value='), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'value')))), new PhiStringLiteral(')'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchGroup'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'value')))), 0.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchGroup'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')), new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('other'), null), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('other')), new PhiStringLiteral('object')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('this'))), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('other')))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'value'), new PhiDot(new PhiNameRef('other'), 'value')))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'matches_6bul2c$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reset'), array(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'))));
      phiVars(array(array('match_0', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'), 'exec'), array(new PhiInvocation(new PhiDot(new PhiNameRef('input'), 'toString'), array()))))));
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiBinaryOperation('!=', new PhiNameRef('match_0'), null), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('match_0'), 'index'), 0.0)), new PhiBinaryOperation('===', new PhiDot(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'), 'lastIndex'), new PhiDot(new PhiNameRef('input'), 'length')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'containsMatchIn_6bul2c$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('reset'), array(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'), 'test'), array(new PhiInvocation(new PhiDot(new PhiNameRef('input'), 'toString'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'find_905azu$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      return new PhiInvocation(new PhiNameRef('findNext'), array(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'), new PhiInvocation(new PhiDot(new PhiNameRef('input'), 'toString'), array()), new PhiNameRef('startIndex')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'findAll_905azu$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('startIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), 0.0));
      }
      return new PhiInvocation(new PhiNameRef('generateSequence'), array(new PhiInvocation(new PhiNameRef('Regex$findAll$lambda'), array(new PhiNameRef('input'), new PhiNameRef('startIndex'), new PhiNameRef('this'))), new PhiNameRef('Regex$findAll$lambda_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'matchEntire_6bul2c$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiNameRef('startsWith'), array(new PhiDot(new PhiNameRef('this'), 'pattern'), 94.0)), new PhiInvocation(new PhiNameRef('endsWith'), array(new PhiDot(new PhiNameRef('this'), 'pattern'), 36.0))))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'find_905azu$'), array(new PhiNameRef('input')));
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('Regex'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('^'), new PhiInvocation(new PhiNameRef('trimEnd'), array(new PhiInvocation(new PhiNameRef('trimStart'), array(new PhiDot(new PhiNameRef('this'), 'pattern'), new PhiArrayLiteral(array(94.0)))), new PhiArrayLiteral(array(36.0))))), new PhiStringLiteral('$')), new PhiDot(new PhiNameRef('this'), 'options'))), 'find_905azu$'), array(new PhiNameRef('input')));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'replace_x2uqeu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('input'), 'toString'), array()), 'replace'), array(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'), new PhiNameRef('replacement')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'replace_20wsma$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.Regex.replace_20wsma$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('match_0', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'find_905azu$'), array(new PhiNameRef('input'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('match_0'), null))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('input'), 'toString'), array());
      }
      phiVars(array(array('lastStart', 0.0)));
      phiVars(array(array('length', new PhiDot(new PhiNameRef('input'), 'length'))));
      phiVars(array(array('sb', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder_init_za3lpa$'), array(new PhiNameRef('length'))))));
      while (new PhiBinaryOperation('&&', new PhiBinaryOperation('<', new PhiNameRef('lastStart'), new PhiNameRef('length')), new PhiBinaryOperation('!=', new PhiNameRef('match_0'), null))) {
        phiVars(array(array('foundMatch', new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('match_0'), null), new PhiNameRef('match_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('input'), new PhiNameRef('lastStart'), new PhiDot(new PhiDot(new PhiNameRef('foundMatch'), 'range'), 'start'))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('foundMatch'))))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastStart'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiDot(new PhiNameRef('foundMatch'), 'range'), 'endInclusive'), 1.0), 0.0)));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('match_0'), new PhiInvocation(new PhiDot(new PhiNameRef('foundMatch'), 'next'), array())));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('lastStart'), new PhiNameRef('length')))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('input'), new PhiNameRef('lastStart'), new PhiNameRef('length'))));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'toString'), array());
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'replaceFirst_x2uqeu$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('this'), 'options'))));
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'collectionSizeOrDefault_ba2ldo$'), array(new PhiNameRef('$receiver'), 10.0)))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'add_11rb$'), array(new PhiDot(new PhiNameRef('item'), 'value'))));
      }
      phiVars(array(array('nonGlobalOptions', new PhiInvocation(new PhiNameRef('joinToString_8'), array(new PhiNameRef('destination'), new PhiStringLiteral(''))))));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('input'), 'toString'), array()), 'replace'), array(new PhiNew(new PhiNameRef('RegExp'), array(new PhiDot(new PhiNameRef('this'), 'pattern'), new PhiNameRef('nonGlobalOptions'))), new PhiNameRef('replacement')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'split_905azu$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('>=', new PhiNameRef('limit'), 0.0)))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiStringLiteral('Limit must be non-negative, but was '), new PhiNameRef('limit')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiVars(array(array('closure$limit', new PhiNameRef('limit'))));
      phiVars(array(array('it', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'findAll_905azu$'), array(new PhiNameRef('input'))))));
      phiVars(array(array('matches_1', new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('closure$limit'), 0.0), new PhiNameRef('it'), new PhiInvocation(new PhiNameRef('take_9'), array(new PhiNameRef('it'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('closure$limit'), 1.0), 0.0)))))));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array()))));
      phiVars(array(array('lastStart', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('matches_1'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('match_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('input'), new PhiNameRef('lastStart'), new PhiDot(new PhiDot(new PhiNameRef('match_0'), 'range'), 'start'))), 'toString'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastStart'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiDot(new PhiNameRef('match_0'), 'range'), 'endInclusive'), 1.0), 0.0)));
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'add_11rb$'), array(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('input'), new PhiNameRef('lastStart'), new PhiDot(new PhiNameRef('input'), 'length'))), 'toString'), array()))));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'nativePattern_0'), 'toString'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex$Companion'), 'prototype'), 'fromLiteral_61zpoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('Regex_0'), array(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'escape_61zpoe$'), array(new PhiNameRef('literal')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex$Companion'), 'prototype'), 'escape_61zpoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('literal'), 'replace'), array(new PhiDot(new PhiNameRef('this'), 'patternEscape_0'), new PhiStringLiteral('\\$&')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Regex$Companion'), 'prototype'), 'escapeReplacement_61zpoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('literal'), 'replace'), array(new PhiDot(new PhiNameRef('this'), 'replacementEscape_0'), new PhiStringLiteral('$$$$')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Regex$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('Regex$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Regex'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Regex')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('findNext$ObjectLiteral'), 'prototype'), new PhiStringLiteral('range'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'range_kul0al$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('findNext$ObjectLiteral'), 'prototype'), new PhiStringLiteral('value'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'closure$match'), 0.0)), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('findNext$ObjectLiteral'), 'prototype'), new PhiStringLiteral('groups'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'groups_kul0al$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$match'), 'length');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'closure$match'), new PhiNameRef('index'))), null), new PhiNameRef('tmp$'), new PhiStringLiteral(''));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractList'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('findNext$ObjectLiteral'), 'prototype'), new PhiStringLiteral('groupValues'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'groupValues__0'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'groupValues__0'), new PhiNew(new PhiNameRef('findNext$ObjectLiteral$get_findNext$ObjectLiteral$groupValues$ObjectLiteral'), array(new PhiDot(new PhiNameRef('this'), 'closure$match')))));
      }
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'groupValues__0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('findNext$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('findNext'), array(new PhiDot(new PhiNameRef('this'), 'this$findNext'), new PhiDot(new PhiNameRef('this'), 'closure$input'), new PhiConditional(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$range'), 'isEmpty'), array()), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$range'), 'start'), 1.0), 0.0), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$range'), 'endInclusive'), 1.0), 0.0))));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$match'), 'length');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('map_10'), array(new PhiInvocation(new PhiNameRef('asSequence_8'), array(new PhiInvocation(new PhiNameRef('get_indices_9'), array(new PhiNameRef('this'))))), new PhiInvocation(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral$iterator$lambda'), array(new PhiNameRef('this'))))), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBrackets(new PhiDot(new PhiNameRef('this'), 'closure$match'), new PhiNameRef('index'))), null), new PhiNew(new PhiNameRef('MatchGroup'), array(new PhiNameRef('tmp$'))), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('findNext$ObjectLiteral$groups$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractCollection'), new PhiNameRef('MatchGroupCollection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('findNext$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MatchResult'))))))));
    phiVars(array(array('get', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.js.get_kmxd4d$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('asArray', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.js.asArray_tgewol$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ConstrainedOnceSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'sequenceRef_0')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('tmp$'), null))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalStateException'), array(new PhiStringLiteral('This sequence can be consumed only once.'))));
      }
      phiVars(array(array('sequence', new PhiNameRef('tmp$'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'sequenceRef_0'), null));
      return new PhiInvocation(new PhiDot(new PhiNameRef('sequence'), 'iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ConstrainedOnceSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ConstrainedOnceSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiVars(array(array('toUpperCase_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toUpperCase_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toUpperCase'), array());
    }))))));
    phiVars(array(array('toLowerCase_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toLowerCase_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toLowerCase'), array());
    }))))));
    phiVars(array(array('substring_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.substring_6ic1pp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiNameRef('startIndex')));
    }))))));
    phiVars(array(array('substring', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.substring_qgyqat$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiNameRef('startIndex'), new PhiNameRef('endIndex')));
    }))))));
    phiVars(array(array('concat', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.concat_rjktp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'concat'), array(new PhiNameRef('str')));
    }))))));
    phiVars(array(array('match', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.match_rjktp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'match'), array(new PhiNameRef('regex')));
    }))))));
    phiVars(array(array('get_size', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.get_size_gw00vp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'length');
    }))))));
    phiVars(array(array('matches', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.matches_rjktp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'match'), array(new PhiNameRef('regex'))))));
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('!=', new PhiNameRef('result'), null), new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('result'), 'length'), 0.0));
    }))))));
    phiVars(array(array('capitalize', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.capitalize_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, 1.0)), 'toUpperCase'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(1.0))), new PhiNameRef('$receiver'));
    }))))));
    phiVars(array(array('decapitalize', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.decapitalize_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0), new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(0.0, 1.0)), 'toLowerCase'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(1.0))), new PhiNameRef('$receiver'));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Appendable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Appendable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), new PhiStringLiteral('length'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'string_0'), 'length');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'charCodeAt'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'string_0'), 'charCodeAt'), array(new PhiNameRef('index')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'subSequence_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'string_0'), 'substring'), array(new PhiNameRef('start'), new PhiNameRef('end')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'append_s8itvh$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('+=', new PhiDot(new PhiNameRef('this'), 'string_0'), new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'unboxChar'), array(new PhiNameRef('c')))))));
      return new PhiNameRef('this');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'append_gw00v9$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('+=', new PhiDot(new PhiNameRef('this'), 'string_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('csq')))));
      return new PhiNameRef('this');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'append_ezbsdh$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('+=', new PhiDot(new PhiNameRef('this'), 'string_0'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('csq'))), 'substring'), array(new PhiNameRef('start'), new PhiNameRef('end')))));
      return new PhiNameRef('this');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'append_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('+=', new PhiDot(new PhiNameRef('this'), 'string_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('obj')))));
      return new PhiNameRef('this');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'reverse'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'string_0'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'string_0'), 'split'), array(new PhiStringLiteral(''))), 'reverse'), array()), 'join'), array(new PhiStringLiteral('')))));
      return new PhiNameRef('this');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('StringBuilder'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'string_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('StringBuilder'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('StringBuilder')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CharSequence'), new PhiNameRef('Appendable'))))))));
    phiVars(array(array('buttonset', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.buttonset_vwohdt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'buttonset'), array());
    }))))));
    phiVars(array(array('dialog', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.dialog_vwohdt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'dialog'), array());
    }))))));
    phiVars(array(array('dialog_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.dialog_pm4xy9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'dialog'), array(new PhiNameRef('params')));
    }))))));
    phiVars(array(array('dialog_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.dialog_zc05ld$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'dialog'), array(new PhiNameRef('mode'), new PhiNameRef('param')));
    }))))));
    phiVars(array(array('dialog_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.dialog_v89ba5$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'dialog'), array(new PhiNameRef('mode')));
    }))))));
    phiVars(array(array('dialog_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.dialog_pfp31$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'dialog'), array(new PhiNameRef('mode'), new PhiNameRef('param'), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('button', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.button_vwohdt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'button'), array());
    }))))));
    phiVars(array(array('accordion', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.accordion_vwohdt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'accordion'), array());
    }))))));
    phiVars(array(array('draggable', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.draggable_pm4xy9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'draggable'), array(new PhiNameRef('params')));
    }))))));
    phiVars(array(array('selectable', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.jquery.ui.selectable_vwohdt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'selectable'), array());
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EventListenerHandler'), 'prototype'), 'handleEvent'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'handler_0'), array(new PhiNameRef('e'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EventListenerHandler'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('EventListenerHandler('), new PhiDot(new PhiNameRef('this'), 'handler_0')), new PhiStringLiteral(')'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EventListenerHandler'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EventListenerHandler')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('asList$ObjectLiteral_0'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$asList'), 'length');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('asList$ObjectLiteral_0'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('this'))))), 'contains_mef7kx$'), array(new PhiNameRef('index'))))) {
        return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$asList'), 'item'), array(new PhiNameRef('index')))), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
      }
       else {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('index '), new PhiNameRef('index')), new PhiStringLiteral(' is not in range [0..')), new PhiInvocation(new PhiNameRef('get_lastIndex'), array(new PhiNameRef('this')))), new PhiStringLiteral(']')))));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('asList$ObjectLiteral_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractList'))))))));
    phiVars(array(array('WebGLContextAttributes', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.WebGLContextAttributes_2tn698$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('alpha'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('alpha'), true));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('depth'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('depth'), true));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('stencil'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('stencil'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('antialias'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('antialias'), true));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('premultipliedAlpha'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('premultipliedAlpha'), true));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('preserveDrawingBuffer'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('preserveDrawingBuffer'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('preferLowPowerToHighPerformance'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('preferLowPowerToHighPerformance'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('failIfMajorPerformanceCaveat'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('failIfMajorPerformanceCaveat'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('alpha')), new PhiNameRef('alpha')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('depth')), new PhiNameRef('depth')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('stencil')), new PhiNameRef('stencil')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('antialias')), new PhiNameRef('antialias')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('premultipliedAlpha')), new PhiNameRef('premultipliedAlpha')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('preserveDrawingBuffer')), new PhiNameRef('preserveDrawingBuffer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('preferLowPowerToHighPerformance')), new PhiNameRef('preferLowPowerToHighPerformance')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('failIfMajorPerformanceCaveat')), new PhiNameRef('failIfMajorPerformanceCaveat')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('WebGLContextEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.WebGLContextEventInit_cndsqx$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('statusMessage'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('statusMessage'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('statusMessage')), new PhiNameRef('statusMessage')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_xri1zq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_wq71gh$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_9zp3y9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_amemmi$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_2joiyx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_ttcilq$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_cwlqq1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_3szanw$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_vhpjqk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_vhgf5b$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_6ngfjl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_yyuw59$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_jzcbyy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_7aci94$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_vvlk2q$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_rpd3xf$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.get_yg2kxp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.khronos.webgl.set_ogqgs1$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.css.get_hzg8kz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.css.get_vcm0yf$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.css.get_yovegz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.css.get_nb2c3o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('UIEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.UIEventInit_b3va2d$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('FocusEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.FocusEventInit_4fuajv$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('relatedTarget'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('relatedTarget'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('relatedTarget')), new PhiNameRef('relatedTarget')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('MouseEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.MouseEventInit_w16xh5$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('screenX'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('screenX'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('screenY'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('screenY'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clientX'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clientX'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clientY'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clientY'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('button_0'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('button_0'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('buttons'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('buttons'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('relatedTarget'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('relatedTarget'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ctrlKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ctrlKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('shiftKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('shiftKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('altKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('altKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('metaKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('metaKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierAltGraph'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierAltGraph'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierCapsLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierCapsLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFn'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFn'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFnLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFnLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierHyper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierHyper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierNumLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierNumLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierScrollLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierScrollLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSuper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSuper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbol'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbol'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbolLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbolLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('screenX')), new PhiNameRef('screenX')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('screenY')), new PhiNameRef('screenY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clientX')), new PhiNameRef('clientX')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clientY')), new PhiNameRef('clientY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('button')), new PhiNameRef('button_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('buttons')), new PhiNameRef('buttons')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('relatedTarget')), new PhiNameRef('relatedTarget')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ctrlKey')), new PhiNameRef('ctrlKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('shiftKey')), new PhiNameRef('shiftKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('altKey')), new PhiNameRef('altKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('metaKey')), new PhiNameRef('metaKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierAltGraph')), new PhiNameRef('modifierAltGraph')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierCapsLock')), new PhiNameRef('modifierCapsLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFn')), new PhiNameRef('modifierFn')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFnLock')), new PhiNameRef('modifierFnLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierHyper')), new PhiNameRef('modifierHyper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierNumLock')), new PhiNameRef('modifierNumLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierScrollLock')), new PhiNameRef('modifierScrollLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSuper')), new PhiNameRef('modifierSuper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbol')), new PhiNameRef('modifierSymbol')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbolLock')), new PhiNameRef('modifierSymbolLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('EventModifierInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.EventModifierInit_d8w15x$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ctrlKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ctrlKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('shiftKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('shiftKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('altKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('altKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('metaKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('metaKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierAltGraph'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierAltGraph'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierCapsLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierCapsLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFn'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFn'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFnLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFnLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierHyper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierHyper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierNumLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierNumLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierScrollLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierScrollLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSuper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSuper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbol'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbol'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbolLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbolLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ctrlKey')), new PhiNameRef('ctrlKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('shiftKey')), new PhiNameRef('shiftKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('altKey')), new PhiNameRef('altKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('metaKey')), new PhiNameRef('metaKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierAltGraph')), new PhiNameRef('modifierAltGraph')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierCapsLock')), new PhiNameRef('modifierCapsLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFn')), new PhiNameRef('modifierFn')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFnLock')), new PhiNameRef('modifierFnLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierHyper')), new PhiNameRef('modifierHyper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierNumLock')), new PhiNameRef('modifierNumLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierScrollLock')), new PhiNameRef('modifierScrollLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSuper')), new PhiNameRef('modifierSuper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbol')), new PhiNameRef('modifierSymbol')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbolLock')), new PhiNameRef('modifierSymbolLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('WheelEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.WheelEventInit_jungk3$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('deltaX'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('deltaX'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('deltaY'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('deltaY'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('deltaZ'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('deltaZ'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('deltaMode'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('deltaMode'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('screenX'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('screenX'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('screenY'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('screenY'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clientX'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clientX'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clientY'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clientY'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('button_0'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('button_0'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('buttons'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('buttons'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('relatedTarget'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('relatedTarget'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ctrlKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ctrlKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('shiftKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('shiftKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('altKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('altKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('metaKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('metaKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierAltGraph'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierAltGraph'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierCapsLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierCapsLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFn'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFn'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFnLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFnLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierHyper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierHyper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierNumLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierNumLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierScrollLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierScrollLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSuper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSuper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbol'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbol'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbolLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbolLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('deltaX')), new PhiNameRef('deltaX')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('deltaY')), new PhiNameRef('deltaY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('deltaZ')), new PhiNameRef('deltaZ')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('deltaMode')), new PhiNameRef('deltaMode')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('screenX')), new PhiNameRef('screenX')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('screenY')), new PhiNameRef('screenY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clientX')), new PhiNameRef('clientX')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clientY')), new PhiNameRef('clientY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('button')), new PhiNameRef('button_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('buttons')), new PhiNameRef('buttons')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('relatedTarget')), new PhiNameRef('relatedTarget')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ctrlKey')), new PhiNameRef('ctrlKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('shiftKey')), new PhiNameRef('shiftKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('altKey')), new PhiNameRef('altKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('metaKey')), new PhiNameRef('metaKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierAltGraph')), new PhiNameRef('modifierAltGraph')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierCapsLock')), new PhiNameRef('modifierCapsLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFn')), new PhiNameRef('modifierFn')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFnLock')), new PhiNameRef('modifierFnLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierHyper')), new PhiNameRef('modifierHyper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierNumLock')), new PhiNameRef('modifierNumLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierScrollLock')), new PhiNameRef('modifierScrollLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSuper')), new PhiNameRef('modifierSuper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbol')), new PhiNameRef('modifierSymbol')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbolLock')), new PhiNameRef('modifierSymbolLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('InputEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.InputEventInit_zb3n3s$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('data'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('data'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('isComposing'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isComposing'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('data')), new PhiNameRef('data')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('isComposing')), new PhiNameRef('isComposing')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('KeyboardEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.KeyboardEventInit_f1dyzo$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('key'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('key'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('code'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('code'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('location'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('location'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('repeat_1'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('repeat_1'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('isComposing'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isComposing'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ctrlKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ctrlKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('shiftKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('shiftKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('altKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('altKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('metaKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('metaKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierAltGraph'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierAltGraph'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierCapsLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierCapsLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFn'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFn'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFnLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFnLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierHyper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierHyper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierNumLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierNumLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierScrollLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierScrollLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSuper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSuper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbol'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbol'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbolLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbolLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('key')), new PhiNameRef('key')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('code')), new PhiNameRef('code')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('location')), new PhiNameRef('location')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('repeat')), new PhiNameRef('repeat_1')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('isComposing')), new PhiNameRef('isComposing')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ctrlKey')), new PhiNameRef('ctrlKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('shiftKey')), new PhiNameRef('shiftKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('altKey')), new PhiNameRef('altKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('metaKey')), new PhiNameRef('metaKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierAltGraph')), new PhiNameRef('modifierAltGraph')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierCapsLock')), new PhiNameRef('modifierCapsLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFn')), new PhiNameRef('modifierFn')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFnLock')), new PhiNameRef('modifierFnLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierHyper')), new PhiNameRef('modifierHyper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierNumLock')), new PhiNameRef('modifierNumLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierScrollLock')), new PhiNameRef('modifierScrollLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSuper')), new PhiNameRef('modifierSuper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbol')), new PhiNameRef('modifierSymbol')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbolLock')), new PhiNameRef('modifierSymbolLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('CompositionEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.events.CompositionEventInit_d8ew9s$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('data'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('data'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('data')), new PhiNameRef('data')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_faw09z$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('get_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_ewayf0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('set_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.set_hw3ic1$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('option')));
    }))))));
    phiVars(array(array('get_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_82muyz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('set_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.set_itmgw7$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('get_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_x9t80x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_s80h6u$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_60td5e$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_19', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_5fk35t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('TrackEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.TrackEventInit_mfyf40$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('track'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('track'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('track')), new PhiNameRef('track')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_20', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_o5xz3$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_21', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_ws6i9t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('get_22', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_kaa3nr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.set_9jj6cz$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('option')));
    }))))));
    phiVars(array(array('RelatedEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.RelatedEventInit_j4rtn8$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('relatedTarget'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('relatedTarget'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('relatedTarget')), new PhiNameRef('relatedTarget')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('AssignedNodesOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.AssignedNodesOptions_1v8dbw$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('flatten_4'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('flatten_4'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('flatten')), new PhiNameRef('flatten_4')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('CanvasRenderingContext2DSettings', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.CanvasRenderingContext2DSettings_1v8dbw$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('alpha'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('alpha'), true));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('alpha')), new PhiNameRef('alpha')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('HitRegionOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.HitRegionOptions_6a0gjt$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('path'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('path'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('fillRule'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('fillRule'), new PhiStringLiteral('nonzero')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('id'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('id'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('parentID'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('parentID'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cursor'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cursor'), new PhiStringLiteral('inherit')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('control'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('control'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('label'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('label'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('role'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('role'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('path')), new PhiNameRef('path')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('fillRule')), new PhiNameRef('fillRule')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('id')), new PhiNameRef('id')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('parentID')), new PhiNameRef('parentID')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cursor')), new PhiNameRef('cursor')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('control')), new PhiNameRef('control')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('label')), new PhiNameRef('label')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('role')), new PhiNameRef('role')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ImageBitmapRenderingContextSettings', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ImageBitmapRenderingContextSettings_1v8dbw$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('alpha'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('alpha'), true));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('alpha')), new PhiNameRef('alpha')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ElementDefinitionOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ElementDefinitionOptions_pdl1vj$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('extends_0'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('extends_0'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('extends')), new PhiNameRef('extends_0')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_23', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_c2gw6m$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('DragEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.DragEventInit_rb6t3c$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('dataTransfer'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('dataTransfer'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('screenX'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('screenX'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('screenY'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('screenY'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clientX'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clientX'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clientY'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clientY'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('button_0'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('button_0'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('buttons'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('buttons'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('relatedTarget'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('relatedTarget'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ctrlKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ctrlKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('shiftKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('shiftKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('altKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('altKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('metaKey'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('metaKey'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierAltGraph'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierAltGraph'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierCapsLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierCapsLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFn'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFn'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierFnLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierFnLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierHyper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierHyper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierNumLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierNumLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierScrollLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierScrollLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSuper'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSuper'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbol'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbol'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('modifierSymbolLock'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('modifierSymbolLock'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('view'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('view'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('dataTransfer')), new PhiNameRef('dataTransfer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('screenX')), new PhiNameRef('screenX')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('screenY')), new PhiNameRef('screenY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clientX')), new PhiNameRef('clientX')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clientY')), new PhiNameRef('clientY')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('button')), new PhiNameRef('button_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('buttons')), new PhiNameRef('buttons')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('relatedTarget')), new PhiNameRef('relatedTarget')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ctrlKey')), new PhiNameRef('ctrlKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('shiftKey')), new PhiNameRef('shiftKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('altKey')), new PhiNameRef('altKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('metaKey')), new PhiNameRef('metaKey')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierAltGraph')), new PhiNameRef('modifierAltGraph')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierCapsLock')), new PhiNameRef('modifierCapsLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFn')), new PhiNameRef('modifierFn')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierFnLock')), new PhiNameRef('modifierFnLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierHyper')), new PhiNameRef('modifierHyper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierNumLock')), new PhiNameRef('modifierNumLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierScrollLock')), new PhiNameRef('modifierScrollLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSuper')), new PhiNameRef('modifierSuper')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbol')), new PhiNameRef('modifierSymbol')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('modifierSymbolLock')), new PhiNameRef('modifierSymbolLock')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('view')), new PhiNameRef('view')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('PopStateEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.PopStateEventInit_m0in9k$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('state'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('state'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('state')), new PhiNameRef('state')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('HashChangeEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.HashChangeEventInit_pex3e4$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('oldURL'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('oldURL'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('newURL'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('newURL'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('oldURL')), new PhiNameRef('oldURL')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('newURL')), new PhiNameRef('newURL')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('PageTransitionEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.PageTransitionEventInit_bx6eq4$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('persisted'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('persisted'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('persisted')), new PhiNameRef('persisted')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ErrorEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ErrorEventInit_k9ji8a$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('message'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('message'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('filename'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('filename'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lineno'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lineno'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('colno'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('colno'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('error_0'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('error_0'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('message')), new PhiNameRef('message')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('filename')), new PhiNameRef('filename')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('lineno')), new PhiNameRef('lineno')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('colno')), new PhiNameRef('colno')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('error')), new PhiNameRef('error_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('PromiseRejectionEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.PromiseRejectionEventInit_jhmgqd$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('reason'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reason'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('promise')), new PhiNameRef('promise')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('reason')), new PhiNameRef('reason')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_24', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_l671a0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_25', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_ldwsk8$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('get_26', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_iatcyr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_27', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_usmy71$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('get_28', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_t3yadb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_29', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_bempxb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('ImageBitmapOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ImageBitmapOptions_qp88pe$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('imageOrientation'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('imageOrientation'), new PhiStringLiteral('none')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('premultiplyAlpha'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('premultiplyAlpha'), new PhiStringLiteral('default')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('colorSpaceConversion'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('colorSpaceConversion'), new PhiStringLiteral('default')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('resizeWidth'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('resizeWidth'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('resizeHeight'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('resizeHeight'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('resizeQuality'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('resizeQuality'), new PhiStringLiteral('low')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('imageOrientation')), new PhiNameRef('imageOrientation')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('premultiplyAlpha')), new PhiNameRef('premultiplyAlpha')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('colorSpaceConversion')), new PhiNameRef('colorSpaceConversion')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('resizeWidth')), new PhiNameRef('resizeWidth')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('resizeHeight')), new PhiNameRef('resizeHeight')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('resizeQuality')), new PhiNameRef('resizeQuality')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('MessageEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.MessageEventInit_146zbu$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('data'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('data'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('origin'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('origin'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lastEventId'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastEventId'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('source'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('source'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ports'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ports'), new PhiArrayLiteral(array())));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('data')), new PhiNameRef('data')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('origin')), new PhiNameRef('origin')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('lastEventId')), new PhiNameRef('lastEventId')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('source')), new PhiNameRef('source')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ports')), new PhiNameRef('ports')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('EventSourceInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.EventSourceInit_1v8dbw$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('withCredentials'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('withCredentials'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('withCredentials')), new PhiNameRef('withCredentials')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('CloseEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.CloseEventInit_wdtuj7$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('wasClean'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('wasClean'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('code'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('code'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('reason'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('reason'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('wasClean')), new PhiNameRef('wasClean')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('code')), new PhiNameRef('code')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('reason')), new PhiNameRef('reason')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('WorkerOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.WorkerOptions_sllxcl$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('type'), new PhiStringLiteral('classic')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('credentials'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('credentials'), new PhiStringLiteral('omit')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('type')), new PhiNameRef('type')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('credentials')), new PhiNameRef('credentials')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_30', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_bsm031$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('key'));
    }))))));
    phiVars(array(array('set_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.set_9wlwlb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('key')), new PhiNameRef('value')));
    }))))));
    phiVars(array(array('StorageEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.StorageEventInit_asvzxz$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('key'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('key'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('oldValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('oldValue'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('newValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('newValue'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('url'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('url'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('storageArea'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('storageArea'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('key')), new PhiNameRef('key')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('oldValue')), new PhiNameRef('oldValue')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('newValue')), new PhiNameRef('newValue')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('url')), new PhiNameRef('url')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('storageArea')), new PhiNameRef('storageArea')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('EventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.EventInit_uic7jo$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('CustomEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.CustomEventInit_m0in9k$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('detail'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('detail'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('detail')), new PhiNameRef('detail')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('EventListenerOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.EventListenerOptions_1v8dbw$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('capture'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('capture'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('capture')), new PhiNameRef('capture')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('AddEventListenerOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.AddEventListenerOptions_uic7jo$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('passive'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('passive'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('once'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('once'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('capture'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('capture'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('passive')), new PhiNameRef('passive')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('once')), new PhiNameRef('once')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('capture')), new PhiNameRef('capture')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_31', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_axj990$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_32', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_l6emzv$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_33', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_kzcjh1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('name'));
    }))))));
    phiVars(array(array('MutationObserverInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.MutationObserverInit_c5um2n$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('childList'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('childList'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('attributes'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('attributes'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('characterData'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('characterData'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('subtree'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('subtree'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('attributeOldValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('attributeOldValue'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('characterDataOldValue'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('characterDataOldValue'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('attributeFilter'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('attributeFilter'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('childList')), new PhiNameRef('childList')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('attributes')), new PhiNameRef('attributes')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('characterData')), new PhiNameRef('characterData')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('subtree')), new PhiNameRef('subtree')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('attributeOldValue')), new PhiNameRef('attributeOldValue')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('characterDataOldValue')), new PhiNameRef('characterDataOldValue')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('attributeFilter')), new PhiNameRef('attributeFilter')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('GetRootNodeOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.GetRootNodeOptions_1v8dbw$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ElementCreationOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ElementCreationOptions_pdl1vj$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('is_'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('is_'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('is')), new PhiNameRef('is_')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ShadowRootInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ShadowRootInit_16lofx$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('mode')), new PhiNameRef('mode')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_34', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_rjm7cj$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('get_35', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_oszak3$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('qualifiedName'));
    }))))));
    phiVars(array(array('get_36', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_o72cm9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('DOMPointInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.DOMPointInit_rd1tgs$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('x'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('x'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('y'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('y'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('z'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('z'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('w'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('w'), 1.0));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('x')), new PhiNameRef('x')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('y')), new PhiNameRef('y')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('z')), new PhiNameRef('z')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('w')), new PhiNameRef('w')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('DOMRectInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.DOMRectInit_rd1tgs$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('x'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('x'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('y'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('y'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('width'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('width'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('height'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('height'), 0.0));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('x')), new PhiNameRef('x')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('y')), new PhiNameRef('y')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('width')), new PhiNameRef('width')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('height')), new PhiNameRef('height')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_37', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_p225ue$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('ScrollOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ScrollOptions_pa3cpp$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('behavior'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('behavior'), new PhiStringLiteral('auto')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('behavior')), new PhiNameRef('behavior')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ScrollToOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ScrollToOptions_5ufhvn$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('left'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('left'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('top'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('top'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('behavior'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('behavior'), new PhiStringLiteral('auto')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('left')), new PhiNameRef('left')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('top')), new PhiNameRef('top')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('behavior')), new PhiNameRef('behavior')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('MediaQueryListEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.MediaQueryListEventInit_vkedzz$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('media'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('media'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('matches_1'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('matches_1'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('media')), new PhiNameRef('media')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('matches')), new PhiNameRef('matches_1')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ScrollIntoViewOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ScrollIntoViewOptions_2qltkz$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('block'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('block'), new PhiStringLiteral('center')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('inline'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('inline'), new PhiStringLiteral('center')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('behavior'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('behavior'), new PhiStringLiteral('auto')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('block')), new PhiNameRef('block')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('inline')), new PhiNameRef('inline')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('behavior')), new PhiNameRef('behavior')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('BoxQuadOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.BoxQuadOptions_tnnyad$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('box'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('box'), new PhiStringLiteral('border')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('relativeTo'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('relativeTo'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('box')), new PhiNameRef('box')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('relativeTo')), new PhiNameRef('relativeTo')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ConvertCoordinateOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.ConvertCoordinateOptions_8oj3e4$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('fromBox'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('fromBox'), new PhiStringLiteral('border')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('toBox'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('toBox'), new PhiStringLiteral('border')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('fromBox')), new PhiNameRef('fromBox')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('toBox')), new PhiNameRef('toBox')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_LOADING', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_LOADING_cuyr1n$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('loading');
    }))))));
    phiVars(array(array('get_INTERACTIVE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_INTERACTIVE_cuyr1n$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('interactive');
    }))))));
    phiVars(array(array('get_COMPLETE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_COMPLETE_cuyr1n$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('complete');
    }))))));
    phiVars(array(array('get_EMPTY', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_EMPTY_k3kzzn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('get_MAYBE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MAYBE_k3kzzn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('maybe');
    }))))));
    phiVars(array(array('get_PROBABLY', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_PROBABLY_k3kzzn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('probably');
    }))))));
    phiVars(array(array('get_DISABLED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_DISABLED_ygmcel$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('disabled');
    }))))));
    phiVars(array(array('get_HIDDEN', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_HIDDEN_ygmcel$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('hidden');
    }))))));
    phiVars(array(array('get_SHOWING', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_SHOWING_ygmcel$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('showing');
    }))))));
    phiVars(array(array('get_SUBTITLES', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_SUBTITLES_fw7o78$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('subtitles');
    }))))));
    phiVars(array(array('get_CAPTIONS', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_CAPTIONS_fw7o78$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('captions');
    }))))));
    phiVars(array(array('get_DESCRIPTIONS', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_DESCRIPTIONS_fw7o78$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('descriptions');
    }))))));
    phiVars(array(array('get_CHAPTERS', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_CHAPTERS_fw7o78$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('chapters');
    }))))));
    phiVars(array(array('get_METADATA', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_METADATA_fw7o78$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('metadata');
    }))))));
    phiVars(array(array('get_SELECT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_SELECT_efic67$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('select');
    }))))));
    phiVars(array(array('get_START', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_START_efic67$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('start');
    }))))));
    phiVars(array(array('get_END', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_END_efic67$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('end');
    }))))));
    phiVars(array(array('get_PRESERVE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_PRESERVE_efic67$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('preserve');
    }))))));
    phiVars(array(array('get_NONZERO', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_NONZERO_mhbikd$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('nonzero');
    }))))));
    phiVars(array(array('get_EVENODD', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_EVENODD_mhbikd$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('evenodd');
    }))))));
    phiVars(array(array('get_LOW_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_LOW_lt2gtk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('low');
    }))))));
    phiVars(array(array('get_MEDIUM', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MEDIUM_lt2gtk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('medium');
    }))))));
    phiVars(array(array('get_HIGH', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_HIGH_lt2gtk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('high');
    }))))));
    phiVars(array(array('get_BUTT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_BUTT_w26v20$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('butt');
    }))))));
    phiVars(array(array('get_ROUND', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_ROUND_w26v20$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('round');
    }))))));
    phiVars(array(array('get_SQUARE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_SQUARE_w26v20$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('square');
    }))))));
    phiVars(array(array('get_ROUND_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_ROUND_1xtghu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('round');
    }))))));
    phiVars(array(array('get_BEVEL', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_BEVEL_1xtghu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('bevel');
    }))))));
    phiVars(array(array('get_MITER', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MITER_1xtghu$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('miter');
    }))))));
    phiVars(array(array('get_START_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_START_hbi5si$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('start');
    }))))));
    phiVars(array(array('get_END_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_END_hbi5si$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('end');
    }))))));
    phiVars(array(array('get_LEFT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_LEFT_hbi5si$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('left');
    }))))));
    phiVars(array(array('get_RIGHT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_RIGHT_hbi5si$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('right');
    }))))));
    phiVars(array(array('get_CENTER_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_CENTER_hbi5si$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('center');
    }))))));
    phiVars(array(array('get_TOP', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_TOP_oz2y96$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('top');
    }))))));
    phiVars(array(array('get_HANGING', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_HANGING_oz2y96$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('hanging');
    }))))));
    phiVars(array(array('get_MIDDLE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MIDDLE_oz2y96$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('middle');
    }))))));
    phiVars(array(array('get_ALPHABETIC', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_ALPHABETIC_oz2y96$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('alphabetic');
    }))))));
    phiVars(array(array('get_IDEOGRAPHIC', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_IDEOGRAPHIC_oz2y96$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('ideographic');
    }))))));
    phiVars(array(array('get_BOTTOM', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_BOTTOM_oz2y96$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('bottom');
    }))))));
    phiVars(array(array('get_LTR', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_LTR_qxot9j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('ltr');
    }))))));
    phiVars(array(array('get_RTL', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_RTL_qxot9j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('rtl');
    }))))));
    phiVars(array(array('get_INHERIT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_INHERIT_qxot9j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('inherit');
    }))))));
    phiVars(array(array('get_AUTO_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_AUTO_huqvoj$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('auto');
    }))))));
    phiVars(array(array('get_MANUAL', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MANUAL_huqvoj$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('manual');
    }))))));
    phiVars(array(array('get_NONE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_NONE_xgljrz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('none');
    }))))));
    phiVars(array(array('get_FLIPY', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_FLIPY_xgljrz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('flipY');
    }))))));
    phiVars(array(array('get_NONE_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_NONE_b5608t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('none');
    }))))));
    phiVars(array(array('get_PREMULTIPLY', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_PREMULTIPLY_b5608t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('premultiply');
    }))))));
    phiVars(array(array('get_DEFAULT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_DEFAULT_b5608t$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('default');
    }))))));
    phiVars(array(array('get_NONE_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_NONE_xqeuit$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('none');
    }))))));
    phiVars(array(array('get_DEFAULT_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_DEFAULT_xqeuit$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('default');
    }))))));
    phiVars(array(array('get_PIXELATED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_PIXELATED_32fsn1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('pixelated');
    }))))));
    phiVars(array(array('get_LOW', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_LOW_32fsn1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('low');
    }))))));
    phiVars(array(array('get_MEDIUM_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MEDIUM_32fsn1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('medium');
    }))))));
    phiVars(array(array('get_HIGH_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_HIGH_32fsn1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('high');
    }))))));
    phiVars(array(array('get_BLOB', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_BLOB_qxle9l$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('blob');
    }))))));
    phiVars(array(array('get_ARRAYBUFFER', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_ARRAYBUFFER_qxle9l$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('arraybuffer');
    }))))));
    phiVars(array(array('get_CLASSIC', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_CLASSIC_xc77to$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('classic');
    }))))));
    phiVars(array(array('get_MODULE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MODULE_xc77to$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('module');
    }))))));
    phiVars(array(array('get_OPEN', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_OPEN_knhupb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('open');
    }))))));
    phiVars(array(array('get_CLOSED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_CLOSED_knhupb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('closed');
    }))))));
    phiVars(array(array('get_AUTO', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_AUTO_gi1pud$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('auto');
    }))))));
    phiVars(array(array('get_INSTANT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_INSTANT_gi1pud$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('instant');
    }))))));
    phiVars(array(array('get_SMOOTH', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_SMOOTH_gi1pud$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('smooth');
    }))))));
    phiVars(array(array('get_START_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_START_ltkif$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('start');
    }))))));
    phiVars(array(array('get_CENTER', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_CENTER_ltkif$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('center');
    }))))));
    phiVars(array(array('get_END_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_END_ltkif$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('end');
    }))))));
    phiVars(array(array('get_NEAREST', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_NEAREST_ltkif$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('nearest');
    }))))));
    phiVars(array(array('get_MARGIN', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_MARGIN_eb1l8y$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('margin');
    }))))));
    phiVars(array(array('get_BORDER', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_BORDER_eb1l8y$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('border');
    }))))));
    phiVars(array(array('get_PADDING', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_PADDING_eb1l8y$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('padding');
    }))))));
    phiVars(array(array('get_CONTENT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.get_CONTENT_eb1l8y$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('content');
    }))))));
    phiVars(array(array('SVGBoundingBoxOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.SVGBoundingBoxOptions_bx6eq4$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('fill'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('fill'), true));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('stroke'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('stroke'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('markers'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('markers'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clipped'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clipped'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('fill')), new PhiNameRef('fill')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('stroke')), new PhiNameRef('stroke')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('markers')), new PhiNameRef('markers')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clipped')), new PhiNameRef('clipped')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_38', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.get_2fgwj9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.set_xg4o68$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('newItem')));
    }))))));
    phiVars(array(array('get_39', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.get_nujcb1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_13', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.set_vul1sp$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('newItem')));
    }))))));
    phiVars(array(array('get_40', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.get_ml6vgw$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_14', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.set_tsl60p$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('newItem')));
    }))))));
    phiVars(array(array('get_41', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.get_f2nmth$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_15', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.set_nr97t$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('newItem')));
    }))))));
    phiVars(array(array('get_42', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.get_xcci3g$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_16', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.set_7s907r$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('newItem')));
    }))))));
    phiVars(array(array('get_43', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.get_r7cbpc$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('set_17', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.dom.svg.set_8k1hvb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index')), new PhiNameRef('newItem')));
    }))))));
    phiVars(array(array('RequestInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.RequestInit_302zsh$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('method'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('method'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('headers'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('headers'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('body'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('body'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('referrer'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('referrer'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('referrerPolicy'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('referrerPolicy'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('mode'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('mode'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('credentials'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('credentials'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cache'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cache'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('redirect'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('redirect'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('integrity'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('integrity'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('keepalive'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('keepalive'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('window_0'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('window_0'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('method')), new PhiNameRef('method')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('headers')), new PhiNameRef('headers')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('body')), new PhiNameRef('body')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('referrer')), new PhiNameRef('referrer')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('referrerPolicy')), new PhiNameRef('referrerPolicy')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('mode')), new PhiNameRef('mode')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('credentials')), new PhiNameRef('credentials')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cache')), new PhiNameRef('cache')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('redirect')), new PhiNameRef('redirect')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('integrity')), new PhiNameRef('integrity')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('keepalive')), new PhiNameRef('keepalive')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('window')), new PhiNameRef('window_0')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ResponseInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.ResponseInit_gk6zn2$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('status'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('status'), 200.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('statusText'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('statusText'), new PhiStringLiteral('OK')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('headers'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('headers'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('status')), new PhiNameRef('status')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('statusText')), new PhiNameRef('statusText')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('headers')), new PhiNameRef('headers')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_EMPTY_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_EMPTY_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('get_AUDIO', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_AUDIO_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('audio');
    }))))));
    phiVars(array(array('get_FONT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_FONT_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('font');
    }))))));
    phiVars(array(array('get_IMAGE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_IMAGE_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('image');
    }))))));
    phiVars(array(array('get_SCRIPT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_SCRIPT_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('script');
    }))))));
    phiVars(array(array('get_STYLE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_STYLE_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('style');
    }))))));
    phiVars(array(array('get_TRACK', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_TRACK_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('track');
    }))))));
    phiVars(array(array('get_VIDEO', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_VIDEO_ih0r03$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('video');
    }))))));
    phiVars(array(array('get_EMPTY_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_EMPTY_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('get_DOCUMENT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_DOCUMENT_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('document');
    }))))));
    phiVars(array(array('get_EMBED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_EMBED_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('embed');
    }))))));
    phiVars(array(array('get_FONT_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_FONT_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('font');
    }))))));
    phiVars(array(array('get_IMAGE_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_IMAGE_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('image');
    }))))));
    phiVars(array(array('get_MANIFEST', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_MANIFEST_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('manifest');
    }))))));
    phiVars(array(array('get_MEDIA', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_MEDIA_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('media');
    }))))));
    phiVars(array(array('get_OBJECT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_OBJECT_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('object');
    }))))));
    phiVars(array(array('get_REPORT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_REPORT_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('report');
    }))))));
    phiVars(array(array('get_SCRIPT_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_SCRIPT_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('script');
    }))))));
    phiVars(array(array('get_SERVICEWORKER', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_SERVICEWORKER_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('serviceworker');
    }))))));
    phiVars(array(array('get_SHAREDWORKER', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_SHAREDWORKER_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('sharedworker');
    }))))));
    phiVars(array(array('get_STYLE_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_STYLE_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('style');
    }))))));
    phiVars(array(array('get_WORKER', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_WORKER_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('worker');
    }))))));
    phiVars(array(array('get_XSLT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_XSLT_dgizjn$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('xslt');
    }))))));
    phiVars(array(array('get_NAVIGATE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_NAVIGATE_jvdbus$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('navigate');
    }))))));
    phiVars(array(array('get_SAME_ORIGIN', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_SAME_ORIGIN_jvdbus$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('same-origin');
    }))))));
    phiVars(array(array('get_NO_CORS', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_NO_CORS_jvdbus$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('no-cors');
    }))))));
    phiVars(array(array('get_CORS', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_CORS_jvdbus$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('cors');
    }))))));
    phiVars(array(array('get_OMIT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_OMIT_yuzaxt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('omit');
    }))))));
    phiVars(array(array('get_SAME_ORIGIN_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_SAME_ORIGIN_yuzaxt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('same-origin');
    }))))));
    phiVars(array(array('get_INCLUDE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_INCLUDE_yuzaxt$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('include');
    }))))));
    phiVars(array(array('get_DEFAULT_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_DEFAULT_iyytcp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('default');
    }))))));
    phiVars(array(array('get_NO_STORE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_NO_STORE_iyytcp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('no-store');
    }))))));
    phiVars(array(array('get_RELOAD', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_RELOAD_iyytcp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('reload');
    }))))));
    phiVars(array(array('get_NO_CACHE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_NO_CACHE_iyytcp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('no-cache');
    }))))));
    phiVars(array(array('get_FORCE_CACHE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_FORCE_CACHE_iyytcp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('force-cache');
    }))))));
    phiVars(array(array('get_ONLY_IF_CACHED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_ONLY_IF_CACHED_iyytcp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('only-if-cached');
    }))))));
    phiVars(array(array('get_FOLLOW', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_FOLLOW_tow8et$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('follow');
    }))))));
    phiVars(array(array('get_ERROR', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_ERROR_tow8et$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('error');
    }))))));
    phiVars(array(array('get_MANUAL_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_MANUAL_tow8et$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('manual');
    }))))));
    phiVars(array(array('get_BASIC', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_BASIC_1el1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('basic');
    }))))));
    phiVars(array(array('get_CORS_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_CORS_1el1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('cors');
    }))))));
    phiVars(array(array('get_DEFAULT_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_DEFAULT_1el1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('default');
    }))))));
    phiVars(array(array('get_ERROR_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_ERROR_1el1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('error');
    }))))));
    phiVars(array(array('get_OPAQUE', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_OPAQUE_1el1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('opaque');
    }))))));
    phiVars(array(array('get_OPAQUEREDIRECT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.fetch.get_OPAQUEREDIRECT_1el1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('opaqueredirect');
    }))))));
    phiVars(array(array('BlobPropertyBag', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.files.BlobPropertyBag_pdl1vj$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('type'), new PhiStringLiteral('')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('type')), new PhiNameRef('type')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('FilePropertyBag', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.files.FilePropertyBag_3gd7sg$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lastModified'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastModified'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('type'), new PhiStringLiteral('')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('lastModified')), new PhiNameRef('lastModified')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('type')), new PhiNameRef('type')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_44', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.files.get_frimup$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBrackets(new PhiNameRef('$receiver'), new PhiNameRef('index'));
    }))))));
    phiVars(array(array('NotificationOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.NotificationOptions_kxkl36$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('dir'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('dir'), new PhiStringLiteral('auto')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lang'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lang'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('body'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('body'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tag'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tag'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('image'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('image'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('icon'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('icon'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('badge'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('badge'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('sound'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sound'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('vibrate'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('vibrate'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('timestamp'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('timestamp'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('renotify'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('renotify'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('silent'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('silent'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('noscreen'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('noscreen'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('requireInteraction'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('requireInteraction'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('sticky'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('sticky'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('data'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('data'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('actions'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('actions'), new PhiArrayLiteral(array())));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('dir')), new PhiNameRef('dir')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('lang')), new PhiNameRef('lang')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('body')), new PhiNameRef('body')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('tag')), new PhiNameRef('tag')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('image')), new PhiNameRef('image')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('icon')), new PhiNameRef('icon')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('badge')), new PhiNameRef('badge')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('sound')), new PhiNameRef('sound')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('vibrate')), new PhiNameRef('vibrate')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('timestamp')), new PhiNameRef('timestamp')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('renotify')), new PhiNameRef('renotify')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('silent')), new PhiNameRef('silent')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('noscreen')), new PhiNameRef('noscreen')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('requireInteraction')), new PhiNameRef('requireInteraction')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('sticky')), new PhiNameRef('sticky')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('data')), new PhiNameRef('data')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('actions')), new PhiNameRef('actions')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('NotificationAction', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.NotificationAction_eaqb6n$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('icon'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('icon'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('action')), new PhiNameRef('action')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('title')), new PhiNameRef('title')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('icon')), new PhiNameRef('icon')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('GetNotificationOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.GetNotificationOptions_pdl1vj$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tag'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tag'), new PhiStringLiteral('')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('tag')), new PhiNameRef('tag')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('NotificationEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.NotificationEventInit_wmlth4$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('action'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('action'), new PhiStringLiteral('')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('notification')), new PhiNameRef('notification')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('action')), new PhiNameRef('action')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_DEFAULT_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.get_DEFAULT_4wcaio$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('default');
    }))))));
    phiVars(array(array('get_DENIED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.get_DENIED_4wcaio$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('denied');
    }))))));
    phiVars(array(array('get_GRANTED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.get_GRANTED_4wcaio$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('granted');
    }))))));
    phiVars(array(array('get_AUTO_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.get_AUTO_6wyje4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('auto');
    }))))));
    phiVars(array(array('get_LTR_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.get_LTR_6wyje4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('ltr');
    }))))));
    phiVars(array(array('get_RTL_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.notifications.get_RTL_6wyje4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('rtl');
    }))))));
    phiVars(array(array('RegistrationOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.RegistrationOptions_dbr88v$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('scope'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('scope'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('type'), new PhiStringLiteral('classic')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('scope')), new PhiNameRef('scope')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('type')), new PhiNameRef('type')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ServiceWorkerMessageEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.ServiceWorkerMessageEventInit_d2wyw1$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('data'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('data'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('origin'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('origin'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lastEventId'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastEventId'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('source'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('source'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ports'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ports'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('data')), new PhiNameRef('data')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('origin')), new PhiNameRef('origin')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('lastEventId')), new PhiNameRef('lastEventId')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('source')), new PhiNameRef('source')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ports')), new PhiNameRef('ports')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ClientQueryOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.ClientQueryOptions_d3lhiw$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('includeUncontrolled'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('includeUncontrolled'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('type'), new PhiStringLiteral('window')));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('includeUncontrolled')), new PhiNameRef('includeUncontrolled')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('type')), new PhiNameRef('type')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ExtendableEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.ExtendableEventInit_uic7jo$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ForeignFetchOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.ForeignFetchOptions_aye5cc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('scopes')), new PhiNameRef('scopes')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('origins')), new PhiNameRef('origins')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('FetchEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.FetchEventInit_bfhkw8$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('clientId'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('clientId'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('isReload'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('isReload'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('request')), new PhiNameRef('request')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('clientId')), new PhiNameRef('clientId')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('isReload')), new PhiNameRef('isReload')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ForeignFetchEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.ForeignFetchEventInit_kdt7mo$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('origin'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('origin'), new PhiStringLiteral('null')));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('request')), new PhiNameRef('request')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('origin')), new PhiNameRef('origin')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ForeignFetchResponse', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.ForeignFetchResponse_ikkqih$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('origin'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('origin'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('headers'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('headers'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('response')), new PhiNameRef('response')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('origin')), new PhiNameRef('origin')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('headers')), new PhiNameRef('headers')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('ExtendableMessageEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.ExtendableMessageEventInit_ud4veo$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('data'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('data'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('origin'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('origin'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lastEventId'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastEventId'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('source'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('source'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ports'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ports'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('data')), new PhiNameRef('data')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('origin')), new PhiNameRef('origin')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('lastEventId')), new PhiNameRef('lastEventId')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('source')), new PhiNameRef('source')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ports')), new PhiNameRef('ports')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('CacheQueryOptions', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.CacheQueryOptions_dh4ton$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreSearch'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreSearch'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreMethod'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreMethod'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('ignoreVary'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('ignoreVary'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cacheName'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cacheName'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ignoreSearch')), new PhiNameRef('ignoreSearch')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ignoreMethod')), new PhiNameRef('ignoreMethod')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('ignoreVary')), new PhiNameRef('ignoreVary')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cacheName')), new PhiNameRef('cacheName')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('CacheBatchOperation', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.CacheBatchOperation_e4hn3k$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('type'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('request'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('request'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('response'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('response'), null));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('options'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('options'), null));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('type')), new PhiNameRef('type')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('request')), new PhiNameRef('request')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('response')), new PhiNameRef('response')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('options')), new PhiNameRef('options')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_INSTALLING', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_INSTALLING_7rndk9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('installing');
    }))))));
    phiVars(array(array('get_INSTALLED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_INSTALLED_7rndk9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('installed');
    }))))));
    phiVars(array(array('get_ACTIVATING', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_ACTIVATING_7rndk9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('activating');
    }))))));
    phiVars(array(array('get_ACTIVATED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_ACTIVATED_7rndk9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('activated');
    }))))));
    phiVars(array(array('get_REDUNDANT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_REDUNDANT_7rndk9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('redundant');
    }))))));
    phiVars(array(array('get_AUXILIARY', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_AUXILIARY_1foc4s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('auxiliary');
    }))))));
    phiVars(array(array('get_TOP_LEVEL', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_TOP_LEVEL_1foc4s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('top-level');
    }))))));
    phiVars(array(array('get_NESTED', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_NESTED_1foc4s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('nested');
    }))))));
    phiVars(array(array('get_NONE_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_NONE_1foc4s$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('none');
    }))))));
    phiVars(array(array('get_WINDOW', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_WINDOW_jpgnoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('window');
    }))))));
    phiVars(array(array('get_WORKER_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_WORKER_jpgnoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('worker');
    }))))));
    phiVars(array(array('get_SHAREDWORKER_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_SHAREDWORKER_jpgnoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('sharedworker');
    }))))));
    phiVars(array(array('get_ALL', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.workers.get_ALL_jpgnoe$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('all');
    }))))));
    phiVars(array(array('ProgressEventInit', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.xhr.ProgressEventInit_swrtea$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('lengthComputable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lengthComputable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('loaded'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('loaded'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('total'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('total'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('bubbles'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('bubbles'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('cancelable'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cancelable'), false));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('composed'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('composed'), false));
      }
      phiVars(array(array('o', new PhiObjectLiteral(array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('lengthComputable')), new PhiNameRef('lengthComputable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('loaded')), new PhiNameRef('loaded')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('total')), new PhiNameRef('total')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('bubbles')), new PhiNameRef('bubbles')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('cancelable')), new PhiNameRef('cancelable')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('o'), new PhiStringLiteral('composed')), new PhiNameRef('composed')));
      return new PhiNameRef('o');
    }))))));
    phiVars(array(array('get_EMPTY_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.xhr.get_EMPTY_8edqmh$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('get_ARRAYBUFFER_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.xhr.get_ARRAYBUFFER_8edqmh$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('arraybuffer');
    }))))));
    phiVars(array(array('get_BLOB_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.xhr.get_BLOB_8edqmh$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('blob');
    }))))));
    phiVars(array(array('get_DOCUMENT_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.xhr.get_DOCUMENT_8edqmh$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('document');
    }))))));
    phiVars(array(array('get_JSON', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.xhr.get_JSON_8edqmh$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('json');
    }))))));
    phiVars(array(array('get_TEXT', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.org.w3c.xhr.get_TEXT_8edqmh$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('text');
    }))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('simpleName'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'metadata_0')), null), new PhiDot(new PhiNameRef('tmp$'), 'simpleName'), null);
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('annotations'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('constructors'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('isAbstract'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('isCompanion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('isData'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('isFinal'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('isInner'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('isOpen'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('isSealed'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('members'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('nestedClasses'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('objectInstance'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('qualifiedName'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('supertypes'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('typeParameters'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), new PhiStringLiteral('visibility'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('KClassImpl'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'jClass_0'), new PhiDot(new PhiNameRef('other'), 'jClass_0'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'hashCode_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), 'isInstance_s8jyv4$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'jClass_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KClassImpl'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiStringLiteral('class '), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'simpleName'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KClassImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KClassImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KClass'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Unit'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('kotlin.Unit');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Unit'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Unit')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('Unit_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KAnnotatedElement'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KAnnotatedElement')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KCallable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KCallable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KAnnotatedElement'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KClass'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KClass')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KClassifier'), new PhiNameRef('KAnnotatedElement'), new PhiNameRef('KDeclarationContainer'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KClassifier'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KClassifier')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KDeclarationContainer'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KDeclarationContainer')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KFunction'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KFunction')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Function'), new PhiNameRef('KCallable'))))))));
    phiVars(array(array('KParameter$Kind$INSTANCE_instance', )));
    phiVars(array(array('KParameter$Kind$EXTENSION_RECEIVER_instance', )));
    phiVars(array(array('KParameter$Kind$VALUE_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KParameter$Kind'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Kind')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KParameter$Kind'), 'values'), new PhiNameRef('KParameter$Kind$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KParameter$Kind'), 'valueOf_61zpoe$'), new PhiNameRef('KParameter$Kind$valueOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KParameter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KParameter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KAnnotatedElement'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty$Accessor'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Accessor')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty$Getter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Getter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KFunction'), new PhiNameRef('KProperty$Accessor'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KProperty')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KCallable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty$Setter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Setter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KFunction'), new PhiNameRef('KProperty$Accessor'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KMutableProperty')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty0$Getter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Getter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KProperty$Getter'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KProperty0')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty0$Setter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Setter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KMutableProperty$Setter'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KMutableProperty0')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KMutableProperty'), new PhiNameRef('KProperty0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty1$Getter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Getter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KProperty$Getter'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty1'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KProperty1')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty1$Setter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Setter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KMutableProperty$Setter'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty1'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KMutableProperty1')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KMutableProperty'), new PhiNameRef('KProperty1'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty2$Getter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Getter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KProperty$Getter'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty2'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KProperty2')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty2$Setter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Setter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KMutableProperty$Setter'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty2'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KMutableProperty2')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KMutableProperty'), new PhiNameRef('KProperty2'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KType'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KType')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection$Companion'), 'prototype'), 'invariant_saj79j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('KTypeProjection'), array(new PhiInvocation(new PhiNameRef('KVariance$INVARIANT_getInstance'), array()), new PhiNameRef('type')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection$Companion'), 'prototype'), 'contravariant_saj79j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('KTypeProjection'), array(new PhiInvocation(new PhiNameRef('KVariance$IN_getInstance'), array()), new PhiNameRef('type')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection$Companion'), 'prototype'), 'covariant_saj79j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('KTypeProjection'), array(new PhiInvocation(new PhiNameRef('KVariance$OUT_getInstance'), array()), new PhiNameRef('type')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KTypeProjection$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('KTypeProjection$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KTypeProjection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KTypeProjection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection'), 'prototype'), 'component1'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'variance');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection'), 'prototype'), 'component2'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'type');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection'), 'prototype'), 'copy_wulwk3$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('KTypeProjection'), array(new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('variance'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'variance'), new PhiNameRef('variance')), new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('type'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'type'), new PhiNameRef('type'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('KTypeProjection(variance='), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'variance')))), new PhiBinaryOperation('+', new PhiStringLiteral(', type='), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'type'))))), new PhiStringLiteral(')'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'variance')))), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'type')))), 0.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KTypeProjection'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')), new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('other'), null), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('other')), new PhiStringLiteral('object')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('this'))), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('other')))), new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'variance'), new PhiDot(new PhiNameRef('other'), 'variance'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'type'), new PhiDot(new PhiNameRef('other'), 'type'))))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KTypeParameter'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KTypeParameter')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('KClassifier'))))))));
    phiVars(array(array('KVariance$INVARIANT_instance', )));
    phiVars(array(array('KVariance$IN_instance', )));
    phiVars(array(array('KVariance$OUT_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVariance'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KVariance')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVariance'), 'values'), new PhiNameRef('KVariance$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVariance'), 'valueOf_61zpoe$'), new PhiNameRef('KVariance$valueOf')));
    phiVars(array(array('KVisibility$PUBLIC_instance', )));
    phiVars(array(array('KVisibility$PROTECTED_instance', )));
    phiVars(array(array('KVisibility$INTERNAL_instance', )));
    phiVars(array(array('KVisibility$PRIVATE_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVisibility'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KVisibility')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVisibility'), 'values'), new PhiNameRef('KVisibility$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KVisibility'), 'valueOf_61zpoe$'), new PhiNameRef('KVisibility$valueOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('any$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label any$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element_0', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('element_0'), new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), true));
              phiExpressionStatement(new PhiNameRef('goto any_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), false));
        }
        phiExpressionStatement(new PhiNameRef('any_usd_break:'));
      }
      return new PhiNameRef('any$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype'), 'containsAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('all$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label all$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'contains_11rb$'), array(new PhiNameRef('element')))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('all$result'), false));
              phiExpressionStatement(new PhiNameRef('goto all_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('all$result'), true));
        }
        phiExpressionStatement(new PhiNameRef('all_usd_break:'));
      }
      return new PhiNameRef('all$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'size'), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('joinToString_8'), array(new PhiNameRef('this'), new PhiStringLiteral(', '), new PhiStringLiteral('['), new PhiStringLiteral(']'), new PhiPrefixOperation('void', 0.0), new PhiPrefixOperation('void', 0.0), new PhiInvocation(new PhiNameRef('AbstractCollection$toString$lambda'), array(new PhiNameRef('this')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype'), 'toArray'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('copyToArrayImpl'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCollection'), 'prototype'), 'toArray_ro6dgy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('copyToArrayImpl_0'), array(new PhiNameRef('this'), new PhiNameRef('array')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractCollection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractCollection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Collection'))))))));
    phiVars(array(array('State$Ready_instance', )));
    phiVars(array(array('State$NotReady_instance', )));
    phiVars(array(array('State$Done_instance', )));
    phiVars(array(array('State$Failed_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('State'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('State')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('State'), 'values'), new PhiNameRef('State$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('State'), 'valueOf_61zpoe$'), new PhiNameRef('State$valueOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0'), new PhiInvocation(new PhiNameRef('State$Failed_getInstance'), array()))))) {
        phiVars(array(array('message', new PhiStringLiteral('Failed requirement.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0')));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('State$Done_getInstance'), array()))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), false));
      }
       else {
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('State$Ready_getInstance'), array()))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), true));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'tryToComputeNext_nqf5es$_0'), array())));
        }
      }
      return new PhiNameRef('tmp$_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0'), new PhiInvocation(new PhiNameRef('State$NotReady_getInstance'), array())));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'nextValue_nqf5es$_0')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractIterator'), 'prototype'), 'tryToComputeNext_nqf5es$_0'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0'), new PhiInvocation(new PhiNameRef('State$Failed_getInstance'), array())));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'computeNext'), array()));
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0'), new PhiInvocation(new PhiNameRef('State$Ready_getInstance'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractIterator'), 'prototype'), 'setNext_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextValue_nqf5es$_0'), new PhiNameRef('value')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0'), new PhiInvocation(new PhiNameRef('State$Ready_getInstance'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractIterator'), 'prototype'), 'done'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_nqf5es$_0'), new PhiInvocation(new PhiNameRef('State$Done_getInstance'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('AbstractList$IteratorImpl'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'indexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('indexOfFirst$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label indexOfFirst$break'));
        {
          phiVars(array(array('tmp$', )));
          phiVars(array(array('index', 0.0)));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('item'), new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiNameRef('index')));
              phiExpressionStatement(new PhiNameRef('goto indexOfFirst_usd_break'));
            }
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0)));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfFirst$result'), new PhiPrefixOperation('-', 1.0)));
        }
        phiExpressionStatement(new PhiNameRef('indexOfFirst_usd_break:'));
      }
      return new PhiNameRef('indexOfFirst$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'lastIndexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('indexOfLast$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label indexOfLast$break'));
        {
          phiVars(array(array('iterator_3', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'listIterator_za3lpa$'), array(new PhiDot(new PhiNameRef('this'), 'size'))))));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasPrevious'), array())) {
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'previous'), array()), new PhiNameRef('element'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfLast$result'), new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'nextIndex'), array())));
              phiExpressionStatement(new PhiNameRef('goto indexOfLast_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('indexOfLast$result'), new PhiPrefixOperation('-', 1.0)));
        }
        phiExpressionStatement(new PhiNameRef('indexOfLast_usd_break:'));
      }
      return new PhiNameRef('indexOfLast$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'listIterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('AbstractList$ListIteratorImpl'), array(new PhiNameRef('this'), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'listIterator_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('AbstractList$ListIteratorImpl'), array(new PhiNameRef('this'), new PhiNameRef('index')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'subList_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('AbstractList$SubList'), array(new PhiNameRef('this'), new PhiNameRef('fromIndex'), new PhiNameRef('toIndex')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$SubList'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'checkElementIndex_0'), array(new PhiNameRef('index'), new PhiDot(new PhiNameRef('this'), '_size_0'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'list_0'), 'get_za3lpa$'), array(new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'fromIndex_0'), new PhiNameRef('index')), 0.0)));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractList$SubList'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), '_size_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList$SubList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SubList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractList'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('other'), new PhiNameRef('this')))) {
        return true;
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('List')))))) {
        return false;
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'orderedEquals_0'), array(new PhiNameRef('this'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractList$Companion_getInstance'), array()), 'orderedHashCode_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$IteratorImpl'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'size'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$IteratorImpl'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'index_0')), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'get_za3lpa$'), array(new PhiNameRef('tmp$_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList$IteratorImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IteratorImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$ListIteratorImpl'), 'prototype'), 'hasPrevious'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'index_0'), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$ListIteratorImpl'), 'prototype'), 'nextIndex'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'index_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$ListIteratorImpl'), 'prototype'), 'previous'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasPrevious'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '$outer'), 'get_za3lpa$'), array(new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'index_0'), 1.0), 0.0)), new PhiDot(new PhiNameRef('this'), 'index_0'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$ListIteratorImpl'), 'prototype'), 'previousIndex'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'index_0'), 1.0), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList$ListIteratorImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ListIteratorImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ListIterator'), new PhiNameRef('AbstractList$IteratorImpl'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$Companion'), 'prototype'), 'checkElementIndex_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('>=', new PhiNameRef('index'), new PhiNameRef('size'))))) {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('index: '), new PhiNameRef('index')), new PhiStringLiteral(', size: ')), new PhiNameRef('size')))));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$Companion'), 'prototype'), 'checkPositionIndex_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('index'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('index'), new PhiNameRef('size'))))) {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('index: '), new PhiNameRef('index')), new PhiStringLiteral(', size: ')), new PhiNameRef('size')))));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$Companion'), 'prototype'), 'checkRangeIndexes_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('<', new PhiNameRef('start'), 0.0), new PhiBinaryOperation('>', new PhiNameRef('end'), new PhiNameRef('size'))))) {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('fromIndex: '), new PhiNameRef('start')), new PhiStringLiteral(', toIndex: ')), new PhiNameRef('end')), new PhiStringLiteral(', size: ')), new PhiNameRef('size')))));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>', new PhiNameRef('start'), new PhiNameRef('end')))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalArgumentException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('fromIndex: '), new PhiNameRef('start')), new PhiStringLiteral(' > toIndex: ')), new PhiNameRef('end')))));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$Companion'), 'prototype'), 'orderedHashCode_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('hashCode', 1.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('c'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('hashCode'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiNameRef('hashCode')), 0.0), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('e'), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiNameRef('e'))), null)), null), new PhiNameRef('tmp$_0'), 0.0)), 0.0)));
      }
      return new PhiNameRef('hashCode');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractList$Companion'), 'prototype'), 'orderedEquals_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('c'), 'size'), new PhiDot(new PhiNameRef('other'), 'size')))) {
        return false;
      }
      phiVars(array(array('otherIterator', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'iterator'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('c'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('elem', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('elemOther', new PhiInvocation(new PhiDot(new PhiNameRef('otherIterator'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('elem'), new PhiNameRef('elemOther')))))) {
          return false;
        }
      }
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('AbstractList$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('List'), new PhiNameRef('AbstractCollection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'containsKey_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!=', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'implFindEntry_cbwyw1$_0'), array(new PhiNameRef('key'))), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'containsValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('this'), 'entries'))));
      phiVars(array(array('any$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label any$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('element'), 'value'), new PhiNameRef('value'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), true));
              phiExpressionStatement(new PhiNameRef('goto any_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('any$result'), false));
        }
        phiExpressionStatement(new PhiNameRef('any_usd_break:'));
      }
      return new PhiNameRef('any$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'containsEntry_krtws3$_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('entry'), new PhiNameRef('Map$Entry')))))) {
        return false;
      }
      phiVars(array(array('key', new PhiDot(new PhiNameRef('entry'), 'key'))));
      phiVars(array(array('value', new PhiDot(new PhiNameRef('entry'), 'value'))));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('ourValue', new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('this')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Map'))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'get_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiNameRef('value'), new PhiNameRef('ourValue')))))) {
        return false;
      }
      phiVars(array(array('tmp$', new PhiBinaryOperation('==', new PhiNameRef('ourValue'), null))));
      if (phiEvaluateToBoolean(new PhiNameRef('tmp$'))) {
        phiVars(array(array('tmp$_1', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiNameRef('this')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Map'))), new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'containsKey_11rb$'), array(new PhiNameRef('key'))))));
      }
      if (phiEvaluateToBoolean(new PhiNameRef('tmp$'))) {
        return false;
      }
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('other'), new PhiNameRef('this')))) {
        return true;
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Map')))))) {
        return false;
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('this'), 'size'), new PhiDot(new PhiNameRef('other'), 'size')))) {
        return false;
      }
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('other'), 'entries'))));
      phiVars(array(array('all$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label all$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'containsEntry_krtws3$_0'), array(new PhiNameRef('element')))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('all$result'), false));
              phiExpressionStatement(new PhiNameRef('goto all_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('all$result'), true));
        }
        phiExpressionStatement(new PhiNameRef('all_usd_break:'));
      }
      return new PhiNameRef('all$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'implFindEntry_cbwyw1$_0'), array(new PhiNameRef('key')))), null), new PhiDot(new PhiNameRef('tmp$'), 'value'), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'entries')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'size'), 0.0);
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'entries'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), 'containsKey_11rb$'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'next'), array()), 'key');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('entryIterator', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), 'entries'), 'iterator'), array()))));
      return new PhiNew(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral$iterator$ObjectLiteral'), array(new PhiNameRef('entryIterator')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractSet'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), new PhiStringLiteral('keys'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), '_keys_gfqcsa$_0'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_keys_gfqcsa$_0'), new PhiNew(new PhiNameRef('AbstractMap$get_AbstractMap$keys$ObjectLiteral'), array(new PhiNameRef('this')))));
      }
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), '_keys_gfqcsa$_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('joinToString_8'), array(new PhiDot(new PhiNameRef('this'), 'entries'), new PhiStringLiteral(', '), new PhiStringLiteral('{'), new PhiStringLiteral('}'), new PhiPrefixOperation('void', 0.0), new PhiPrefixOperation('void', 0.0), new PhiInvocation(new PhiNameRef('AbstractMap$toString$lambda'), array(new PhiNameRef('this')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'toString_pmt6ib$_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'toString_w3q7ga$_0'), array(new PhiDot(new PhiNameRef('entry'), 'key'))), new PhiStringLiteral('=')), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'toString_w3q7ga$_0'), array(new PhiDot(new PhiNameRef('entry'), 'value'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'toString_w3q7ga$_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('o'), new PhiNameRef('this')), new PhiStringLiteral('(this Map)'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiNameRef('o'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), 'containsValue_11rc$'), array(new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$entryIterator'), 'next'), array()), 'value');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('entryIterator', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), 'entries'), 'iterator'), array()))));
      return new PhiNew(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral$iterator$ObjectLiteral'), array(new PhiNameRef('entryIterator')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$AbstractMap'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractCollection'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), new PhiStringLiteral('values'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), '_values_gfqcsa$_0'), null))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_values_gfqcsa$_0'), new PhiNew(new PhiNameRef('AbstractMap$get_AbstractMap$values$ObjectLiteral'), array(new PhiNameRef('this')))));
      }
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), '_values_gfqcsa$_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'implFindEntry_cbwyw1$_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('this'), 'entries'))));
      phiVars(array(array('firstOrNull$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label firstOrNull$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiNameRef('key'))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result'), new PhiNameRef('element')));
              phiExpressionStatement(new PhiNameRef('goto firstOrNull_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('firstOrNull$result'), null));
        }
        phiExpressionStatement(new PhiNameRef('firstOrNull_usd_break:'));
      }
      return new PhiNameRef('firstOrNull$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$Companion'), 'prototype'), 'entryHashCode_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      return new PhiBinaryOperation('^', new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('e'), 'key')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiNameRef('tmp$'))), null)), null), new PhiNameRef('tmp$_0'), 0.0), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('e'), 'value')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiNameRef('tmp$_1'))), null)), null), new PhiNameRef('tmp$_2'), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$Companion'), 'prototype'), 'entryToString_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('e'), 'key'))), new PhiStringLiteral('=')), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('e'), 'value'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap$Companion'), 'prototype'), 'entryEquals_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Map$Entry')))))) {
        return false;
      }
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('e'), 'key'), new PhiDot(new PhiNameRef('other'), 'key'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('e'), 'value'), new PhiDot(new PhiNameRef('other'), 'value'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('AbstractMap$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Map'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractSet'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('other'), new PhiNameRef('this')))) {
        return true;
      }
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Set')))))) {
        return false;
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractSet$Companion_getInstance'), array()), 'setEquals_0'), array(new PhiNameRef('this'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractSet'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiNameRef('AbstractSet$Companion_getInstance'), array()), 'unorderedHashCode_0'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractSet$Companion'), 'prototype'), 'unorderedHashCode_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('hashCode', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('c'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('hashCode'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('hashCode'), new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('element'), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiNameRef('element'))), null)), null), new PhiNameRef('tmp$_0'), 0.0)), 0.0)));
      }
      return new PhiNameRef('hashCode');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractSet$Companion'), 'prototype'), 'setEquals_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('c'), 'size'), new PhiDot(new PhiNameRef('other'), 'size')))) {
        return false;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('c'), 'containsAll_brywnq$'), array(new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractSet$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('AbstractSet$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractSet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractSet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Set'), new PhiNameRef('AbstractCollection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyIterator'), 'prototype'), 'hasPrevious'), new PhiFunctionExpression(null, array(), function () {
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyIterator'), 'prototype'), 'nextIndex'), new PhiFunctionExpression(null, array(), function () {
      return 0.0;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyIterator'), 'prototype'), 'previousIndex'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('-', 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyIterator'), 'prototype'), 'previous'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EmptyIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EmptyIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ListIterator'))))))));
    phiVars(array(array('EmptyIterator_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('List'))), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return 1.0;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('[]');
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return 0.0;
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'containsAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'isEmpty'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral("Empty list doesn't contain element at index "), new PhiNameRef('index')), new PhiStringLiteral('.')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'indexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('-', 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'lastIndexOf_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('-', 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyIterator_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'listIterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyIterator_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'listIterator_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('index'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiStringLiteral('Index: '), new PhiNameRef('index')))));
      }
      return new PhiInvocation(new PhiNameRef('EmptyIterator_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'subList_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiNameRef('fromIndex'), 0.0), new PhiBinaryOperation('===', new PhiNameRef('toIndex'), 0.0)))) {
        return new PhiNameRef('this');
      }
      phiThrow(new PhiNew(new PhiNameRef('IndexOutOfBoundsException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('fromIndex: '), new PhiNameRef('fromIndex')), new PhiStringLiteral(', toIndex: ')), new PhiNameRef('toIndex')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyList'), 'prototype'), 'readResolve_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyList_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EmptyList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EmptyList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('RandomAccess'), new PhiNameRef('Serializable'), new PhiNameRef('List'))))))));
    phiVars(array(array('EmptyList_instance', null)));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ArrayAsCollection'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'values'), 'length');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayAsCollection'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiDot(new PhiNameRef('this'), 'values'), 'length'), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayAsCollection'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('contains'), array(new PhiDot(new PhiNameRef('this'), 'values'), new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayAsCollection'), 'prototype'), 'containsAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('all$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label all$break'));
        {
          phiVars(array(array('tmp$', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
            phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'contains_11rb$'), array(new PhiNameRef('element')))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('all$result'), false));
              phiExpressionStatement(new PhiNameRef('goto all_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('all$result'), true));
        }
        phiExpressionStatement(new PhiNameRef('all_usd_break:'));
      }
      return new PhiNameRef('all$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayAsCollection'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'arrayIterator'), array(new PhiDot(new PhiNameRef('this'), 'values')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ArrayAsCollection'), 'prototype'), 'toArray'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('this'), 'values'))));
      return new PhiConditional(new PhiDot(new PhiNameRef('this'), 'isVarargs'), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'slice'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ArrayAsCollection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ArrayAsCollection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Collection'))))))));
    phiVars(array(array('listOf_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.listOf_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array());
    }))))));
    phiVars(array(array('mutableListOf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mutableListOf_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))))));
    phiVars(array(array('arrayListOf_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.arrayListOf_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array());
    }))))));
    phiVars(array(array('List_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.List_rz0iom$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('init'), array(new PhiNameRef('index'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('MutableList_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.MutableList_rz0iom$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('list', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'ArrayList_init_ww73n8$'), array(new PhiNameRef('size'))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('size'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('list'), 'add_11rb$'), array(new PhiInvocation(new PhiNameRef('init'), array(new PhiNameRef('index'))))));
      }
      return new PhiNameRef('list');
    }))))));
    phiVars(array(array('isNotEmpty_9', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_4c7yge$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()));
    }))))));
    phiVars(array(array('orEmpty_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.orEmpty_13nbcr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('$receiver'), null), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array()));
    }))))));
    phiVars(array(array('orEmpty_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.orEmpty_63d8zf$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('$receiver'), null), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyList_287e2$'), array()));
    }))))));
    phiVars(array(array('containsAll', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.containsAll_4mi8vl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'containsAll_brywnq$'), array(new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('binarySearchBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.binarySearchBy_7gj2ve$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('fromIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('fromIndex'), 0.0));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('toIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('toIndex'), new PhiDot(new PhiNameRef('$receiver'), 'size')));
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'binarySearch_sr7qim$'), array(new PhiNameRef('$receiver'), new PhiNameRef('fromIndex'), new PhiNameRef('toIndex'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'binarySearchBy$f'), array(new PhiNameRef('selector'), new PhiNameRef('key')))));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Grouping'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Grouping')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('aggregate', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.aggregate_kz95qp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('key'), new PhiNameRef('accumulator'), new PhiNameRef('e'), new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('aggregateTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.aggregateTo_qtifb3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('key'), new PhiNameRef('accumulator'), new PhiNameRef('e'), new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('fold_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_2g9ybd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))), new PhiInvocation(new PhiNameRef('initialValueSelector'), array(new PhiNameRef('key'), new PhiNameRef('e'))), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('foldTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldTo_ldb57n$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))), new PhiInvocation(new PhiNameRef('initialValueSelector'), array(new PhiNameRef('key'), new PhiNameRef('e'))), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('fold_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.fold_id3q3f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))), new PhiNameRef('initialValue'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('foldTo_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.foldTo_1dwgsv$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('tmp$_0', )));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiConditional(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))), new PhiNameRef('initialValue'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))), new PhiNameRef('e'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('reduce_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduce_hy0spo$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('operation$result', )));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('operation$result'), new PhiNameRef('e')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('operation$result'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('e')))));
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('operation$result'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('reduceTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.reduceTo_vpctix$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'sourceIterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('e', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'keyOf_11rb$'), array(new PhiNameRef('e'))))));
        phiVars(array(array('accumulator', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'get_11rb$'), array(new PhiNameRef('key'))))));
        phiVars(array(array('operation$result', )));
        phiVars(array(array('tmp$_0', )));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('accumulator'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('operation$result'), new PhiNameRef('e')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('operation$result'), new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('key'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiNameRef('accumulator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Object')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('e')))));
        }
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('operation$result'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IndexedValue'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IndexedValue')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexedValue'), 'prototype'), 'component1'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'index');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexedValue'), 'prototype'), 'component2'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'value');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexedValue'), 'prototype'), 'copy_wxm5ur$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexedValue'), array(new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('index'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'index'), new PhiNameRef('index')), new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('value'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'value'), new PhiNameRef('value'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexedValue'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('IndexedValue(index='), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'index')))), new PhiBinaryOperation('+', new PhiStringLiteral(', value='), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'value'))))), new PhiStringLiteral(')'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexedValue'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'index')))), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'value')))), 0.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexedValue'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')), new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('other'), null), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('other')), new PhiStringLiteral('object')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('this'))), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('other')))), new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'index'), new PhiDot(new PhiNameRef('other'), 'index'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'value'), new PhiDot(new PhiNameRef('other'), 'value'))))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Iterable$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Iterable$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterable'))))))));
    phiVars(array(array('Iterable_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.Iterable_ms0qmx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Iterable$f'), array(new PhiNameRef('iterator_3')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexingIterable'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingIterator'), array(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'iteratorFactory_0'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IndexingIterable'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IndexingIterable')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterable'))))))));
    phiVars(array(array('iterator_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.iterator_35ci02$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('forEach_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.forEach_p594rv$'), new PhiFunctionExpression(null, array(), function () {
      while (new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('element'))));
      }
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexingIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator_0'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexingIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiNew(new PhiNameRef('IndexedValue'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'index_0')), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator_0'), 'next'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IndexingIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IndexingIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiVars(array(array('getValue', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getValue_u8h43m$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrImplicitDefault_t9ocha$'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('property'), 'callableName')))), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('getValue_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getValue_ag2o6f$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'getOrImplicitDefault_t9ocha$'), array(new PhiNameRef('$receiver'), new PhiDot(new PhiNameRef('property'), 'callableName')))), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Object')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    }))))));
    phiVars(array(array('setValue', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.setValue_p0hbkv$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('property'), 'callableName'), new PhiNameRef('value'))));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MapWithDefault'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MapWithDefault')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Map'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableMapWithDefault'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableMapWithDefault')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MapWithDefault'), new PhiNameRef('MutableMap'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('map'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'map_rp2f9x$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'map'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'map')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'toString'), array());
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'isEmpty'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'containsKey_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'containsKey_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'containsValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'containsValue_11rc$'), array(new PhiNameRef('value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'get_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('keys'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'keys');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('values'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'values');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('entries'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'entries');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'getOrImplicitDefault_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('this'), 'map'))));
      phiVars(array(array('getOrElseNullable$result', )));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('value'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('getOrElseNullable$result'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'default_0'), array(new PhiNameRef('key')))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('getOrElseNullable$result'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('value')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
      }
      return new PhiNameRef('getOrElseNullable$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MapWithDefaultImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MapWithDefaultImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MapWithDefault'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('map'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'map_l3gl7f$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'map'), new PhiNameRef('other')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'map')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'toString'), array());
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'isEmpty'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'containsKey_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'containsKey_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'containsValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'containsValue_11rc$'), array(new PhiNameRef('value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'get_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('keys'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'keys');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('values'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'values');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), new PhiStringLiteral('entries'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'entries');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'put_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'remove_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'remove_11rb$'), array(new PhiNameRef('key')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'putAll_a2k3zr$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'putAll_a2k3zr$'), array(new PhiNameRef('from'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'map'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'getOrImplicitDefault_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiDot(new PhiNameRef('this'), 'map'))));
      phiVars(array(array('getOrElseNullable$result', )));
      phiVars(array(array('tmp$', )));
      phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiBinaryOperation('==', new PhiNameRef('value'), null), new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'containsKey_11rb$'), array(new PhiNameRef('key'))))))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('getOrElseNullable$result'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'default_0'), array(new PhiNameRef('key')))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('getOrElseNullable$result'), new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('value')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
      }
      return new PhiNameRef('getOrElseNullable$result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MutableMapWithDefaultImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MutableMapWithDefault'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Map'))), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return 0.0;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('{}');
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return 0.0;
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'containsKey_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'containsValue_11rc$'), new PhiFunctionExpression(null, array(), function () {
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'get_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return null;
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), new PhiStringLiteral('entries'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptySet_getInstance'), array());
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), new PhiStringLiteral('keys'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptySet_getInstance'), array());
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), new PhiStringLiteral('values'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyList_getInstance'), array());
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'readResolve_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyMap_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EmptyMap'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EmptyMap')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Serializable'), new PhiNameRef('Map'))))))));
    phiVars(array(array('EmptyMap_instance', null)));
    phiVars(array(array('mapOf_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapOf_q3lmfv$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyMap_q3lmfv$'), array());
    }))))));
    phiVars(array(array('mutableMapOf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mutableMapOf_q3lmfv$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array());
    }))))));
    phiVars(array(array('hashMapOf_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.hashMapOf_q3lmfv$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashMap_init_q3lmfv$'), array());
    }))))));
    phiVars(array(array('linkedMapOf_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.linkedMapOf_q3lmfv$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array());
    }))))));
    phiVars(array(array('INT_MAX_POWER_OF_TWO', )));
    phiVars(array(array('isNotEmpty_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.isNotEmpty_abgq59$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'isEmpty'), array()));
    }))))));
    phiVars(array(array('orEmpty_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.orEmpty_f3wkhh$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('$receiver'), null), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptyMap_q3lmfv$'), array()));
    }))))));
    phiVars(array(array('contains_40', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.contains_4pa84t$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Map'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'containsKey_11rb$'), array(new PhiNameRef('key')));
    }))))));
    phiVars(array(array('get_45', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.get_4pa84t$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Map'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'get_11rb$'), array(new PhiNameRef('key')));
    }))))));
    phiVars(array(array('set_18', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.set_6y9eq4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('value'))));
    }))))));
    phiVars(array(array('containsKey', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.containsKey_ysgkzk$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'Map'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'containsKey_11rb$'), array(new PhiNameRef('key')));
    }))))));
    phiVars(array(array('containsValue', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.containsValue_bvbopf$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'containsValue_11rc$'), array(new PhiNameRef('value')));
    }))))));
    phiVars(array(array('remove', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.remove_vbdv38$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'MutableMap'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'remove_11rb$'), array(new PhiNameRef('key')));
    }))))));
    phiVars(array(array('component1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component1_gzf0zl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'key');
    }))))));
    phiVars(array(array('component2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.component2_gzf0zl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'value');
    }))))));
    phiVars(array(array('toPair', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.toPair_gzf0zl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'Pair'), array(new PhiDot(new PhiNameRef('$receiver'), 'key'), new PhiDot(new PhiNameRef('$receiver'), 'value')));
    }))))));
    phiVars(array(array('getOrElse_10', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrElse_illxjf$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_11rb$'), array(new PhiNameRef('key')))), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiNameRef('defaultValue'), array()));
    }))))));
    phiVars(array(array('getOrPut', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.getOrPut_9wl75a$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('value', new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'get_11rb$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
        phiVars(array(array('answer', new PhiInvocation(new PhiNameRef('defaultValue'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'put_xwzc9p$'), array(new PhiNameRef('key'), new PhiNameRef('answer'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('answer')));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('value')));
      }
      return new PhiNameRef('tmp$');
    }))))));
    phiVars(array(array('iterator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.iterator_abgq59$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array());
    }))))));
    phiVars(array(array('mapValuesTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapValuesTo_8auxj8$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapKeysTo', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapKeysTo_l1xmvz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))), new PhiDot(new PhiNameRef('element'), 'value'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapValues', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapValues_8169ik$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('mapKeys', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mapKeys_8169ik$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_xf5xz2$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'mapCapacity_za3lpa$'), array(new PhiDot(new PhiNameRef('$receiver'), 'size'))))))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('element'))), new PhiDot(new PhiNameRef('element'), 'value'))));
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterKeys', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterKeys_bbcyu0$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('entry', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiDot(new PhiNameRef('entry'), 'key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('entry'), 'key'), new PhiDot(new PhiNameRef('entry'), 'value'))));
        }
      }
      return new PhiNameRef('result');
    }))))));
    phiVars(array(array('filterValues', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterValues_btttvb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('result', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('entry', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiDot(new PhiNameRef('entry'), 'value'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('result'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('entry'), 'key'), new PhiDot(new PhiNameRef('entry'), 'value'))));
        }
      }
      return new PhiNameRef('result');
    }))))));
    phiVars(array(array('filterTo_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterTo_6i6lq2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiDot(new PhiNameRef('element'), 'value'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filter_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filter_9peqz9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiDot(new PhiNameRef('element'), 'value'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNotTo_11', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNotTo_6i6lq2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiDot(new PhiNameRef('element'), 'value'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('filterNot_12', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.filterNot_9peqz9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('destination', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashMap_init_q3lmfv$'), array()))));
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('$receiver'), 'entries'), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('element')))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('destination'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('element'), 'key'), new PhiDot(new PhiNameRef('element'), 'value'))));
        }
      }
      return new PhiNameRef('destination');
    }))))));
    phiVars(array(array('plusAssign', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_iu53pl$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'put_xwzc9p$'), array(new PhiDot(new PhiNameRef('pair'), 'first'), new PhiDot(new PhiNameRef('pair'), 'second'))));
    }))))));
    phiVars(array(array('plusAssign_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_cweazw$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'putAll_cweazw$'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
    }))))));
    phiVars(array(array('plusAssign_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_5gv49o$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'putAll_5gv49o$'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
    }))))));
    phiVars(array(array('plusAssign_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_2ud8ki$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'putAll_2ud8ki$'), array(new PhiNameRef('$receiver'), new PhiNameRef('pairs'))));
    }))))));
    phiVars(array(array('plusAssign_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_i7ax6h$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'putAll_a2k3zr$'), array(new PhiNameRef('map_12'))));
    }))))));
    phiVars(array(array('minusAssign', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_5rmzjt$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'remove_11rb$'), array(new PhiNameRef('key'))));
    }))))));
    phiVars(array(array('minusAssign_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_zgveeq$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_ipc267$'), array(new PhiDot(new PhiNameRef('$receiver'), 'keys'), new PhiNameRef('keys'))));
    }))))));
    phiVars(array(array('minusAssign_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_kom96y$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_ye1y7v$'), array(new PhiDot(new PhiNameRef('$receiver'), 'keys'), new PhiNameRef('keys'))));
    }))))));
    phiVars(array(array('minusAssign_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_1zq34s$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_tj7pfx$'), array(new PhiDot(new PhiNameRef('$receiver'), 'keys'), new PhiNameRef('keys'))));
    }))))));
    phiVars(array(array('remove_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.remove_cz4ny2$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'MutableCollection'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'remove_11rb$'), array(new PhiNameRef('element')));
    }))))));
    phiVars(array(array('removeAll_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.removeAll_qrknmz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'MutableCollection'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'removeAll_brywnq$'), array(new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('retainAll_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.retainAll_qrknmz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'MutableCollection'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), 'retainAll_brywnq$'), array(new PhiNameRef('elements')));
    }))))));
    phiVars(array(array('remove_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.remove_tkbrz9$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'removeAt_za3lpa$'), array(new PhiNameRef('index')));
    }))))));
    phiVars(array(array('plusAssign_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_mohyd4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'add_11rb$'), array(new PhiNameRef('element'))));
    }))))));
    phiVars(array(array('plusAssign_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_ipc267$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ipc267$'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
    }))))));
    phiVars(array(array('plusAssign_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_x8tvoq$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_ye1y7v$'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
    }))))));
    phiVars(array(array('plusAssign_7', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.plusAssign_tj7pfx$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'addAll_tj7pfx$'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
    }))))));
    phiVars(array(array('minusAssign_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_mohyd4$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'remove_11rb$'), array(new PhiNameRef('element'))));
    }))))));
    phiVars(array(array('minusAssign_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_ipc267$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_ipc267$'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
    }))))));
    phiVars(array(array('minusAssign_5', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_x8tvoq$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_ye1y7v$'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
    }))))));
    phiVars(array(array('minusAssign_6', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.minusAssign_tj7pfx$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'removeAll_tj7pfx$'), array(new PhiNameRef('$receiver'), new PhiNameRef('elements'))));
    }))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ReversedListReadOnly'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedListReadOnly'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'get_za3lpa$'), array(new PhiInvocation(new PhiNameRef('reverseElementIndex'), array(new PhiNameRef('this'), new PhiNameRef('index')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReversedListReadOnly'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ReversedListReadOnly')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractList'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'size');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), 'get_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'get_za3lpa$'), array(new PhiInvocation(new PhiNameRef('reverseElementIndex'), array(new PhiNameRef('this'), new PhiNameRef('index')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), 'clear'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'clear'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), 'removeAt_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'removeAt_za3lpa$'), array(new PhiInvocation(new PhiNameRef('reverseElementIndex'), array(new PhiNameRef('this'), new PhiNameRef('index')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), 'set_wxm5ur$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'set_wxm5ur$'), array(new PhiInvocation(new PhiNameRef('reverseElementIndex'), array(new PhiNameRef('this'), new PhiNameRef('index'))), new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedList'), 'prototype'), 'add_wxm5ur$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'delegate_0'), 'add_wxm5ur$'), array(new PhiInvocation(new PhiNameRef('reversePositionIndex'), array(new PhiNameRef('this'), new PhiNameRef('index'))), new PhiNameRef('element'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReversedList'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ReversedList')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractMutableList'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Sequence_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Sequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Sequence$ObjectLiteral'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$iterator'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Sequence$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiVars(array(array('Sequence', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.sequences.Sequence_ms0qmx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'sequences'), 'Sequence$f'), array(new PhiNameRef('iterator_3')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyIterator_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySequence'), 'prototype'), 'drop_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptySequence_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySequence'), 'prototype'), 'take_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptySequence_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EmptySequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EmptySequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('DropTakeSequence'), new PhiNameRef('Sequence_0'))))))));
    phiVars(array(array('EmptySequence_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FilteringSequence$iterator$ObjectLiteral'), 'prototype'), 'calcNext_0'), new PhiFunctionExpression(null, array(), function () {
      while (new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$FilteringSequence'), 'predicate_0'), array(new PhiNameRef('item'))), new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$FilteringSequence'), 'sendWhen_0'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), new PhiNameRef('item')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), 1.0));
          return;
        }
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FilteringSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiVars(array(array('result', new PhiDot(new PhiNameRef('this'), 'nextItem'))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)));
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('result')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FilteringSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('FilteringSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FilteringSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('FilteringSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('FilteringSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('FilteringSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TransformingSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$TransformingSequence'), 'transformer_0'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TransformingSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TransformingSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TransformingSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TransformingSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TransformingSequence'), 'prototype'), 'flatten_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('FlatteningSequence'), array(new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiDot(new PhiNameRef('this'), 'transformer_0'), new PhiNameRef('iterator_3')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TransformingSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('TransformingSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TransformingIndexedSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$TransformingIndexedSequence'), 'transformer_0'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'index')), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TransformingIndexedSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TransformingIndexedSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TransformingIndexedSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TransformingIndexedSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TransformingIndexedSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('TransformingIndexedSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexingSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiNew(new PhiNameRef('IndexedValue'), array(new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'index')), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$')), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexingSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IndexingSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('IndexingSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('IndexingSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('IndexingSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('IndexingSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MergingSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$MergingSequence'), 'transform_0'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator1'), 'next'), array()), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator2'), 'next'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MergingSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator1'), 'hasNext'), array()), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator2'), 'hasNext'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MergingSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MergingSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('MergingSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MergingSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MergingSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FlatteningSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'ensureItemIterator_0'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      return new PhiInvocation(new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'itemIterator')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'next'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FlatteningSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'ensureItemIterator_0'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FlatteningSequence$iterator$ObjectLiteral'), 'prototype'), 'ensureItemIterator_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'itemIterator')), null), new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array()), null), false)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'itemIterator'), null));
      }
      while (new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'itemIterator'), null)) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array())))) {
          return false;
        }
         else {
          phiVars(array(array('element', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array()))));
          phiVars(array(array('nextItemIterator', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$FlatteningSequence'), 'iterator_0'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$FlatteningSequence'), 'transformer_0'), array(new PhiNameRef('element'))))))));
          if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('nextItemIterator'), 'hasNext'), array()))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'itemIterator'), new PhiNameRef('nextItemIterator')));
            return true;
          }
        }
      }
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('FlatteningSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('FlatteningSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('FlatteningSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('FlatteningSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('FlatteningSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DropTakeSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DropTakeSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('SubSequence'), 'prototype'), new PhiStringLiteral('count_0'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'endIndex_0'), new PhiDot(new PhiNameRef('this'), 'startIndex_0')), 0.0);
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SubSequence'), 'prototype'), 'drop_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('this'), 'count_0')), new PhiInvocation(new PhiNameRef('emptySequence'), array()), new PhiNew(new PhiNameRef('SubSequence'), array(new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'startIndex_0'), new PhiNameRef('n')), 0.0), new PhiDot(new PhiNameRef('this'), 'endIndex_0'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SubSequence'), 'prototype'), 'take_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('this'), 'count_0')), new PhiNameRef('this'), new PhiNew(new PhiNameRef('SubSequence'), array(new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiDot(new PhiNameRef('this'), 'startIndex_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'startIndex_0'), new PhiNameRef('n')), 0.0))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SubSequence$iterator$ObjectLiteral'), 'prototype'), 'drop_0'), new PhiFunctionExpression(null, array(), function () {
      while (new PhiBinaryOperation('&&', new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'position'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$SubSequence'), 'startIndex_0')), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array()))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array()));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'position'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'position'), 1.0), 0.0)));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SubSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'drop_0'), array()));
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'position'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$SubSequence'), 'endIndex_0')), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SubSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'drop_0'), array()));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'position'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$SubSequence'), 'endIndex_0')))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'position'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'position'), 1.0), 0.0)));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('SubSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SubSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('SubSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('SubSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SubSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('DropTakeSequence'), new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeSequence'), 'prototype'), 'drop_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('this'), 'count_0')), new PhiInvocation(new PhiNameRef('emptySequence'), array()), new PhiNew(new PhiNameRef('SubSequence'), array(new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('n'), new PhiDot(new PhiNameRef('this'), 'count_0'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeSequence'), 'prototype'), 'take_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('>=', new PhiNameRef('n'), new PhiDot(new PhiNameRef('this'), 'count_0')), new PhiNameRef('this'), new PhiNew(new PhiNameRef('TakeSequence'), array(new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiNameRef('n'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'left'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'left'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'left'), 1.0), 0.0)));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'left'), 0.0), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TakeSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TakeSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TakeSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('TakeSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('DropTakeSequence'), new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeWhileSequence$iterator$ObjectLiteral'), 'prototype'), 'calcNext_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array()))) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$TakeWhileSequence'), 'predicate_0'), array(new PhiNameRef('item'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), 1.0));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), new PhiNameRef('item')));
          return;
        }
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeWhileSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiVars(array(array('result', new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'nextItem')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeWhileSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TakeWhileSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('TakeWhileSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('TakeWhileSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('TakeWhileSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('TakeWhileSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropSequence'), 'prototype'), 'drop_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('DropSequence'), array(new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'count_0'), new PhiNameRef('n')), 0.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropSequence'), 'prototype'), 'take_za3lpa$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('SubSequence'), array(new PhiDot(new PhiNameRef('this'), 'sequence_0'), new PhiDot(new PhiNameRef('this'), 'count_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'count_0'), new PhiNameRef('n')), 0.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropSequence$iterator$ObjectLiteral'), 'prototype'), 'drop_0'), new PhiFunctionExpression(null, array(), function () {
      while (new PhiBinaryOperation('&&', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'left'), 0.0), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array()))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array()));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'left'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'left'), 1.0), 0.0)));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'drop_0'), array()));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'drop_0'), array()));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DropSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('DropSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DropSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DropSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('DropTakeSequence'), new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropWhileSequence$iterator$ObjectLiteral'), 'prototype'), 'drop_0'), new PhiFunctionExpression(null, array(), function () {
      while (new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array())) {
        phiVars(array(array('item', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DropWhileSequence'), 'predicate_0'), array(new PhiNameRef('item')))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), new PhiNameRef('item')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'dropState'), 1.0));
          return;
        }
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'dropState'), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropWhileSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'dropState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'drop_0'), array()));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'dropState'), 1.0))) {
        phiVars(array(array('result', new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'nextItem')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'dropState'), 0.0));
        return new PhiNameRef('result');
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'next'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropWhileSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'dropState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'drop_0'), array()));
      }
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'dropState'), 1.0), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'iterator'), 'hasNext'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DropWhileSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DropWhileSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('DropWhileSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DropWhileSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DropWhileSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DistinctSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('DistinctIterator'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'source_0'), 'iterator'), array()), new PhiDot(new PhiNameRef('this'), 'keySelector_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DistinctSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DistinctSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DistinctIterator'), 'prototype'), 'computeNext'), new PhiFunctionExpression(null, array(), function () {
      while (new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'source_0'), 'hasNext'), array())) {
        phiVars(array(array('next', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'source_0'), 'next'), array()))));
        phiVars(array(array('key', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'keySelector_0'), array(new PhiNameRef('next'))))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'observed_0'), 'add_11rb$'), array(new PhiNameRef('key'))))) {
          phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'setNext_11rb$'), array(new PhiNameRef('next'))));
          return;
        }
      }
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'done'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DistinctIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DistinctIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('AbstractIterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('GeneratorSequence$iterator$ObjectLiteral'), 'prototype'), 'calcNext_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 2.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$GeneratorSequence'), 'getInitialValue_0'), array())));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$GeneratorSequence'), 'getNextValue_0'), array(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'nextItem')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()))))));
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), new PhiNameRef('tmp$_0')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiConditional(new PhiBinaryOperation('==', new PhiDot(new PhiNameRef('this'), 'nextItem'), null), 0.0, 1.0)));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('GeneratorSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiVars(array(array('result', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'nextItem')), new PhiNameRef('Any'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('GeneratorSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('GeneratorSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('GeneratorSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('GeneratorSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('GeneratorSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('GeneratorSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('Set'))), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return 0.0;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('[]');
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), new PhiStringLiteral('size'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return 0.0;
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'contains_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return false;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'containsAll_brywnq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'isEmpty'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyIterator_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptySet'), 'prototype'), 'readResolve_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptySet_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EmptySet'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EmptySet')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Serializable'), new PhiNameRef('Set'))))))));
    phiVars(array(array('EmptySet_instance', null)));
    phiVars(array(array('setOf_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.setOf_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptySet_287e2$'), array());
    }))))));
    phiVars(array(array('mutableSetOf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.mutableSetOf_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashSet_init_287e2$'), array());
    }))))));
    phiVars(array(array('hashSetOf_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.hashSetOf_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'HashSet_init_287e2$'), array());
    }))))));
    phiVars(array(array('linkedSetOf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.linkedSetOf_287e2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'LinkedHashSet_init_287e2$'), array());
    }))))));
    phiVars(array(array('orEmpty_3', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.collections.orEmpty_og2qkj$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('$receiver'), null), new PhiNameRef('$receiver'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'collections'), 'emptySet_287e2$'), array()));
    }))))));
    phiVars(array(array('compareValuesBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.compareValuesBy_tsaocy$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareValues_s00gnj$'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b')))));
    }))))));
    phiVars(array(array('compareValuesBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.compareValuesBy_5evai1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b')))));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('compareBy$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('compareValuesBy'), array(new PhiNameRef('a'), new PhiNameRef('b'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$selectors'), 'slice'), array())));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('compareBy$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('compareBy$ObjectLiteral_0'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareValues_s00gnj$'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('compareBy$ObjectLiteral_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('compareBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.compareBy_34mekm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f'), array(new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('compareBy$ObjectLiteral_1'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('comparator', new PhiDot(new PhiNameRef('this'), 'closure$comparator'))));
      phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('compareBy$ObjectLiteral_1'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('compareBy_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.compareBy_82qo4j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareBy$f_0'), array(new PhiNameRef('comparator'), new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('compareByDescending$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareValues_s00gnj$'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('compareByDescending$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('compareByDescending', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.compareByDescending_34mekm$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f'), array(new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('compareByDescending$ObjectLiteral_0'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('comparator', new PhiDot(new PhiNameRef('this'), 'closure$comparator'))));
      phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('compareByDescending$ObjectLiteral_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('compareByDescending_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.compareByDescending_82qo4j$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareByDescending$f_0'), array(new PhiNameRef('comparator'), new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('thenBy$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('previousCompare', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$thenBy'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('previousCompare'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('previousCompare')));
      }
       else {
        phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareValues_s00gnj$'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b')))))));
      }
      return new PhiNameRef('tmp$');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('thenBy$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('thenBy', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.thenBy_8bk9gc$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'thenBy$f'), array(new PhiNameRef('$receiver'), new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('thenBy$ObjectLiteral_0'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('previousCompare', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$thenBy'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('previousCompare'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('previousCompare')));
      }
       else {
        phiVars(array(array('comparator', new PhiDot(new PhiNameRef('this'), 'closure$comparator'))));
        phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b')))))));
      }
      return new PhiNameRef('tmp$');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('thenBy$ObjectLiteral_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('thenBy_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.thenBy_g2gg1x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'thenBy$f_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparator'), new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('thenByDescending$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('previousCompare', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$thenByDescending'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('previousCompare'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('previousCompare')));
      }
       else {
        phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'compareValues_s00gnj$'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a')))))));
      }
      return new PhiNameRef('tmp$');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('thenByDescending$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('thenByDescending', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.thenByDescending_8bk9gc$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'thenByDescending$f'), array(new PhiNameRef('$receiver'), new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('thenByDescending$ObjectLiteral_0'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('previousCompare', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$thenByDescending'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))))));
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('previousCompare'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('previousCompare')));
      }
       else {
        phiVars(array(array('comparator', new PhiDot(new PhiNameRef('this'), 'closure$comparator'))));
        phiVars(array(array('selector', new PhiDot(new PhiNameRef('this'), 'closure$selector'))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('comparator'), 'compare'), array(new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('b'))), new PhiInvocation(new PhiNameRef('selector'), array(new PhiNameRef('a')))))));
      }
      return new PhiNameRef('tmp$');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('thenByDescending$ObjectLiteral_0'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('thenByDescending_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.thenByDescending_g2gg1x$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'thenByDescending$f_0'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparator'), new PhiNameRef('selector')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('thenComparator$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('previousCompare', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$thenComparator'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))))));
      return new PhiConditional(new PhiBinaryOperation('!==', new PhiNameRef('previousCompare'), 0.0), new PhiNameRef('previousCompare'), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$comparison'), array(new PhiNameRef('a'), new PhiNameRef('b'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('thenComparator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('thenComparator', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.thenComparator_yg42ks$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'thenComparator$f'), array(new PhiNameRef('$receiver'), new PhiNameRef('comparison')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('then$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('previousCompare', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$then'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))))));
      return new PhiConditional(new PhiBinaryOperation('!==', new PhiNameRef('previousCompare'), 0.0), new PhiNameRef('previousCompare'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$comparator'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('then$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('thenDescending$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('previousCompare', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$thenDescending'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b'))))));
      return new PhiConditional(new PhiBinaryOperation('!==', new PhiNameRef('previousCompare'), 0.0), new PhiNameRef('previousCompare'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$comparator'), 'compare'), array(new PhiNameRef('b'), new PhiNameRef('a'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('thenDescending$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('nullsFirst$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('a'), new PhiNameRef('b')))) {
        return 0.0;
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('a'), null))) {
        return new PhiPrefixOperation('-', 1.0);
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('b'), null))) {
        return 1.0;
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$comparator'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('nullsFirst$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('nullsFirst_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.nullsFirst_dahdeg$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'nullsFirst_c94i6r$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'naturalOrder_dahdeg$'), array())));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('nullsLast$ObjectLiteral'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('a'), new PhiNameRef('b')))) {
        return 0.0;
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('a'), null))) {
        return 1.0;
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('b'), null))) {
        return new PhiPrefixOperation('-', 1.0);
      }
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'closure$comparator'), 'compare'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('nullsLast$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('nullsLast_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.comparisons.nullsLast_dahdeg$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'nullsLast_c94i6r$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'comparisons'), 'naturalOrder_dahdeg$'), array())));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedComparator'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'comparator'), 'compare'), array(new PhiNameRef('b'), new PhiNameRef('a')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReversedComparator'), 'prototype'), 'reversed'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'comparator');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReversedComparator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ReversedComparator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NaturalOrderComparator'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('a'), new PhiNameRef('b')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NaturalOrderComparator'), 'prototype'), 'reversed'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('ReverseOrderComparator_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NaturalOrderComparator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NaturalOrderComparator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('NaturalOrderComparator_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReverseOrderComparator'), 'prototype'), 'compare'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'compareTo'), array(new PhiNameRef('b'), new PhiNameRef('a')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ReverseOrderComparator'), 'prototype'), 'reversed'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('NaturalOrderComparator_getInstance'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReverseOrderComparator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ReverseOrderComparator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparator'))))))));
    phiVars(array(array('ReverseOrderComparator_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ContinuationInterceptor$Key'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Key')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CoroutineContext$Key'))))))));
    phiVars(array(array('ContinuationInterceptor$Key_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ContinuationInterceptor'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ContinuationInterceptor')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CoroutineContext$Element'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CoroutineContext$Element'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Element')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CoroutineContext'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CoroutineContext$Key'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Key')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CoroutineContext'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CoroutineContext')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('AbstractCoroutineContextElement'), 'prototype'), new PhiStringLiteral('key'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'key_d52xrr$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCoroutineContextElement'), 'prototype'), 'get_8oh8b3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'key'), new PhiNameRef('key')), new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('this')), new PhiNameRef('CoroutineContext$Element'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), null);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCoroutineContextElement'), 'prototype'), 'fold_m9u1mr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('operation'), array(new PhiNameRef('initial'), new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCoroutineContextElement'), 'prototype'), 'plus_dvqyjb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('plusImpl'), array(new PhiNameRef('this'), new PhiNameRef('context')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractCoroutineContextElement'), 'prototype'), 'minusKey_ds72xk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'key'), new PhiNameRef('key')), new PhiInvocation(new PhiNameRef('EmptyCoroutineContext_getInstance'), array()), new PhiNameRef('this'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('AbstractCoroutineContextElement'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('AbstractCoroutineContextElement')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CoroutineContext$Element'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyCoroutineContext'), 'prototype'), 'get_8oh8b3$'), new PhiFunctionExpression(null, array(), function () {
      return null;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyCoroutineContext'), 'prototype'), 'fold_m9u1mr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('initial');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyCoroutineContext'), 'prototype'), 'plus_dvqyjb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('context');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyCoroutineContext'), 'prototype'), 'minusKey_ds72xk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('this');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyCoroutineContext'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return 0.0;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyCoroutineContext'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiStringLiteral('EmptyCoroutineContext');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('EmptyCoroutineContext'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('EmptyCoroutineContext')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CoroutineContext'))))))));
    phiVars(array(array('EmptyCoroutineContext_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'get_8oh8b3$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('cur', new PhiNameRef('this'))));
      while (true) {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('cur'), 'element'), 'get_8oh8b3$'), array(new PhiNameRef('key')))), null))) {
          return new PhiNameRef('tmp$');
        }
        phiVars(array(array('next', new PhiDot(new PhiNameRef('cur'), 'left'))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('next'), new PhiNameRef('CombinedContext'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cur'), new PhiNameRef('next')));
        }
         else {
          return new PhiInvocation(new PhiDot(new PhiNameRef('next'), 'get_8oh8b3$'), array(new PhiNameRef('key')));
        }
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'fold_m9u1mr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('operation'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'left'), 'fold_m9u1mr$'), array(new PhiNameRef('initial'), new PhiNameRef('operation'))), new PhiDot(new PhiNameRef('this'), 'element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'plus_dvqyjb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('plusImpl'), array(new PhiNameRef('this'), new PhiNameRef('context')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'minusKey_ds72xk$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!=', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'element'), 'get_8oh8b3$'), array(new PhiNameRef('key'))), null))) {
        return new PhiDot(new PhiNameRef('this'), 'left');
      }
      phiVars(array(array('newLeft', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'left'), 'minusKey_ds72xk$'), array(new PhiNameRef('key'))))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('newLeft'), new PhiDot(new PhiNameRef('this'), 'left')))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('this')));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('newLeft'), new PhiInvocation(new PhiNameRef('EmptyCoroutineContext_getInstance'), array())))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'element')));
        }
         else {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNew(new PhiNameRef('CombinedContext'), array(new PhiNameRef('newLeft'), new PhiDot(new PhiNameRef('this'), 'element')))));
        }
      }
      return new PhiNameRef('tmp$');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'size_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiDot(new PhiNameRef('this'), 'left'), new PhiNameRef('CombinedContext'))), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'left'), 'size_0'), array()), 1.0), 0.0), 2.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'contains_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'get_8oh8b3$'), array(new PhiDot(new PhiNameRef('element'), 'key'))), new PhiNameRef('element')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'containsAll_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('cur', new PhiNameRef('context'))));
      while (true) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'contains_0'), array(new PhiDot(new PhiNameRef('cur'), 'element')))))) {
          return false;
        }
        phiVars(array(array('next', new PhiDot(new PhiNameRef('cur'), 'left'))));
        if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('next'), new PhiNameRef('CombinedContext'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('cur'), new PhiNameRef('next')));
        }
         else {
          return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'contains_0'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('next')), new PhiNameRef('CoroutineContext$Element'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()))));
        }
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')), new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('CombinedContext'))), new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'size_0'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'size_0'), array()))), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'containsAll_0'), array(new PhiNameRef('this')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'left'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'element')))), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('CombinedContext'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('['), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'fold_m9u1mr$'), array(new PhiStringLiteral(''), new PhiNameRef('CombinedContext$toString$lambda')))), new PhiStringLiteral(']'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CombinedContext'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('CombinedContext')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CoroutineContext'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Continuation'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Continuation')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('RestrictsSuspension'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('RestrictsSuspension')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiVars(array(array('suspendCoroutine', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.coroutines.experimental.suspendCoroutine_z3e1t3$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'coroutines'), 'experimental'), 'suspendCoroutine$f'), array(new PhiNameRef('block'))), array(new PhiNameRef('continuation')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilder'), 'prototype'), 'yieldAll_p1ys8y$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('elements'), new PhiNameRef('Collection'))), new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'isEmpty'), array())))) {
        return;
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'yieldAll_1phuh2$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('elements'), 'iterator'), array()), new PhiDot(new PhiNameRef('continuation'), 'facade')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilder'), 'prototype'), 'yieldAll_swo9gw$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'yieldAll_1phuh2$'), array(new PhiInvocation(new PhiDot(new PhiNameRef('sequence'), 'iterator'), array()), new PhiDot(new PhiNameRef('continuation'), 'facade')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('SequenceBuilder'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SequenceBuilder')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('State_NotReady', )));
    phiVars(array(array('State_ManyReady', )));
    phiVars(array(array('State_Ready', )));
    phiVars(array(array('State_Done', )));
    phiVars(array(array('State_Failed', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      while (true) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'state_0')));
        if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('tmp$'), new PhiNameRef('State_NotReady')))) {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_ManyReady')))) {
            if (phiEvaluateToBoolean(new PhiInvocation(new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('this'), 'nextIterator_0')), null), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'hasNext'), array()))) {
              return true;
            }
             else {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextIterator_0'), null));
            }
          }
           else {
            if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_Done')))) {
              return false;
            }
             else {
              if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_Ready')))) {
                return true;
              }
               else {
                phiThrow(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'exceptionalState_0'), array()));
              }
            }
          }
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), new PhiNameRef('State_Failed')));
        phiVars(array(array('step_2', new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('this'), 'nextStep')), null), new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())))));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextStep'), null));
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('step_2'), 'resume_11rb$'), array(new PhiInvocation(new PhiNameRef('Unit_getInstance'), array()))));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'state_0')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_NotReady')))) {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'nextNotReady_0'), array());
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_ManyReady')))) {
          return new PhiInvocation(new PhiDot(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('this'), 'nextIterator_0')), null), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), 'next'), array());
        }
         else {
          if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_Ready')))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), new PhiNameRef('State_NotReady')));
            phiVars(array(array('result', new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('this'), 'nextValue_0')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_1'), new PhiNameRef('Any')))), new PhiNameRef('tmp$_1'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextValue_0'), null));
            return new PhiNameRef('result');
          }
           else {
            phiThrow(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'exceptionalState_0'), array()));
          }
        }
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'nextNotReady_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'hasNext'), array())))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
       else {
        return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'next'), array());
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'exceptionalState_0'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'state_0')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_Done')))) {
        return new PhiNew(new PhiNameRef('NoSuchElementException'), array());
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('tmp$'), new PhiNameRef('State_Failed')))) {
          return new PhiNew(new PhiNameRef('IllegalStateException'), array(new PhiStringLiteral('Iterator has failed.')));
        }
         else {
          return new PhiNew(new PhiNameRef('IllegalStateException'), array(new PhiBinaryOperation('+', new PhiStringLiteral('Unexpected state of the iterator: '), new PhiDot(new PhiNameRef('this'), 'state_0'))));
        }
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'yield_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextValue_0'), new PhiNameRef('value')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), new PhiNameRef('State_Ready')));
      return new PhiInvocation(new PhiInvocation(new PhiNameRef('SequenceBuilderIterator$yield$lambda'), array(new PhiNameRef('this'))), array(new PhiNameRef('continuation')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'yieldAll_1phuh2$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('iterator_3'), 'hasNext'), array())))) {
        return;
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextIterator_0'), new PhiNameRef('iterator_3')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), new PhiNameRef('State_ManyReady')));
      return new PhiInvocation(new PhiInvocation(new PhiNameRef('SequenceBuilderIterator$yieldAll$lambda'), array(new PhiNameRef('this'))), array(new PhiNameRef('continuation')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'resume_11rb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'state_0'), new PhiNameRef('State_Done')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), 'resumeWithException_tcv7n7$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNameRef('exception'));
    })));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('SequenceBuilderIterator'), 'prototype'), new PhiStringLiteral('context'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('EmptyCoroutineContext_getInstance'), array());
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('SequenceBuilderIterator'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SequenceBuilderIterator')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Continuation'), new PhiNameRef('Iterator'), new PhiNameRef('SequenceBuilder'))))))));
    phiVars(array(array('suspendCoroutineOrReturn', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.coroutines.experimental.intrinsics.suspendCoroutineOrReturn_8ufn2u$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', null, null), null, new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array()));
    }))))));
    phiVars(array(array('COROUTINE_SUSPENDED', )));
    phiVars(array(array('and', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.and_buxqzf$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiBinaryOperation('&', new PhiNameRef('$receiver'), new PhiNameRef('other'))));
    }))))));
    phiVars(array(array('or', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.or_buxqzf$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiBinaryOperation('|', new PhiNameRef('$receiver'), new PhiNameRef('other'))));
    }))))));
    phiVars(array(array('xor', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.xor_buxqzf$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiBinaryOperation('^', new PhiNameRef('$receiver'), new PhiNameRef('other'))));
    }))))));
    phiVars(array(array('inv', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.inv_mz3mee$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toByte'), array(new PhiPrefixOperation('~', new PhiNameRef('$receiver'))));
    }))))));
    phiVars(array(array('and_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.and_mvfjzl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiBinaryOperation('&', new PhiNameRef('$receiver'), new PhiNameRef('other'))));
    }))))));
    phiVars(array(array('or_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.or_mvfjzl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiBinaryOperation('|', new PhiNameRef('$receiver'), new PhiNameRef('other'))));
    }))))));
    phiVars(array(array('xor_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.xor_mvfjzl$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiBinaryOperation('^', new PhiNameRef('$receiver'), new PhiNameRef('other'))));
    }))))));
    phiVars(array(array('inv_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.experimental.inv_5vcgdc$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toShort'), array(new PhiPrefixOperation('~', new PhiNameRef('$receiver'))));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NoInfer'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NoInfer')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Exact'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Exact')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LowPriorityInOverloadResolution'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LowPriorityInOverloadResolution')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('HidesMembers'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('HidesMembers')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('OnlyInputTypes'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('OnlyInputTypes')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InlineOnly'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('InlineOnly')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DynamicExtension'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DynamicExtension')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Annotation_0'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates'), 'prototype'), 'notNull_30y1fr$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('NotNullVar'), array());
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates$observable$ObjectLiteral'), 'prototype'), 'afterChange_jxtfl0$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$onChange'), array(new PhiNameRef('property'), new PhiNameRef('oldValue'), new PhiNameRef('newValue'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Delegates$observable$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ObservableProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates'), 'prototype'), 'observable_2ulm9r$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.properties.Delegates.observable_2ulm9r$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'properties'), 'Delegates'), 'observable$f'), array(new PhiNameRef('onChange'), new PhiNameRef('initialValue')));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates$vetoable$ObjectLiteral'), 'prototype'), 'beforeChange_jxtfl0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'closure$onChange'), array(new PhiNameRef('property'), new PhiNameRef('oldValue'), new PhiNameRef('newValue')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Delegates$vetoable$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ObservableProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates'), 'prototype'), 'vetoable_61sx1h$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.properties.Delegates.vetoable_61sx1h$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'properties'), 'Delegates'), 'vetoable$f'), array(new PhiNameRef('onChange'), new PhiNameRef('initialValue')));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Delegates'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Delegates')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('Delegates_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NotNullVar'), 'prototype'), 'getValue_lrcp0p$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'value_0')));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('tmp$'), null))) {
        phiThrow(new PhiNew(new PhiNameRef('IllegalStateException'), array(new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Property '), new PhiDot(new PhiNameRef('property'), 'callableName')), new PhiStringLiteral(' should be initialized before get.')))));
      }
      return new PhiNameRef('tmp$');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('NotNullVar'), 'prototype'), 'setValue_9rddgb$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value_0'), new PhiNameRef('value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NotNullVar'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NotNullVar')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ReadWriteProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReadOnlyProperty'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ReadOnlyProperty')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ReadWriteProperty'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ReadWriteProperty')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ObservableProperty'), 'prototype'), 'beforeChange_jxtfl0$'), new PhiFunctionExpression(null, array(), function () {
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ObservableProperty'), 'prototype'), 'afterChange_jxtfl0$'), new PhiFunctionExpression(null, array(), function () {
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ObservableProperty'), 'prototype'), 'getValue_lrcp0p$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'value_x0pqrw$_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ObservableProperty'), 'prototype'), 'setValue_9rddgb$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('oldValue', new PhiDot(new PhiNameRef('this'), 'value_x0pqrw$_0'))));
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'beforeChange_jxtfl0$'), array(new PhiNameRef('property'), new PhiNameRef('oldValue'), new PhiNameRef('value')))))) {
        return;
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'value_x0pqrw$_0'), new PhiNameRef('value')));
      phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'afterChange_jxtfl0$'), array(new PhiNameRef('property'), new PhiNameRef('oldValue'), new PhiNameRef('value'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ObservableProperty'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ObservableProperty')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ReadWriteProperty'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedFloatingPointRange'), 'prototype'), 'contains_mef7kx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'lessThanOrEquals_n65qkk$'), array(new PhiDot(new PhiNameRef('this'), 'start'), new PhiNameRef('value'))), new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'lessThanOrEquals_n65qkk$'), array(new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), 'endInclusive'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedFloatingPointRange'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'lessThanOrEquals_n65qkk$'), array(new PhiDot(new PhiNameRef('this'), 'start'), new PhiDot(new PhiNameRef('this'), 'endInclusive'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ClosedFloatingPointRange'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ClosedFloatingPointRange')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ClosedRange'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ComparableRange'), 'prototype'), new PhiStringLiteral('start'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'start_f2kfoi$_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ComparableRange'), 'prototype'), new PhiStringLiteral('endInclusive'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'endInclusive_f2kfoi$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ComparableRange'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('ComparableRange'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'start'), new PhiDot(new PhiNameRef('other'), 'start'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'endInclusive'), new PhiDot(new PhiNameRef('other'), 'endInclusive'))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ComparableRange'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'start')))), 0.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'endInclusive')))), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ComparableRange'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'start'), new PhiStringLiteral('..')), new PhiDot(new PhiNameRef('this'), 'endInclusive'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ComparableRange'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ComparableRange')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ClosedRange'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), new PhiStringLiteral('start'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), '_start_0');
    })))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), new PhiStringLiteral('endInclusive'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), '_endInclusive_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), 'lessThanOrEquals_n65qkk$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('<=', new PhiNameRef('a'), new PhiNameRef('b'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), 'contains_mef7kx$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiBinaryOperation('>=', new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), '_start_0')), new PhiBinaryOperation('<=', new PhiNameRef('value'), new PhiDot(new PhiNameRef('this'), '_endInclusive_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), 'isEmpty'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiBinaryOperation('<=', new PhiDot(new PhiNameRef('this'), '_start_0'), new PhiDot(new PhiNameRef('this'), '_endInclusive_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('other'), new PhiNameRef('ClosedDoubleRange'))), new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('other'), 'isEmpty'), array())), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), '_start_0'), new PhiDot(new PhiNameRef('other'), '_start_0')), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), '_endInclusive_0'), new PhiDot(new PhiNameRef('other'), '_endInclusive_0')))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isEmpty'), array()), new PhiPrefixOperation('-', 1.0), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('*', 31.0, new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), '_start_0')))), 0.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), '_endInclusive_0')))), 0.0));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ClosedDoubleRange'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), '_start_0'), 'toString'), array()), new PhiStringLiteral('..')), new PhiDot(new PhiNameRef('this'), '_endInclusive_0'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('ClosedDoubleRange'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('ClosedDoubleRange')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('ClosedFloatingPointRange'))))))));
    phiVars(array(array('plus_47', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.plus_elu61a$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiNameRef('String'), 'fromCharCode'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiNameRef('$receiver'))))), new PhiNameRef('other'));
    }))))));
    phiVars(array(array('buildString', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.buildString_obkquz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder'), array()))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('builderAction'), array(new PhiNameRef('$receiver'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toString'), array());
    }))))));
    phiVars(array(array('buildString_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.buildString_5yrlj9$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('$receiver', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder_init_za3lpa$'), array(new PhiNameRef('capacity'))))));
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('builderAction'), array(new PhiNameRef('$receiver'))));
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toString'), array());
    }))))));
    phiVars(array(array('trim_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trim_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('startIndex', 0.0)));
      phiVars(array(array('endIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver'), 'length'), 1.0), 0.0))));
      phiVars(array(array('startFound', false)));
      while (new PhiBinaryOperation('<=', new PhiNameRef('startIndex'), new PhiNameRef('endIndex'))) {
        phiVars(array(array('index', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('startFound')), new PhiNameRef('startIndex'), new PhiNameRef('endIndex')))));
        phiVars(array(array('match_0', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index'))))))))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('startFound')))) {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startFound'), true));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('startIndex'), 1.0), 0.0)));
          }
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            break;
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('endIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('endIndex'), 1.0), 0.0)));
          }
        }
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('endIndex'), 1.0), 0.0)));
    }))))));
    phiVars(array(array('trim_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trim_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiVars(array(array('startIndex', 0.0)));
      phiVars(array(array('endIndex', new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('$receiver_0'), 'length'), 1.0), 0.0))));
      phiVars(array(array('startFound', false)));
      while (new PhiBinaryOperation('<=', new PhiNameRef('startIndex'), new PhiNameRef('endIndex'))) {
        phiVars(array(array('index', new PhiConditional(new PhiPrefixOperation('!', new PhiNameRef('startFound')), new PhiNameRef('startIndex'), new PhiNameRef('endIndex')))));
        phiVars(array(array('match_0', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'charCodeAt'), array(new PhiNameRef('index'))))))))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('startFound')))) {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startFound'), true));
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('startIndex'), 1.0), 0.0)));
          }
        }
         else {
          if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('match_0')))) {
            break;
          }
           else {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('endIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('endIndex'), 1.0), 0.0)));
          }
        }
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('startIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('endIndex'), 1.0), 0.0))), 'toString'), array());
    }))))));
    phiVars(array(array('trimStart_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trimStart_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiVars(array(array('tmp$_1', )));
      phiVars(array(array('tmp$_2', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver')))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('tmp$'), 'first')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$'), 'last')));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$'), 'step')));
      phiVars(array(array('index', new PhiNameRef('tmp$_0'))));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_1')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_2'))) {
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('index'), new PhiDot(new PhiNameRef('$receiver'), 'length')));
        }
      }
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('trimStart_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trimStart_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiVars(array(array('trimStart_2pivbd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimStart_2pivbd$break'));
        {
          phiVars(array(array('tmp$_0', )));
          phiVars(array(array('tmp$_1', )));
          phiVars(array(array('tmp$_2', )));
          phiVars(array(array('tmp$_3', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver_0')))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_1'), new PhiDot(new PhiNameRef('tmp$_0'), 'first')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_2'), new PhiDot(new PhiNameRef('tmp$_0'), 'last')));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_3'), new PhiDot(new PhiNameRef('tmp$_0'), 'step')));
          phiVars(array(array('index', new PhiNameRef('tmp$_1'))));
          for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$_2')); new PhiBinaryOperation('+=', new PhiNameRef('index'), new PhiNameRef('tmp$_3'))) {
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart_2pivbd$result'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver_0'), new PhiNameRef('index'), new PhiDot(new PhiNameRef('$receiver_0'), 'length')))));
              phiExpressionStatement(new PhiNameRef('goto trimStart_2pivbd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimStart_2pivbd$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimStart_2pivbd_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('trimStart_2pivbd$result'), 'toString'), array());
    }))))));
    phiVars(array(array('trimEnd_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trimEnd_2pivbd$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver'))))), 'iterator'), array())));
      while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'hasNext'), array())) {
        phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'next'), array()))));
        if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
          return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), 0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))), 'toString'), array());
        }
      }
      return new PhiStringLiteral('');
    }))))));
    phiVars(array(array('trimEnd_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trimEnd_ouje1d$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('$receiver_0', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiVars(array(array('trimEnd_2pivbd$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label trimEnd_2pivbd$break'));
        {
          phiVars(array(array('tmp$_0', )));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'ranges'), 'reversed_zf1xzc$'), array(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'get_indices_gw00vp$'), array(new PhiNameRef('$receiver_0'))))), 'iterator'), array())));
          while (new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'hasNext'), array())) {
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$_0'), 'next'), array()))));
            if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toBoxedChar'), array(new PhiInvocation(new PhiDot(new PhiNameRef('$receiver_0'), 'charCodeAt'), array(new PhiNameRef('index')))))))))) {
              phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd_2pivbd$result'), new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver_0'), 0.0, new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), 1.0), 0.0))), 'toString'), array())));
              phiExpressionStatement(new PhiNameRef('goto trimEnd_2pivbd_usd_break'));
            }
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('trimEnd_2pivbd$result'), new PhiStringLiteral('')));
        }
        phiExpressionStatement(new PhiNameRef('trimEnd_2pivbd_usd_break:'));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('trimEnd_2pivbd$result'), 'toString'), array());
    }))))));
    phiVars(array(array('trim', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trim_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'trim_gw00vp$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))), 'toString'), array());
    }))))));
    phiVars(array(array('trimStart_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trimStart_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'trimStart_gw00vp$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))), 'toString'), array());
    }))))));
    phiVars(array(array('trimEnd_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.trimEnd_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'trimEnd_gw00vp$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))), 'toString'), array());
    }))))));
    phiVars(array(array('isNullOrEmpty', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.isNullOrEmpty_qc8d1o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiNameRef('$receiver'), null), new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0));
    }))))));
    phiVars(array(array('isEmpty_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.isEmpty_gw00vp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isNotEmpty_8', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.isNotEmpty_gw00vp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('$receiver'), 'length'), 0.0);
    }))))));
    phiVars(array(array('isNotBlank', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.isNotBlank_gw00vp$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiPrefixOperation('!', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'isBlank_gw00vp$'), array(new PhiNameRef('$receiver'))));
    }))))));
    phiVars(array(array('isNullOrBlank', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.isNullOrBlank_qc8d1o$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiNameRef('$receiver'), null), new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'isBlank_gw00vp$'), array(new PhiNameRef('$receiver'))));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('iterator$ObjectLiteral'), 'prototype'), 'nextChar'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiBinaryOperation(',', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'index_0')), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('tmp$'), 1.0), 0.0))), new PhiNameRef('tmp$'))));
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$iterator'), 'charCodeAt'), array(new PhiNameRef('tmp$_0')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'index_0'), new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$iterator'), 'length'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('CharIterator'))))))));
    phiVars(array(array('orEmpty_4', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.orEmpty_5cw0du$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('$receiver'), null), new PhiNameRef('$receiver'), new PhiStringLiteral(''));
    }))))));
    phiVars(array(array('subSequence_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.subSequence_qgyqat$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'substring'), array(new PhiNameRef('start'), new PhiNameRef('end')));
    }))))));
    phiVars(array(array('substring_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.substring_qdpigv$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('endIndex'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('endIndex'), new PhiDot(new PhiNameRef('$receiver'), 'length')));
      }
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'subSequence'), array(new PhiNameRef('$receiver'), new PhiNameRef('startIndex'), new PhiNameRef('endIndex'))), 'toString'), array());
    }))))));
    phiVars(array(array('replaceRange_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.replaceRange_r96sod$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_p5j4qv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('startIndex'), new PhiNameRef('endIndex'), new PhiNameRef('replacement'))), 'toString'), array());
    }))))));
    phiVars(array(array('replaceRange_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.replaceRange_laqjpa$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'replaceRange_r6gztw$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('range'), new PhiNameRef('replacement'))), 'toString'), array());
    }))))));
    phiVars(array(array('removeRange_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.removeRange_qgyqat$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'removeRange_qdpigv$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('startIndex'), new PhiNameRef('endIndex'))), 'toString'), array());
    }))))));
    phiVars(array(array('removeRange_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.removeRange_fc3b62$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      return new PhiInvocation(new PhiDot(new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'removeRange_i511yc$'), array(new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isCharSequence'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('$receiver')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())), new PhiNameRef('range'))), 'toString'), array());
    }))))));
    phiVars(array(array('replace_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.replace_tb98gq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('regex'), 'replace_x2uqeu$'), array(new PhiNameRef('$receiver'), new PhiNameRef('replacement')));
    }))))));
    phiVars(array(array('replace_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.replace_3avfay$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('replace_20wsma$result', )));
      {
        phiExpressionStatement(new PhiStringLiteral('Here was label replace_20wsma$break'));
        {
          phiVars(array(array('match_0', new PhiInvocation(new PhiDot(new PhiNameRef('regex'), 'find_905azu$'), array(new PhiNameRef('$receiver'))))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('match_0'), null))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('replace_20wsma$result'), new PhiInvocation(new PhiDot(new PhiNameRef('$receiver'), 'toString'), array())));
            phiExpressionStatement(new PhiNameRef('goto replace_20wsma_usd_break'));
          }
          phiVars(array(array('lastStart', 0.0)));
          phiVars(array(array('length', new PhiDot(new PhiNameRef('$receiver'), 'length'))));
          phiVars(array(array('sb', new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'StringBuilder_init_za3lpa$'), array(new PhiNameRef('length'))))));
          while (new PhiBinaryOperation('&&', new PhiBinaryOperation('<', new PhiNameRef('lastStart'), new PhiNameRef('length')), new PhiBinaryOperation('!=', new PhiNameRef('match_0'), null))) {
            phiVars(array(array('foundMatch', new PhiConditional(new PhiBinaryOperation('!=', new PhiNameRef('match_0'), null), new PhiNameRef('match_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())))));
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('$receiver'), new PhiNameRef('lastStart'), new PhiDot(new PhiDot(new PhiNameRef('foundMatch'), 'range'), 'start'))));
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_gw00v9$'), array(new PhiInvocation(new PhiNameRef('transform'), array(new PhiNameRef('foundMatch'))))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('lastStart'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiDot(new PhiNameRef('foundMatch'), 'range'), 'endInclusive'), 1.0), 0.0)));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('match_0'), new PhiInvocation(new PhiDot(new PhiNameRef('foundMatch'), 'next'), array())));
          }
          if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiNameRef('lastStart'), new PhiNameRef('length')))) {
            phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'append_ezbsdh$'), array(new PhiNameRef('$receiver'), new PhiNameRef('lastStart'), new PhiNameRef('length'))));
          }
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('replace_20wsma$result'), new PhiInvocation(new PhiDot(new PhiNameRef('sb'), 'toString'), array())));
        }
        phiExpressionStatement(new PhiNameRef('replace_20wsma_usd_break:'));
      }
      return new PhiNameRef('replace_20wsma$result');
    }))))));
    phiVars(array(array('replaceFirst_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.replaceFirst_tb98gq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('regex'), 'replaceFirst_x2uqeu$'), array(new PhiNameRef('$receiver'), new PhiNameRef('replacement')));
    }))))));
    phiVars(array(array('matches_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.matches_t3gu14$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('regex'), 'matches_6bul2c$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('contains_43', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.contains_t3gu14$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('regex'), 'containsMatchIn_6bul2c$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DelimitedRangesSequence$iterator$ObjectLiteral'), 'prototype'), 'calcNext_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('<', new PhiDot(new PhiNameRef('this'), 'nextSearchIndex'), 0.0))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
      }
       else {
        if (phiEvaluateToBoolean(new PhiBinaryOperation('||', new PhiBinaryOperation('&&', new PhiBinaryOperation('>', new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), 'limit_0'), 0.0), new PhiBinaryOperation('>=', new PhiBinaryOperation(',', new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'counter'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'counter'), 1.0), 0.0)), new PhiDot(new PhiNameRef('this'), 'counter')), new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), 'limit_0'))), new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'nextSearchIndex'), new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), 'input_0'), 'length'))))) {
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), new PhiNew(new PhiNameRef('IntRange'), array(new PhiDot(new PhiNameRef('this'), 'currentStartIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), 'input_0')))))));
          phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextSearchIndex'), new PhiPrefixOperation('-', 1.0)));
        }
         else {
          phiVars(array(array('match_0', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), 'getNextMatch_0'), array(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), 'input_0'), new PhiDot(new PhiNameRef('this'), 'nextSearchIndex'))))));
          if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('match_0'), null))) {
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), new PhiNew(new PhiNameRef('IntRange'), array(new PhiDot(new PhiNameRef('this'), 'currentStartIndex'), new PhiInvocation(new PhiNameRef('get_lastIndex_9'), array(new PhiDot(new PhiDot(new PhiNameRef('this'), 'this$DelimitedRangesSequence'), 'input_0')))))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextSearchIndex'), new PhiPrefixOperation('-', 1.0)));
          }
           else {
            phiVars(array(array('tmp$', new PhiNameRef('match_0'))));
            phiVars(array(array('index', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component1'), array()))));
            phiVars(array(array('length', new PhiInvocation(new PhiDot(new PhiNameRef('tmp$'), 'component2'), array()))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), new PhiNew(new PhiNameRef('IntRange'), array(new PhiDot(new PhiNameRef('this'), 'currentStartIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('index'), 1.0), 0.0)))));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'currentStartIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiNameRef('index'), new PhiNameRef('length')), 0.0)));
            phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextSearchIndex'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiDot(new PhiNameRef('this'), 'currentStartIndex'), new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('length'), 0.0), 1.0, 0.0)), 0.0)));
          }
        }
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), 1.0));
      }
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DelimitedRangesSequence$iterator$ObjectLiteral'), 'prototype'), 'next'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 0.0))) {
        phiThrow(new PhiNew(new PhiNameRef('NoSuchElementException'), array()));
      }
      phiVars(array(array('result', new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'nextItem')), new PhiNameRef('IntRange'))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array())))));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextItem'), null));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DelimitedRangesSequence$iterator$ObjectLiteral'), 'prototype'), 'hasNext'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), new PhiPrefixOperation('-', 1.0)))) {
        phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'calcNext_0'), array()));
      }
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'nextState'), 1.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DelimitedRangesSequence$iterator$ObjectLiteral'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Iterator'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('DelimitedRangesSequence'), 'prototype'), 'iterator'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('DelimitedRangesSequence$iterator$ObjectLiteral'), array(new PhiNameRef('this')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('DelimitedRangesSequence'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('DelimitedRangesSequence')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Sequence_0'))))))));
    phiVars(array(array('split', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.split_yymnie$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('limit'), new PhiPrefixOperation('void', 0.0)))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('limit'), 0.0));
      }
      return new PhiInvocation(new PhiDot(new PhiNameRef('regex'), 'split_905azu$'), array(new PhiNameRef('$receiver'), new PhiNameRef('limit')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Typography'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Typography')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('Typography_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MatchGroupCollection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MatchGroupCollection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Collection'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MatchNamedGroupCollection'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MatchNamedGroupCollection')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('MatchGroupCollection'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('MatchResult'), 'prototype'), new PhiStringLiteral('destructured'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('MatchResult$Destructured'), array(new PhiNameRef('this')));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component1'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component1'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(1.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component2'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component2'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(2.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component3'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component3'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(3.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component4'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component4'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(4.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component5'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component5'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(5.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component6'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component6'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(6.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component7'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component7'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(7.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component8'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component8'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(8.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component9'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component9'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(9.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'component10'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.MatchResult.Destructured.component10'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'get_za3lpa$'), array(10.0));
    })))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MatchResult$Destructured'), 'prototype'), 'toList'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'subList_vux9f0$'), array(1.0, new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('this'), 'match'), 'groupValues'), 'size')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MatchResult$Destructured'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Destructured')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MatchResult'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('MatchResult')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('toRegex', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toRegex_pdl1vz$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'Regex_61zpoe$'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('toRegex_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toRegex_2jdgi1$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'Regex_sb3q2$'), array(new PhiNameRef('$receiver'), new PhiNameRef('option')));
    }))))));
    phiVars(array(array('toRegex_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.text.toRegex_8ioxci$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiDot(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'text'), 'Regex'), array(new PhiNameRef('$receiver'), new PhiNameRef('options')));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'), 'versionOf_0'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiDot(new PhiInvocation(new PhiNameRef('KotlinVersion$Companion_getInstance'), array()), 'MAX_COMPONENT_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('major'))), new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiDot(new PhiInvocation(new PhiNameRef('KotlinVersion$Companion_getInstance'), array()), 'MAX_COMPONENT_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('minor')))), new PhiInvocation(new PhiDot(new PhiNew(new PhiNameRef('IntRange'), array(0.0, new PhiDot(new PhiInvocation(new PhiNameRef('KotlinVersion$Companion_getInstance'), array()), 'MAX_COMPONENT_VALUE'))), 'contains_mef7kx$'), array(new PhiNameRef('patch'))))))) {
        phiVars(array(array('message', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('Version components are out of range: '), new PhiNameRef('major')), new PhiStringLiteral('.')), new PhiNameRef('minor')), new PhiStringLiteral('.')), new PhiNameRef('patch')))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
      return new PhiBinaryOperation('<<', new PhiBinaryOperation('<<', new PhiNameRef('major'), new PhiBinaryOperation('+', 16.0, new PhiNameRef('minor'))), new PhiBinaryOperation('+', 8.0, new PhiNameRef('patch')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiInvocation(new PhiDot(new PhiDot(new PhiNameRef('this'), 'major'), 'toString'), array()), new PhiStringLiteral('.')), new PhiDot(new PhiNameRef('this'), 'minor')), new PhiStringLiteral('.')), new PhiDot(new PhiNameRef('this'), 'patch'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')))) {
        return true;
      }
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('other')), new PhiNameRef('KotlinVersion'))), new PhiNameRef('tmp$'), null)));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('tmp$_0'), null))) {
        return false;
      }
      phiVars(array(array('otherVersion', new PhiNameRef('tmp$_0'))));
      return new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'version_0'), new PhiDot(new PhiNameRef('otherVersion'), 'version_0'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'version_0');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'), 'compareTo_11rb$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiDot(new PhiNameRef('this'), 'version_0'), new PhiDot(new PhiNameRef('other'), 'version_0')), 0.0);
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'), 'isAtLeast_vux9f0$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'major'), new PhiNameRef('major')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'major'), new PhiNameRef('major')), new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'minor'), new PhiNameRef('minor'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('KotlinVersion'), 'prototype'), 'isAtLeast_qt1dr2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'major'), new PhiNameRef('major')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'major'), new PhiNameRef('major')), new PhiBinaryOperation('||', new PhiBinaryOperation('>', new PhiDot(new PhiNameRef('this'), 'minor'), new PhiNameRef('minor')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), 'minor'), new PhiNameRef('minor')), new PhiBinaryOperation('>=', new PhiDot(new PhiNameRef('this'), 'patch'), new PhiNameRef('patch'))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KotlinVersion$Companion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Companion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('KotlinVersion$Companion_instance', null)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KotlinVersion'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('KotlinVersion')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Comparable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Lazy'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'INTERFACE')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Lazy')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('getValue_2', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.getValue_thokl7$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('$receiver'), 'value');
    }))))));
    phiVars(array(array('LazyThreadSafetyMode$SYNCHRONIZED_instance', )));
    phiVars(array(array('LazyThreadSafetyMode$PUBLICATION_instance', )));
    phiVars(array(array('LazyThreadSafetyMode$NONE_instance', )));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LazyThreadSafetyMode'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('LazyThreadSafetyMode')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Enum'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LazyThreadSafetyMode'), 'values'), new PhiNameRef('LazyThreadSafetyMode$values')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('LazyThreadSafetyMode'), 'valueOf_61zpoe$'), new PhiNameRef('LazyThreadSafetyMode$valueOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('UNINITIALIZED_VALUE'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'OBJECT')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('UNINITIALIZED_VALUE')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array()))))));
    phiVars(array(array('UNINITIALIZED_VALUE_instance', null)));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('SynchronizedLazyImpl'), 'prototype'), new PhiStringLiteral('value'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('_v1', new PhiDot(new PhiNameRef('this'), '_value_0'))));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('!==', new PhiNameRef('_v1'), new PhiInvocation(new PhiNameRef('UNINITIALIZED_VALUE_getInstance'), array())))) {
        return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiNameRef('_v1')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$'), new PhiNameRef('Any')))), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
      }
      return new PhiInvocation(new PhiInvocation(new PhiNameRef('SynchronizedLazyImpl$get_SynchronizedLazyImpl$value$lambda'), array(new PhiNameRef('this'))), array());
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SynchronizedLazyImpl'), 'prototype'), 'isInitialized'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiInvocation(new PhiNameRef('UNINITIALIZED_VALUE_getInstance'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SynchronizedLazyImpl'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isInitialized'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'value'))), new PhiStringLiteral('Lazy value not initialized yet.'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('SynchronizedLazyImpl'), 'prototype'), 'writeReplace_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('InitializedLazyImpl'), array(new PhiDot(new PhiNameRef('this'), 'value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('SynchronizedLazyImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('SynchronizedLazyImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Serializable'), new PhiNameRef('Lazy'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('UnsafeLazyImpl'), 'prototype'), new PhiStringLiteral('value'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiVars(array(array('tmp$_0', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('===', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiInvocation(new PhiNameRef('UNINITIALIZED_VALUE_getInstance'), array())))) {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiInvocation(new PhiConditional(new PhiBinaryOperation('!=', new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiDot(new PhiNameRef('this'), 'initializer_0')), null), new PhiNameRef('tmp$'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwNPE'), array())), array())));
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('this'), 'initializer_0'), null));
      }
      return new PhiConditional(new PhiBinaryOperation('||', new PhiBinaryOperation('==', new PhiBinaryOperation('=', new PhiNameRef('tmp$_0'), new PhiDot(new PhiNameRef('this'), '_value_0')), null), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'isType'), array(new PhiNameRef('tmp$_0'), new PhiNameRef('Any')))), new PhiNameRef('tmp$_0'), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'throwCCE'), array()));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('UnsafeLazyImpl'), 'prototype'), 'isInitialized'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('!==', new PhiDot(new PhiNameRef('this'), '_value_0'), new PhiInvocation(new PhiNameRef('UNINITIALIZED_VALUE_getInstance'), array()));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('UnsafeLazyImpl'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiDot(new PhiNameRef('this'), 'isInitialized'), array()), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'value'))), new PhiStringLiteral('Lazy value not initialized yet.'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('UnsafeLazyImpl'), 'prototype'), 'writeReplace_0'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('InitializedLazyImpl'), array(new PhiDot(new PhiNameRef('this'), 'value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('UnsafeLazyImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('UnsafeLazyImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Serializable'), new PhiNameRef('Lazy'))))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('InitializedLazyImpl'), 'prototype'), new PhiStringLiteral('value'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'value_jtqip$_0');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InitializedLazyImpl'), 'prototype'), 'isInitialized'), new PhiFunctionExpression(null, array(), function () {
      return true;
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('InitializedLazyImpl'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'toString'), array(new PhiDot(new PhiNameRef('this'), 'value')));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('InitializedLazyImpl'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('InitializedLazyImpl')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Serializable'), new PhiNameRef('Lazy'))))))));
    phiVars(array(array('require_1', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.require_6taknv$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('value')))) {
        phiVars(array(array('message', new PhiStringLiteral('Failed requirement.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
    }))))));
    phiVars(array(array('require_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.require_4ina18$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('value')))) {
        phiVars(array(array('message', new PhiInvocation(new PhiNameRef('lazyMessage'), array()))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
    }))))));
    phiVars(array(array('requireNotNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.requireNotNull_issdgt$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('requireNotNull_p3yddy$result', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
        phiVars(array(array('message', new PhiStringLiteral('Required value was null.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('requireNotNull_p3yddy$result'), new PhiNameRef('value')));
      }
      return new PhiNameRef('requireNotNull_p3yddy$result');
    }))))));
    phiVars(array(array('requireNotNull_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.requireNotNull_p3yddy$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
        phiVars(array(array('message', new PhiInvocation(new PhiNameRef('lazyMessage'), array()))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalArgumentException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
       else {
        return new PhiNameRef('value');
      }
    }))))));
    phiVars(array(array('check_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.check_6taknv$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('value')))) {
        phiVars(array(array('message', new PhiStringLiteral('Check failed.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
    }))))));
    phiVars(array(array('check', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.check_4ina18$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiPrefixOperation('!', new PhiNameRef('value')))) {
        phiVars(array(array('message', new PhiInvocation(new PhiNameRef('lazyMessage'), array()))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
    }))))));
    phiVars(array(array('checkNotNull', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.checkNotNull_issdgt$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('checkNotNull_p3yddy$result', )));
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
        phiVars(array(array('message', new PhiStringLiteral('Required value was null.'))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
       else {
        phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('checkNotNull_p3yddy$result'), new PhiNameRef('value')));
      }
      return new PhiNameRef('checkNotNull_p3yddy$result');
    }))))));
    phiVars(array(array('checkNotNull_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.checkNotNull_p3yddy$'), new PhiFunctionExpression(null, array(), function () {
      if (phiEvaluateToBoolean(new PhiBinaryOperation('==', new PhiNameRef('value'), null))) {
        phiVars(array(array('message', new PhiInvocation(new PhiNameRef('lazyMessage'), array()))));
        phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
      }
       else {
        return new PhiNameRef('value');
      }
    }))))));
    phiVars(array(array('error', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.error_za3rmp$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'IllegalStateException'), array(new PhiInvocation(new PhiDot(new PhiNameRef('message'), 'toString'), array()))));
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('NotImplementedError'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('NotImplementedError')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Error_0'))))))));
    phiVars(array(array('TODO', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.TODO'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array()));
    }))))));
    phiVars(array(array('TODO_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.TODO_61zpoe$'), new PhiFunctionExpression(null, array(), function () {
      phiThrow(new PhiNew(new PhiDot(new PhiDot(new PhiNameRef('_'), 'kotlin'), 'NotImplementedError'), array(new PhiBinaryOperation('+', new PhiStringLiteral('An operation is not implemented: '), new PhiNameRef('reason')))));
    }))))));
    phiVars(array(array('run', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.run_klfg04$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('block'), array());
    }))))));
    phiVars(array(array('run_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.run_96jf0l$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('block'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('with_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.with_ywwgyq$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('block'), array(new PhiNameRef('receiver')));
    }))))));
    phiVars(array(array('apply', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.apply_9bxh2u$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('block'), array(new PhiNameRef('$receiver'))));
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('also', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.also_9bxh2u$'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiInvocation(new PhiNameRef('block'), array(new PhiNameRef('$receiver'))));
      return new PhiNameRef('$receiver');
    }))))));
    phiVars(array(array('let_0', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.let_96jf0l$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiInvocation(new PhiNameRef('block'), array(new PhiNameRef('$receiver')));
    }))))));
    phiVars(array(array('takeIf', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.takeIf_ujn5f2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('$receiver'))), new PhiNameRef('$receiver'), null);
    }))))));
    phiVars(array(array('takeUnless', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.takeUnless_ujn5f2$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiConditional(new PhiPrefixOperation('!', new PhiInvocation(new PhiNameRef('predicate'), array(new PhiNameRef('$receiver')))), new PhiNameRef('$receiver'), null);
    }))))));
    phiVars(array(array('repeat', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineInlineFunction'), array(new PhiStringLiteral('kotlin.kotlin.repeat_8b5ljp$'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('tmp$', )));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('tmp$'), new PhiBinaryOperation('|', new PhiBinaryOperation('-', new PhiNameRef('times'), 1.0), 0.0)));
      phiVars(array(array('index', 0.0)));
      for (phiVars(array()); new PhiBinaryOperation('<=', new PhiNameRef('index'), new PhiNameRef('tmp$')); new PhiNameRef('index')++) {
        phiExpressionStatement(new PhiInvocation(new PhiNameRef('action'), array(new PhiNameRef('index'))));
      }
    }))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Pair'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('('), new PhiDot(new PhiNameRef('this'), 'first')), new PhiStringLiteral(', ')), new PhiDot(new PhiNameRef('this'), 'second')), new PhiStringLiteral(')'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Pair'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Pair')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Serializable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Pair'), 'prototype'), 'component1'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'first');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Pair'), 'prototype'), 'component2'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'second');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Pair'), 'prototype'), 'copy_xwzc9p$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('Pair'), array(new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('first_24'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'first'), new PhiNameRef('first_24')), new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('second'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'second'), new PhiNameRef('second'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Pair'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'first')))), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'second')))), 0.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Pair'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')), new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('other'), null), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('other')), new PhiStringLiteral('object')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('this'))), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('other')))), new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('other'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'second'), new PhiDot(new PhiNameRef('other'), 'second'))))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Triple'), 'prototype'), 'toString'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiBinaryOperation('+', new PhiStringLiteral('('), new PhiDot(new PhiNameRef('this'), 'first')), new PhiStringLiteral(', ')), new PhiDot(new PhiNameRef('this'), 'second')), new PhiStringLiteral(', ')), new PhiDot(new PhiNameRef('this'), 'third')), new PhiStringLiteral(')'));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Triple'), '$metadata$'), new PhiObjectLiteral(array(array(new PhiNameRef('kind'), new PhiDot(new PhiDot(new PhiNameRef('Kotlin'), 'Kind'), 'CLASS')), array(new PhiNameRef('simpleName'), new PhiStringLiteral('Triple')), array(new PhiNameRef('interfaces'), new PhiArrayLiteral(array(new PhiNameRef('Serializable'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Triple'), 'prototype'), 'component1'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'first');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Triple'), 'prototype'), 'component2'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'second');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Triple'), 'prototype'), 'component3'), new PhiFunctionExpression(null, array(), function () {
      return new PhiDot(new PhiNameRef('this'), 'third');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Triple'), 'prototype'), 'copy_1llc0w$'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNew(new PhiNameRef('Triple'), array(new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('first_24'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'first'), new PhiNameRef('first_24')), new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('second'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'second'), new PhiNameRef('second')), new PhiConditional(new PhiBinaryOperation('===', new PhiNameRef('third'), new PhiPrefixOperation('void', 0.0)), new PhiDot(new PhiNameRef('this'), 'third'), new PhiNameRef('third'))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Triple'), 'prototype'), 'hashCode'), new PhiFunctionExpression(null, array(), function () {
      phiVars(array(array('result', 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'first')))), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'second')))), 0.0)));
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('result'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('*', new PhiNameRef('result'), 31.0), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'hashCode'), array(new PhiDot(new PhiNameRef('this'), 'third')))), 0.0)));
      return new PhiNameRef('result');
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Triple'), 'prototype'), 'equals'), new PhiFunctionExpression(null, array(), function () {
      return new PhiBinaryOperation('||', new PhiBinaryOperation('===', new PhiNameRef('this'), new PhiNameRef('other')), new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiNameRef('other'), null), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiPrefixOperation('typeof', new PhiNameRef('other')), new PhiStringLiteral('object')), new PhiBinaryOperation('&&', new PhiBinaryOperation('===', new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('this'))), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getPrototypeOf'), array(new PhiNameRef('other')))), new PhiBinaryOperation('&&', new PhiBinaryOperation('&&', new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'first'), new PhiDot(new PhiNameRef('other'), 'first'))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'second'), new PhiDot(new PhiNameRef('other'), 'second')))), new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'equals'), array(new PhiDot(new PhiNameRef('this'), 'third'), new PhiDot(new PhiNameRef('other'), 'third'))))))));
    })));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMap'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('Map'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMap'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('Map'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), 'remove_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('MutableMap'), 'prototype'), 'remove_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('AbstractMutableMap'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('MutableMap'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('LinkedHashMap'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('Map'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiDot(new PhiNameRef('findNext$ObjectLiteral'), 'prototype'), new PhiStringLiteral('destructured'), new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'getOwnPropertyDescriptor'), array(new PhiDot(new PhiNameRef('MatchResult'), 'prototype'), new PhiStringLiteral('destructured'))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefault'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('Map'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefault'), 'prototype'), 'remove_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('MutableMap'), 'prototype'), 'remove_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefault'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('MutableMap'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MapWithDefaultImpl'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('MapWithDefault'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'remove_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefault'), 'prototype'), 'remove_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefaultImpl'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('MutableMapWithDefault'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('EmptyMap'), 'prototype'), 'getOrDefault_xwzc9p$'), new PhiDot(new PhiDot(new PhiNameRef('Map'), 'prototype'), 'getOrDefault_xwzc9p$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ComparableRange'), 'prototype'), 'contains_mef7kx$'), new PhiDot(new PhiDot(new PhiNameRef('ClosedRange'), 'prototype'), 'contains_mef7kx$')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('ComparableRange'), 'prototype'), 'isEmpty'), new PhiDot(new PhiDot(new PhiNameRef('ClosedRange'), 'prototype'), 'isEmpty')));
    phiVars(array(array('package$kotlin', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('_'), 'kotlin'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'kotlin'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Annotation'), new PhiNameRef('Annotation')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'CharSequence'), new PhiNameRef('CharSequence')));
    phiVars(array(array('package$collections', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'collections'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'collections'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'Iterable'), new PhiNameRef('Iterable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableIterable'), new PhiNameRef('MutableIterable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'Collection'), new PhiNameRef('Collection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableCollection'), new PhiNameRef('MutableCollection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'List'), new PhiNameRef('List')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableList'), new PhiNameRef('MutableList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'Set'), new PhiNameRef('Set')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableSet'), new PhiNameRef('MutableSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('Map'), 'Entry'), new PhiNameRef('Map$Entry')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'Map'), new PhiNameRef('Map')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MutableMap'), 'MutableEntry'), new PhiNameRef('MutableMap$MutableEntry')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableMap'), new PhiNameRef('MutableMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'Iterator'), new PhiNameRef('Iterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableIterator'), new PhiNameRef('MutableIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'ListIterator'), new PhiNameRef('ListIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableListIterator'), new PhiNameRef('MutableListIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Function'), new PhiNameRef('Function')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'ByteIterator'), new PhiNameRef('ByteIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'CharIterator'), new PhiNameRef('CharIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'ShortIterator'), new PhiNameRef('ShortIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'IntIterator'), new PhiNameRef('IntIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LongIterator'), new PhiNameRef('LongIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'FloatIterator'), new PhiNameRef('FloatIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'DoubleIterator'), new PhiNameRef('DoubleIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'BooleanIterator'), new PhiNameRef('BooleanIterator')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('CharProgression'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('CharProgression$Companion_getInstance')))))));
    phiVars(array(array('package$ranges', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'ranges'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'ranges'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'CharProgression'), new PhiNameRef('CharProgression')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('IntProgression'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('IntProgression$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'IntProgression'), new PhiNameRef('IntProgression')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('LongProgression'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('LongProgression$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'LongProgression'), new PhiNameRef('LongProgression')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'ClosedRange'), new PhiNameRef('ClosedRange')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('CharRange'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('CharRange$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'CharRange'), new PhiNameRef('CharRange')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('IntRange'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('IntRange$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'IntRange'), new PhiNameRef('IntRange')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('LongRange'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('LongRange$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'LongRange'), new PhiNameRef('LongRange')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('CLASS'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$CLASS_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('ANNOTATION_CLASS'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$ANNOTATION_CLASS_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('TYPE_PARAMETER'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$TYPE_PARAMETER_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('PROPERTY'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$PROPERTY_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('FIELD'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$FIELD_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('LOCAL_VARIABLE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$LOCAL_VARIABLE_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('VALUE_PARAMETER'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$VALUE_PARAMETER_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('CONSTRUCTOR'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$CONSTRUCTOR_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('FUNCTION'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$FUNCTION_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('PROPERTY_GETTER'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$PROPERTY_GETTER_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('PROPERTY_SETTER'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$PROPERTY_SETTER_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('TYPE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$TYPE_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('EXPRESSION'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$EXPRESSION_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('FILE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$FILE_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationTarget'), new PhiStringLiteral('TYPEALIAS'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationTarget$TYPEALIAS_getInstance')))))));
    phiVars(array(array('package$annotation', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'annotation'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'annotation'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$annotation'), 'AnnotationTarget'), new PhiNameRef('AnnotationTarget')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationRetention'), new PhiStringLiteral('SOURCE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationRetention$SOURCE_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationRetention'), new PhiStringLiteral('BINARY'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationRetention$BINARY_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('AnnotationRetention'), new PhiStringLiteral('RUNTIME'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('AnnotationRetention$RUNTIME_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$annotation'), 'AnnotationRetention'), new PhiNameRef('AnnotationRetention')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$annotation'), 'Target'), new PhiNameRef('Target')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$annotation'), 'Retention'), new PhiNameRef('Retention')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$annotation'), 'Repeatable'), new PhiNameRef('Repeatable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$annotation'), 'MustBeDocumented'), new PhiNameRef('MustBeDocumented')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Comparator'), new PhiNameRef('Comparator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Comparator$f'), new PhiNameRef('Comparator$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Comparator_x4fedy$'), new PhiNameRef('Comparator_0')));
    phiVars(array(array('package$js', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'js'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'js'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiBrackets(new PhiNameRef('package$js'), new PhiStringLiteral('native')), new PhiNameRef('native')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'nativeGetter'), new PhiNameRef('nativeGetter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'nativeSetter'), new PhiNameRef('nativeSetter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'nativeInvoke'), new PhiNameRef('nativeInvoke')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'JsName'), new PhiNameRef('JsName')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'JsModule'), new PhiNameRef('JsModule')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'JsNonModule'), new PhiNameRef('JsNonModule')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'JsQualifier'), new PhiNameRef('JsQualifier')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'arrayIterator'), new PhiNameRef('arrayIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'PropertyMetadata'), new PhiNameRef('PropertyMetadata')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'noWhenBranchMatched'), new PhiNameRef('noWhenBranchMatched')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'subSequence'), new PhiNameRef('subSequence')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'captureStack'), new PhiNameRef('captureStack')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'newThrowable'), new PhiNameRef('newThrowable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'BoxedChar'), new PhiNameRef('BoxedChar')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'arrayConcat'), new PhiNameRef('arrayConcat')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'primitiveArrayConcat'), new PhiNameRef('primitiveArrayConcat')));
    phiVars(array(array('package$text', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'text'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'text'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'isWhitespace_myv2d0$'), new PhiNameRef('isWhitespace')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'isHighSurrogate_myv2d0$'), new PhiNameRef('isHighSurrogate')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'isLowSurrogate_myv2d0$'), new PhiNameRef('isLowSurrogate')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'emptyArray_287e2$'), new PhiNameRef('emptyArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'orEmpty_oachgz$'), new PhiNameRef('orEmpty')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyToArray'), new PhiNameRef('copyToArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_4c7yge$'), new PhiNameRef('toTypedArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyToArrayImpl'), new PhiNameRef('copyToArrayImpl')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyToExistingArrayImpl'), new PhiNameRef('copyToArrayImpl_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'listOf_mh5how$'), new PhiNameRef('listOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'setOf_mh5how$'), new PhiNameRef('setOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapOf_x2b85n$'), new PhiNameRef('mapOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_4wi501$'), new PhiNameRef('sort')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortWith_nqfjgj$'), new PhiNameRef('sortWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractMutableCollection'), new PhiNameRef('AbstractMutableCollection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractMutableList'), new PhiNameRef('AbstractMutableList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractMutableMap'), new PhiNameRef('AbstractMutableMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractMutableSet'), new PhiNameRef('AbstractMutableSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'ArrayList_init_ww73n8$'), new PhiNameRef('ArrayList_init')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'ArrayList_init_mqih57$'), new PhiNameRef('ArrayList_init_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'ArrayList'), new PhiNameRef('ArrayList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashMap_init_q3lmfv$'), new PhiNameRef('HashMap_init_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashMap_init_xf5xz2$'), new PhiNameRef('HashMap_init_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashMap_init_73mtqc$'), new PhiNameRef('HashMap_init_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashMap'), new PhiNameRef('HashMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'stringMapOf_gkrhic$'), new PhiNameRef('stringMapOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashSet_init_287e2$'), new PhiNameRef('HashSet_init')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashSet_init_mqih57$'), new PhiNameRef('HashSet_init_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashSet_init_2wofer$'), new PhiNameRef('HashSet_init_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'HashSet'), new PhiNameRef('HashSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'stringSetOf_vqirvp$'), new PhiNameRef('stringSetOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashMap_init_q3lmfv$'), new PhiNameRef('LinkedHashMap_init')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashMap_init_xf5xz2$'), new PhiNameRef('LinkedHashMap_init_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashMap_init_73mtqc$'), new PhiNameRef('LinkedHashMap_init_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashMap'), new PhiNameRef('LinkedHashMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'linkedStringMapOf_gkrhic$'), new PhiNameRef('linkedStringMapOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashSet_init_287e2$'), new PhiNameRef('LinkedHashSet_init_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashSet_init_mqih57$'), new PhiNameRef('LinkedHashSet_init_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashSet_init_2wofer$'), new PhiNameRef('LinkedHashSet_init_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'LinkedHashSet'), new PhiNameRef('LinkedHashSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'linkedStringSetOf_vqirvp$'), new PhiNameRef('linkedStringSetOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'RandomAccess'), new PhiNameRef('RandomAccess')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Volatile'), new PhiNameRef('Volatile')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Synchronized'), new PhiNameRef('Synchronized')));
    phiVars(array(array('package$io', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'io'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'io'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$io'), 'NodeJsOutput'), new PhiNameRef('NodeJsOutput')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$io'), 'OutputToConsoleLog'), new PhiNameRef('OutputToConsoleLog')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$io'), 'BufferedOutput'), new PhiNameRef('BufferedOutput')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$io'), 'BufferedOutputToConsoleLog'), new PhiNameRef('BufferedOutputToConsoleLog')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$io'), new PhiStringLiteral('output'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('output');
    })), array(new PhiNameRef('set'), new PhiFunctionExpression(null, array(), function () {
      phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('output'), new PhiNameRef('value')));
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$io'), 'println'), new PhiNameRef('println')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$io'), 'println_s8jyv4$'), new PhiNameRef('println_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$io'), 'print_s8jyv4$'), new PhiNameRef('print')));
    phiVars(array(array('package$coroutines', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'coroutines'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'coroutines'), new PhiObjectLiteral(array()))))));
    phiVars(array(array('package$experimental', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$coroutines'), 'experimental'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$coroutines'), 'experimental'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'CoroutineImpl'), new PhiNameRef('CoroutineImpl')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'SafeContinuation_init_n4f53e$'), new PhiNameRef('SafeContinuation_init')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'SafeContinuation'), new PhiNameRef('SafeContinuation')));
    phiVars(array(array('package$intrinsics', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$experimental'), 'intrinsics'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'intrinsics'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$intrinsics'), 'createCoroutineUnchecked_uao1qo$'), new PhiNameRef('createCoroutineUnchecked')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$intrinsics'), 'createCoroutineUnchecked_xtwlez$'), new PhiNameRef('createCoroutineUnchecked_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'iterator_s8jyvk$'), new PhiNameRef('iterator_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'throwNPE'), new PhiNameRef('throwNPE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'throwCCE'), new PhiNameRef('throwCCE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'throwISE'), new PhiNameRef('throwISE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Error'), new PhiNameRef('Error_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Exception'), new PhiNameRef('Exception')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'RuntimeException'), new PhiNameRef('RuntimeException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'IllegalArgumentException'), new PhiNameRef('IllegalArgumentException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'IllegalStateException'), new PhiNameRef('IllegalStateException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'IndexOutOfBoundsException'), new PhiNameRef('IndexOutOfBoundsException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'ConcurrentModificationException'), new PhiNameRef('ConcurrentModificationException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'UnsupportedOperationException'), new PhiNameRef('UnsupportedOperationException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'NumberFormatException'), new PhiNameRef('NumberFormatException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'NullPointerException'), new PhiNameRef('NullPointerException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'ClassCastException'), new PhiNameRef('ClassCastException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'AssertionError'), new PhiNameRef('AssertionError')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'NoSuchElementException'), new PhiNameRef('NoSuchElementException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'NoWhenBranchMatchedException'), new PhiNameRef('NoWhenBranchMatchedException')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_mjy6jw$'), new PhiNameRef('contains')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_jlnu8a$'), new PhiNameRef('contains_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_s7ir3o$'), new PhiNameRef('contains_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_c03ot6$'), new PhiNameRef('contains_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_uxdaoa$'), new PhiNameRef('contains_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_omthmc$'), new PhiNameRef('contains_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_taaqy$'), new PhiNameRef('contains_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_yax8s4$'), new PhiNameRef('contains_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_o2f9me$'), new PhiNameRef('contains_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_m7z4lg$'), new PhiNameRef('get_lastIndex_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_964n91$'), new PhiNameRef('get_lastIndex_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_i2lc79$'), new PhiNameRef('get_lastIndex_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_tmsbgo$'), new PhiNameRef('get_lastIndex_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_se6h4x$'), new PhiNameRef('get_lastIndex_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_rjqryz$'), new PhiNameRef('get_lastIndex_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_bvy38s$'), new PhiNameRef('get_lastIndex_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_l1lu5t$'), new PhiNameRef('get_lastIndex_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_355ntz$'), new PhiNameRef('get_lastIndex_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_8ujjk8$'), new PhiNameRef('getOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_mrm5p$'), new PhiNameRef('getOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_m2jy6x$'), new PhiNameRef('getOrNull_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_c03ot6$'), new PhiNameRef('getOrNull_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_3aefkx$'), new PhiNameRef('getOrNull_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_rblqex$'), new PhiNameRef('getOrNull_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_xgrzbe$'), new PhiNameRef('getOrNull_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_1qu12l$'), new PhiNameRef('getOrNull_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_gtcw5h$'), new PhiNameRef('getOrNull_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_sfx99b$'), new PhiNameRef('firstOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_c3i447$'), new PhiNameRef('firstOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_247xw3$'), new PhiNameRef('firstOrNull_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_il4kyb$'), new PhiNameRef('firstOrNull_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_i1oc7r$'), new PhiNameRef('firstOrNull_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_u4nq1f$'), new PhiNameRef('firstOrNull_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_3vq27r$'), new PhiNameRef('firstOrNull_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_xffwn9$'), new PhiNameRef('firstOrNull_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_3ji0pj$'), new PhiNameRef('firstOrNull_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_sfx99b$'), new PhiNameRef('lastOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_c3i447$'), new PhiNameRef('lastOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_247xw3$'), new PhiNameRef('lastOrNull_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_il4kyb$'), new PhiNameRef('lastOrNull_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_i1oc7r$'), new PhiNameRef('lastOrNull_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_u4nq1f$'), new PhiNameRef('lastOrNull_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_3vq27r$'), new PhiNameRef('lastOrNull_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_xffwn9$'), new PhiNameRef('lastOrNull_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_3ji0pj$'), new PhiNameRef('lastOrNull_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_us0mfu$'), new PhiNameRef('first')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_964n91$'), new PhiNameRef('first_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_i2lc79$'), new PhiNameRef('first_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_tmsbgo$'), new PhiNameRef('first_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_se6h4x$'), new PhiNameRef('first_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_rjqryz$'), new PhiNameRef('first_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_bvy38s$'), new PhiNameRef('first_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_l1lu5t$'), new PhiNameRef('first_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_355ntz$'), new PhiNameRef('first_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_sfx99b$'), new PhiNameRef('first_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_c3i447$'), new PhiNameRef('first_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_247xw3$'), new PhiNameRef('first_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_il4kyb$'), new PhiNameRef('first_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_i1oc7r$'), new PhiNameRef('first_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_u4nq1f$'), new PhiNameRef('first_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_3vq27r$'), new PhiNameRef('first_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_xffwn9$'), new PhiNameRef('first_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_3ji0pj$'), new PhiNameRef('first_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_us0mfu$'), new PhiNameRef('firstOrNull_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_964n91$'), new PhiNameRef('firstOrNull_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_i2lc79$'), new PhiNameRef('firstOrNull_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_tmsbgo$'), new PhiNameRef('firstOrNull_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_se6h4x$'), new PhiNameRef('firstOrNull_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_rjqryz$'), new PhiNameRef('firstOrNull_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_bvy38s$'), new PhiNameRef('firstOrNull_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_l1lu5t$'), new PhiNameRef('firstOrNull_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_355ntz$'), new PhiNameRef('firstOrNull_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_mjy6jw$'), new PhiNameRef('indexOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_jlnu8a$'), new PhiNameRef('indexOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_s7ir3o$'), new PhiNameRef('indexOf_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_c03ot6$'), new PhiNameRef('indexOf_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_uxdaoa$'), new PhiNameRef('indexOf_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_omthmc$'), new PhiNameRef('indexOf_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_taaqy$'), new PhiNameRef('indexOf_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_yax8s4$'), new PhiNameRef('indexOf_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_o2f9me$'), new PhiNameRef('indexOf_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_m7z4lg$'), new PhiNameRef('get_indices')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_sfx99b$'), new PhiNameRef('indexOfFirst')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_964n91$'), new PhiNameRef('get_indices_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_c3i447$'), new PhiNameRef('indexOfFirst_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_i2lc79$'), new PhiNameRef('get_indices_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_247xw3$'), new PhiNameRef('indexOfFirst_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_tmsbgo$'), new PhiNameRef('get_indices_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_il4kyb$'), new PhiNameRef('indexOfFirst_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_se6h4x$'), new PhiNameRef('get_indices_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_i1oc7r$'), new PhiNameRef('indexOfFirst_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_rjqryz$'), new PhiNameRef('get_indices_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_u4nq1f$'), new PhiNameRef('indexOfFirst_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_bvy38s$'), new PhiNameRef('get_indices_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_3vq27r$'), new PhiNameRef('indexOfFirst_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_l1lu5t$'), new PhiNameRef('get_indices_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_xffwn9$'), new PhiNameRef('indexOfFirst_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_355ntz$'), new PhiNameRef('get_indices_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_3ji0pj$'), new PhiNameRef('indexOfFirst_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_7wnvza$'), new PhiNameRef('reversed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_sfx99b$'), new PhiNameRef('indexOfLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_c3i447$'), new PhiNameRef('indexOfLast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_247xw3$'), new PhiNameRef('indexOfLast_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_il4kyb$'), new PhiNameRef('indexOfLast_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_i1oc7r$'), new PhiNameRef('indexOfLast_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_u4nq1f$'), new PhiNameRef('indexOfLast_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_3vq27r$'), new PhiNameRef('indexOfLast_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_xffwn9$'), new PhiNameRef('indexOfLast_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_3ji0pj$'), new PhiNameRef('indexOfLast_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_us0mfu$'), new PhiNameRef('last')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_964n91$'), new PhiNameRef('last_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_i2lc79$'), new PhiNameRef('last_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_tmsbgo$'), new PhiNameRef('last_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_se6h4x$'), new PhiNameRef('last_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_rjqryz$'), new PhiNameRef('last_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_bvy38s$'), new PhiNameRef('last_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_l1lu5t$'), new PhiNameRef('last_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_355ntz$'), new PhiNameRef('last_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_sfx99b$'), new PhiNameRef('last_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_c3i447$'), new PhiNameRef('last_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_247xw3$'), new PhiNameRef('last_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_il4kyb$'), new PhiNameRef('last_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_i1oc7r$'), new PhiNameRef('last_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_u4nq1f$'), new PhiNameRef('last_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_3vq27r$'), new PhiNameRef('last_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_xffwn9$'), new PhiNameRef('last_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_3ji0pj$'), new PhiNameRef('last_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_mjy6jw$'), new PhiNameRef('lastIndexOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_jlnu8a$'), new PhiNameRef('lastIndexOf_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_s7ir3o$'), new PhiNameRef('lastIndexOf_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_c03ot6$'), new PhiNameRef('lastIndexOf_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_uxdaoa$'), new PhiNameRef('lastIndexOf_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_omthmc$'), new PhiNameRef('lastIndexOf_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_taaqy$'), new PhiNameRef('lastIndexOf_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_yax8s4$'), new PhiNameRef('lastIndexOf_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_o2f9me$'), new PhiNameRef('lastIndexOf_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_us0mfu$'), new PhiNameRef('lastOrNull_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_964n91$'), new PhiNameRef('lastOrNull_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_i2lc79$'), new PhiNameRef('lastOrNull_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_tmsbgo$'), new PhiNameRef('lastOrNull_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_se6h4x$'), new PhiNameRef('lastOrNull_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_rjqryz$'), new PhiNameRef('lastOrNull_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_bvy38s$'), new PhiNameRef('lastOrNull_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_l1lu5t$'), new PhiNameRef('lastOrNull_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_355ntz$'), new PhiNameRef('lastOrNull_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_us0mfu$'), new PhiNameRef('single')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_964n91$'), new PhiNameRef('single_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_i2lc79$'), new PhiNameRef('single_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_tmsbgo$'), new PhiNameRef('single_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_se6h4x$'), new PhiNameRef('single_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_rjqryz$'), new PhiNameRef('single_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_bvy38s$'), new PhiNameRef('single_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_l1lu5t$'), new PhiNameRef('single_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_355ntz$'), new PhiNameRef('single_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_sfx99b$'), new PhiNameRef('single_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_c3i447$'), new PhiNameRef('single_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_247xw3$'), new PhiNameRef('single_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_il4kyb$'), new PhiNameRef('single_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_i1oc7r$'), new PhiNameRef('single_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_u4nq1f$'), new PhiNameRef('single_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_3vq27r$'), new PhiNameRef('single_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_xffwn9$'), new PhiNameRef('single_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_3ji0pj$'), new PhiNameRef('single_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_us0mfu$'), new PhiNameRef('singleOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_964n91$'), new PhiNameRef('singleOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_i2lc79$'), new PhiNameRef('singleOrNull_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_tmsbgo$'), new PhiNameRef('singleOrNull_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_se6h4x$'), new PhiNameRef('singleOrNull_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_rjqryz$'), new PhiNameRef('singleOrNull_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_bvy38s$'), new PhiNameRef('singleOrNull_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_l1lu5t$'), new PhiNameRef('singleOrNull_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_355ntz$'), new PhiNameRef('singleOrNull_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_sfx99b$'), new PhiNameRef('singleOrNull_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_c3i447$'), new PhiNameRef('singleOrNull_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_247xw3$'), new PhiNameRef('singleOrNull_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_il4kyb$'), new PhiNameRef('singleOrNull_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_i1oc7r$'), new PhiNameRef('singleOrNull_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_u4nq1f$'), new PhiNameRef('singleOrNull_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_3vq27r$'), new PhiNameRef('singleOrNull_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_xffwn9$'), new PhiNameRef('singleOrNull_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_3ji0pj$'), new PhiNameRef('singleOrNull_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_8ujjk8$'), new PhiNameRef('drop')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_mrm5p$'), new PhiNameRef('drop_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_m2jy6x$'), new PhiNameRef('drop_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_c03ot6$'), new PhiNameRef('drop_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_3aefkx$'), new PhiNameRef('drop_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_rblqex$'), new PhiNameRef('drop_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_xgrzbe$'), new PhiNameRef('drop_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_1qu12l$'), new PhiNameRef('drop_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_gtcw5h$'), new PhiNameRef('drop_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_8ujjk8$'), new PhiNameRef('dropLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_mrm5p$'), new PhiNameRef('dropLast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_m2jy6x$'), new PhiNameRef('dropLast_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_c03ot6$'), new PhiNameRef('dropLast_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_3aefkx$'), new PhiNameRef('dropLast_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_rblqex$'), new PhiNameRef('dropLast_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_xgrzbe$'), new PhiNameRef('dropLast_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_1qu12l$'), new PhiNameRef('dropLast_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_gtcw5h$'), new PhiNameRef('dropLast_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_dqglrj$'), new PhiNameRef('downTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_8ujjk8$'), new PhiNameRef('take')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'emptyList_287e2$'), new PhiNameRef('emptyList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_sfx99b$'), new PhiNameRef('dropLastWhile')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_mrm5p$'), new PhiNameRef('take_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_c3i447$'), new PhiNameRef('dropLastWhile_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_m2jy6x$'), new PhiNameRef('take_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_247xw3$'), new PhiNameRef('dropLastWhile_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_c03ot6$'), new PhiNameRef('take_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_il4kyb$'), new PhiNameRef('dropLastWhile_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_3aefkx$'), new PhiNameRef('take_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_i1oc7r$'), new PhiNameRef('dropLastWhile_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_rblqex$'), new PhiNameRef('take_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_u4nq1f$'), new PhiNameRef('dropLastWhile_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_xgrzbe$'), new PhiNameRef('take_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_3vq27r$'), new PhiNameRef('dropLastWhile_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_1qu12l$'), new PhiNameRef('take_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_xffwn9$'), new PhiNameRef('dropLastWhile_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_gtcw5h$'), new PhiNameRef('take_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_3ji0pj$'), new PhiNameRef('dropLastWhile_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_sfx99b$'), new PhiNameRef('dropWhile')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_c3i447$'), new PhiNameRef('dropWhile_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_247xw3$'), new PhiNameRef('dropWhile_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_il4kyb$'), new PhiNameRef('dropWhile_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_i1oc7r$'), new PhiNameRef('dropWhile_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_u4nq1f$'), new PhiNameRef('dropWhile_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_3vq27r$'), new PhiNameRef('dropWhile_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_xffwn9$'), new PhiNameRef('dropWhile_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_3ji0pj$'), new PhiNameRef('dropWhile_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_ywpv22$'), new PhiNameRef('filterTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_sfx99b$'), new PhiNameRef('filter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_oqzfqb$'), new PhiNameRef('filterTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_c3i447$'), new PhiNameRef('filter_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_pth3ij$'), new PhiNameRef('filterTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_247xw3$'), new PhiNameRef('filter_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_fz4mzi$'), new PhiNameRef('filterTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_il4kyb$'), new PhiNameRef('filter_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_xddlih$'), new PhiNameRef('filterTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_i1oc7r$'), new PhiNameRef('filter_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_b4wiqz$'), new PhiNameRef('filterTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_u4nq1f$'), new PhiNameRef('filter_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_y6u45w$'), new PhiNameRef('filterTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_3vq27r$'), new PhiNameRef('filter_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_soq3qv$'), new PhiNameRef('filterTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_xffwn9$'), new PhiNameRef('filter_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_7as3in$'), new PhiNameRef('filterTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_3ji0pj$'), new PhiNameRef('filter_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_yy1162$'), new PhiNameRef('filterIndexedTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_1x1hc5$'), new PhiNameRef('filterIndexed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_9utof$'), new PhiNameRef('filterIndexedTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_muebcr$'), new PhiNameRef('filterIndexed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_9c7hyn$'), new PhiNameRef('filterIndexedTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_na3tu9$'), new PhiNameRef('filterIndexed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_xxq4i$'), new PhiNameRef('filterIndexedTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_j54otz$'), new PhiNameRef('filterIndexed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_sp77il$'), new PhiNameRef('filterIndexedTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_8y5rp7$'), new PhiNameRef('filterIndexed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_1eenap$'), new PhiNameRef('filterIndexedTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_ngxnyp$'), new PhiNameRef('filterIndexed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_a0ikl4$'), new PhiNameRef('filterIndexedTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_4abx9h$'), new PhiNameRef('filterIndexed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_m16605$'), new PhiNameRef('filterIndexedTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_40mjvt$'), new PhiNameRef('filterIndexed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_evsozx$'), new PhiNameRef('filterIndexedTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_es6ekl$'), new PhiNameRef('filterIndexed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f'), new PhiNameRef('filterIndexedTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_arhcu7$'), new PhiNameRef('forEachIndexed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_0'), new PhiNameRef('filterIndexedTo$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_1b870r$'), new PhiNameRef('forEachIndexed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_1'), new PhiNameRef('filterIndexedTo$lambda_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_2042pt$'), new PhiNameRef('forEachIndexed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_2'), new PhiNameRef('filterIndexedTo$lambda_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_71hk2v$'), new PhiNameRef('forEachIndexed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_3'), new PhiNameRef('filterIndexedTo$lambda_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_xp2l85$'), new PhiNameRef('forEachIndexed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_4'), new PhiNameRef('filterIndexedTo$lambda_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_fd0uwv$'), new PhiNameRef('forEachIndexed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_5'), new PhiNameRef('filterIndexedTo$lambda_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_fchhez$'), new PhiNameRef('forEachIndexed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_6'), new PhiNameRef('filterIndexedTo$lambda_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_jzv3dz$'), new PhiNameRef('forEachIndexed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_7'), new PhiNameRef('filterIndexedTo$lambda_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_u1r9l7$'), new PhiNameRef('forEachIndexed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_ywpv22$'), new PhiNameRef('filterNotTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_sfx99b$'), new PhiNameRef('filterNot')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_oqzfqb$'), new PhiNameRef('filterNotTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_c3i447$'), new PhiNameRef('filterNot_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_pth3ij$'), new PhiNameRef('filterNotTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_247xw3$'), new PhiNameRef('filterNot_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_fz4mzi$'), new PhiNameRef('filterNotTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_il4kyb$'), new PhiNameRef('filterNot_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_xddlih$'), new PhiNameRef('filterNotTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_i1oc7r$'), new PhiNameRef('filterNot_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_b4wiqz$'), new PhiNameRef('filterNotTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_u4nq1f$'), new PhiNameRef('filterNot_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_y6u45w$'), new PhiNameRef('filterNotTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_3vq27r$'), new PhiNameRef('filterNot_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_soq3qv$'), new PhiNameRef('filterNotTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_xffwn9$'), new PhiNameRef('filterNot_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_7as3in$'), new PhiNameRef('filterNotTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_3ji0pj$'), new PhiNameRef('filterNot_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotNull_emfgvx$'), new PhiNameRef('filterNotNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotNullTo_hhiqfl$'), new PhiNameRef('filterNotNullTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_l0m14x$'), new PhiNameRef('slice')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_dww5cs$'), new PhiNameRef('slice_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_stgke$'), new PhiNameRef('slice_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_bo8l67$'), new PhiNameRef('slice_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_renlpk$'), new PhiNameRef('slice_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_l0yznm$'), new PhiNameRef('slice_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_eezeoj$'), new PhiNameRef('slice_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_99nmd2$'), new PhiNameRef('slice_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_bq4su$'), new PhiNameRef('slice_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_ojs19h$'), new PhiNameRef('slice_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_9qpjb4$'), new PhiNameRef('slice_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_uttdbu$'), new PhiNameRef('slice_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_e3izir$'), new PhiNameRef('slice_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_b97tkk$'), new PhiNameRef('slice_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_43gn6u$'), new PhiNameRef('slice_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_tsyzex$'), new PhiNameRef('slice_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_5rv4nu$'), new PhiNameRef('slice_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_f1e7g2$'), new PhiNameRef('slice_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_fzrmze$'), new PhiNameRef('sliceArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_c5a9lg$'), new PhiNameRef('sliceArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_w9izwu$'), new PhiNameRef('sliceArray_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_q1yphb$'), new PhiNameRef('sliceArray_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_ofyxrs$'), new PhiNameRef('sliceArray_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_3hmy1e$'), new PhiNameRef('sliceArray_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_rv5q3n$'), new PhiNameRef('sliceArray_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_ht9wl6$'), new PhiNameRef('sliceArray_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_6pwjvi$'), new PhiNameRef('sliceArray_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_8r7b3e$'), new PhiNameRef('sliceArray_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_dww5cs$'), new PhiNameRef('sliceArray_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_stgke$'), new PhiNameRef('sliceArray_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_bo8l67$'), new PhiNameRef('sliceArray_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_renlpk$'), new PhiNameRef('sliceArray_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_l0yznm$'), new PhiNameRef('sliceArray_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_eezeoj$'), new PhiNameRef('sliceArray_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_99nmd2$'), new PhiNameRef('sliceArray_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sliceArray_bq4su$'), new PhiNameRef('sliceArray_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_8ujjk8$'), new PhiNameRef('takeLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_mrm5p$'), new PhiNameRef('takeLast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_m2jy6x$'), new PhiNameRef('takeLast_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_c03ot6$'), new PhiNameRef('takeLast_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_3aefkx$'), new PhiNameRef('takeLast_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_rblqex$'), new PhiNameRef('takeLast_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_xgrzbe$'), new PhiNameRef('takeLast_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_1qu12l$'), new PhiNameRef('takeLast_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_gtcw5h$'), new PhiNameRef('takeLast_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_us0mfu$'), new PhiNameRef('toList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_sfx99b$'), new PhiNameRef('takeLastWhile')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_964n91$'), new PhiNameRef('toList_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_c3i447$'), new PhiNameRef('takeLastWhile_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_i2lc79$'), new PhiNameRef('toList_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_247xw3$'), new PhiNameRef('takeLastWhile_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_tmsbgo$'), new PhiNameRef('toList_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_il4kyb$'), new PhiNameRef('takeLastWhile_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_se6h4x$'), new PhiNameRef('toList_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_i1oc7r$'), new PhiNameRef('takeLastWhile_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_rjqryz$'), new PhiNameRef('toList_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_u4nq1f$'), new PhiNameRef('takeLastWhile_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_bvy38s$'), new PhiNameRef('toList_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_3vq27r$'), new PhiNameRef('takeLastWhile_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_l1lu5t$'), new PhiNameRef('toList_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_xffwn9$'), new PhiNameRef('takeLastWhile_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_355ntz$'), new PhiNameRef('toList_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_3ji0pj$'), new PhiNameRef('takeLastWhile_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_sfx99b$'), new PhiNameRef('takeWhile')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_c3i447$'), new PhiNameRef('takeWhile_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_247xw3$'), new PhiNameRef('takeWhile_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_il4kyb$'), new PhiNameRef('takeWhile_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_i1oc7r$'), new PhiNameRef('takeWhile_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_u4nq1f$'), new PhiNameRef('takeWhile_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_3vq27r$'), new PhiNameRef('takeWhile_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_xffwn9$'), new PhiNameRef('takeWhile_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_3ji0pj$'), new PhiNameRef('takeWhile_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_4b5429$'), new PhiNameRef('reverse')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_964n91$'), new PhiNameRef('reverse_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_i2lc79$'), new PhiNameRef('reverse_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_tmsbgo$'), new PhiNameRef('reverse_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_se6h4x$'), new PhiNameRef('reverse_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_rjqryz$'), new PhiNameRef('reverse_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_bvy38s$'), new PhiNameRef('reverse_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_l1lu5t$'), new PhiNameRef('reverse_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_355ntz$'), new PhiNameRef('reverse_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_us0mfu$'), new PhiNameRef('reversed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_964n91$'), new PhiNameRef('reversed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_i2lc79$'), new PhiNameRef('reversed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_tmsbgo$'), new PhiNameRef('reversed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_se6h4x$'), new PhiNameRef('reversed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_rjqryz$'), new PhiNameRef('reversed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_bvy38s$'), new PhiNameRef('reversed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_l1lu5t$'), new PhiNameRef('reversed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversed_355ntz$'), new PhiNameRef('reversed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_4b5429$'), new PhiNameRef('reversedArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_964n91$'), new PhiNameRef('reversedArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_i2lc79$'), new PhiNameRef('reversedArray_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_tmsbgo$'), new PhiNameRef('reversedArray_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_se6h4x$'), new PhiNameRef('reversedArray_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_rjqryz$'), new PhiNameRef('reversedArray_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_bvy38s$'), new PhiNameRef('reversedArray_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_l1lu5t$'), new PhiNameRef('reversedArray_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reversedArray_355ntz$'), new PhiNameRef('reversedArray_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortWith_iwcb0m$'), new PhiNameRef('sortWith_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortBy_99hh6x$'), new PhiNameRef('sortBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortByDescending_99hh6x$'), new PhiNameRef('sortByDescending')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_pbinho$'), new PhiNameRef('sortDescending')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_964n91$'), new PhiNameRef('sortDescending_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_i2lc79$'), new PhiNameRef('sortDescending_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_tmsbgo$'), new PhiNameRef('sortDescending_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_se6h4x$'), new PhiNameRef('sortDescending_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_rjqryz$'), new PhiNameRef('sortDescending_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_bvy38s$'), new PhiNameRef('sortDescending_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_355ntz$'), new PhiNameRef('sortDescending_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_pbinho$'), new PhiNameRef('sorted')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_964n91$'), new PhiNameRef('sorted_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_i2lc79$'), new PhiNameRef('sorted_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_tmsbgo$'), new PhiNameRef('sorted_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_se6h4x$'), new PhiNameRef('sorted_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_rjqryz$'), new PhiNameRef('sorted_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_bvy38s$'), new PhiNameRef('sorted_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_355ntz$'), new PhiNameRef('sorted_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_j2hqw1$'), new PhiNameRef('sortedArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_964n91$'), new PhiNameRef('sortedArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_i2lc79$'), new PhiNameRef('sortedArray_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_tmsbgo$'), new PhiNameRef('sortedArray_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_se6h4x$'), new PhiNameRef('sortedArray_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_rjqryz$'), new PhiNameRef('sortedArray_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_bvy38s$'), new PhiNameRef('sortedArray_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArray_355ntz$'), new PhiNameRef('sortedArray_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_j2hqw1$'), new PhiNameRef('sortedArrayDescending')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_964n91$'), new PhiNameRef('sortedArrayDescending_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_i2lc79$'), new PhiNameRef('sortedArrayDescending_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_tmsbgo$'), new PhiNameRef('sortedArrayDescending_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_se6h4x$'), new PhiNameRef('sortedArrayDescending_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_rjqryz$'), new PhiNameRef('sortedArrayDescending_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_bvy38s$'), new PhiNameRef('sortedArrayDescending_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayDescending_355ntz$'), new PhiNameRef('sortedArrayDescending_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedArrayWith_iwcb0m$'), new PhiNameRef('sortedArrayWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_iwcb0m$'), new PhiNameRef('sortedWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_99hh6x$'), new PhiNameRef('sortedBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_movtv6$'), new PhiNameRef('sortedWith_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_jirwv8$'), new PhiNameRef('sortedBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_u08rls$'), new PhiNameRef('sortedWith_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_p0tdr4$'), new PhiNameRef('sortedBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_rsw9pc$'), new PhiNameRef('sortedWith_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_30vlmi$'), new PhiNameRef('sortedBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_wqwa2y$'), new PhiNameRef('sortedWith_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_hom4ws$'), new PhiNameRef('sortedBy_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_1sg7gg$'), new PhiNameRef('sortedWith_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_ksd00w$'), new PhiNameRef('sortedBy_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_jucva8$'), new PhiNameRef('sortedWith_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_fvpt30$'), new PhiNameRef('sortedBy_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_7ffj0g$'), new PhiNameRef('sortedWith_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_xt360o$'), new PhiNameRef('sortedBy_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_7ncb86$'), new PhiNameRef('sortedWith_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_epurks$'), new PhiNameRef('sortedBy_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_99hh6x$'), new PhiNameRef('sortedByDescending')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_jirwv8$'), new PhiNameRef('sortedByDescending_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_p0tdr4$'), new PhiNameRef('sortedByDescending_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_30vlmi$'), new PhiNameRef('sortedByDescending_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_hom4ws$'), new PhiNameRef('sortedByDescending_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_ksd00w$'), new PhiNameRef('sortedByDescending_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_fvpt30$'), new PhiNameRef('sortedByDescending_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_xt360o$'), new PhiNameRef('sortedByDescending_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_epurks$'), new PhiNameRef('sortedByDescending_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_pbinho$'), new PhiNameRef('sortedDescending')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_964n91$'), new PhiNameRef('sortedDescending_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_i2lc79$'), new PhiNameRef('sortedDescending_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_tmsbgo$'), new PhiNameRef('sortedDescending_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_se6h4x$'), new PhiNameRef('sortedDescending_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_rjqryz$'), new PhiNameRef('sortedDescending_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_bvy38s$'), new PhiNameRef('sortedDescending_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_355ntz$'), new PhiNameRef('sortedDescending_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toBooleanArray_xbflon$'), new PhiNameRef('toBooleanArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toByteArray_vn5r1x$'), new PhiNameRef('toByteArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCharArray_vfshuv$'), new PhiNameRef('toCharArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toDoubleArray_pnorak$'), new PhiNameRef('toDoubleArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toFloatArray_529xol$'), new PhiNameRef('toFloatArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toIntArray_5yd9ji$'), new PhiNameRef('toIntArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toLongArray_r2b9hd$'), new PhiNameRef('toLongArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toShortArray_t8c1id$'), new PhiNameRef('toShortArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapCapacity_za3lpa$'), new PhiNameRef('mapCapacity')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtLeast_dqglrj$'), new PhiNameRef('coerceAtLeast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_t6a58$'), new PhiNameRef('associateTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_51p84z$'), new PhiNameRef('associate')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_30k0gw$'), new PhiNameRef('associateTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_hllm27$'), new PhiNameRef('associate_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_pdwiok$'), new PhiNameRef('associateTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_21tl2r$'), new PhiNameRef('associate_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_yjydda$'), new PhiNameRef('associateTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_ff74x3$'), new PhiNameRef('associate_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_o9od0g$'), new PhiNameRef('associateTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_d7c9rj$'), new PhiNameRef('associate_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_642zho$'), new PhiNameRef('associateTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_ddcx1p$'), new PhiNameRef('associate_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_t00y2o$'), new PhiNameRef('associateTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_neh4lr$'), new PhiNameRef('associate_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_l2eg58$'), new PhiNameRef('associateTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_su3lit$'), new PhiNameRef('associate_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_7k1sps$'), new PhiNameRef('associateTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_2m77bl$'), new PhiNameRef('associate_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_jnbl5d$'), new PhiNameRef('associateByTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_73x53s$'), new PhiNameRef('associateBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_6rsi3p$'), new PhiNameRef('associateByTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_i1orpu$'), new PhiNameRef('associateBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_mvhbwl$'), new PhiNameRef('associateByTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_2yxo7i$'), new PhiNameRef('associateBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_jk03w$'), new PhiNameRef('associateByTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_vhfi20$'), new PhiNameRef('associateBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_fajp69$'), new PhiNameRef('associateByTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_oifiz6$'), new PhiNameRef('associateBy_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_z2kljv$'), new PhiNameRef('associateByTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_5k9h5a$'), new PhiNameRef('associateBy_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_s8dkm4$'), new PhiNameRef('associateByTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_hbdsc2$'), new PhiNameRef('associateBy_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_ro4olb$'), new PhiNameRef('associateByTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_8oadti$'), new PhiNameRef('associateBy_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_deafr$'), new PhiNameRef('associateByTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_pmkh76$'), new PhiNameRef('associateBy_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_8rzqwv$'), new PhiNameRef('associateByTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_67lihi$'), new PhiNameRef('associateBy_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_cne8q6$'), new PhiNameRef('associateByTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_prlkfp$'), new PhiNameRef('associateBy_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_gcgqha$'), new PhiNameRef('associateByTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_emzy0b$'), new PhiNameRef('associateBy_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_snsha9$'), new PhiNameRef('associateByTo_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_5wtufc$'), new PhiNameRef('associateBy_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_ryii4m$'), new PhiNameRef('associateByTo_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_hq1329$'), new PhiNameRef('associateBy_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_6a7lri$'), new PhiNameRef('associateByTo_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_jjomwl$'), new PhiNameRef('associateBy_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_lxofut$'), new PhiNameRef('associateByTo_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_bvjqb8$'), new PhiNameRef('associateBy_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_u9h8ze$'), new PhiNameRef('associateByTo_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_hxvtq7$'), new PhiNameRef('associateBy_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_u7k4io$'), new PhiNameRef('associateByTo_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_nlw5ll$'), new PhiNameRef('associateBy_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_5n4o2z$'), new PhiNameRef('toCollection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_iu3dad$'), new PhiNameRef('toCollection_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_wvb8kp$'), new PhiNameRef('toCollection_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_u9aek7$'), new PhiNameRef('toCollection_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_j1hzal$'), new PhiNameRef('toCollection_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_tkc3iv$'), new PhiNameRef('toCollection_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_hivqqf$'), new PhiNameRef('toCollection_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_v35pav$'), new PhiNameRef('toCollection_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_qezmjj$'), new PhiNameRef('toCollection_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_us0mfu$'), new PhiNameRef('toHashSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_964n91$'), new PhiNameRef('toHashSet_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_i2lc79$'), new PhiNameRef('toHashSet_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_tmsbgo$'), new PhiNameRef('toHashSet_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_se6h4x$'), new PhiNameRef('toHashSet_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_rjqryz$'), new PhiNameRef('toHashSet_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_bvy38s$'), new PhiNameRef('toHashSet_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_l1lu5t$'), new PhiNameRef('toHashSet_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_355ntz$'), new PhiNameRef('toHashSet_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_us0mfu$'), new PhiNameRef('toMutableList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_964n91$'), new PhiNameRef('toMutableList_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_i2lc79$'), new PhiNameRef('toMutableList_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_tmsbgo$'), new PhiNameRef('toMutableList_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_se6h4x$'), new PhiNameRef('toMutableList_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_rjqryz$'), new PhiNameRef('toMutableList_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_bvy38s$'), new PhiNameRef('toMutableList_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_l1lu5t$'), new PhiNameRef('toMutableList_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_355ntz$'), new PhiNameRef('toMutableList_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_us0mfu$'), new PhiNameRef('toSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_964n91$'), new PhiNameRef('toSet_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_i2lc79$'), new PhiNameRef('toSet_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_tmsbgo$'), new PhiNameRef('toSet_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_se6h4x$'), new PhiNameRef('toSet_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_rjqryz$'), new PhiNameRef('toSet_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_bvy38s$'), new PhiNameRef('toSet_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_l1lu5t$'), new PhiNameRef('toSet_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_355ntz$'), new PhiNameRef('toSet_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_qpz03$'), new PhiNameRef('flatMapTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_m96iup$'), new PhiNameRef('flatMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_hrglhs$'), new PhiNameRef('flatMapTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_7g5j6z$'), new PhiNameRef('flatMap_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_9q2ddu$'), new PhiNameRef('flatMapTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_2azm6x$'), new PhiNameRef('flatMap_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_ae7k4k$'), new PhiNameRef('flatMapTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_k7x5xb$'), new PhiNameRef('flatMap_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_6h8o5s$'), new PhiNameRef('flatMapTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_jv6p05$'), new PhiNameRef('flatMap_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_fngh32$'), new PhiNameRef('flatMapTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_a6ay1l$'), new PhiNameRef('flatMap_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_53zyz4$'), new PhiNameRef('flatMapTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_kx9v79$'), new PhiNameRef('flatMap_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_9hj6lm$'), new PhiNameRef('flatMapTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_io4c5r$'), new PhiNameRef('flatMap_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_5s36kw$'), new PhiNameRef('flatMapTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_m4binf$'), new PhiNameRef('flatMap_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'addAll_ipc267$'), new PhiNameRef('addAll_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_1qxbxg$'), new PhiNameRef('groupByTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_73x53s$'), new PhiNameRef('groupBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_6kmz48$'), new PhiNameRef('groupByTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_i1orpu$'), new PhiNameRef('groupBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_bo8r4m$'), new PhiNameRef('groupByTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_2yxo7i$'), new PhiNameRef('groupBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_q1iim5$'), new PhiNameRef('groupByTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_vhfi20$'), new PhiNameRef('groupBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_mu2a4k$'), new PhiNameRef('groupByTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_oifiz6$'), new PhiNameRef('groupBy_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_x0uw5m$'), new PhiNameRef('groupByTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_5k9h5a$'), new PhiNameRef('groupBy_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_xcz1ip$'), new PhiNameRef('groupByTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_hbdsc2$'), new PhiNameRef('groupBy_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_mrd1pq$'), new PhiNameRef('groupByTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_8oadti$'), new PhiNameRef('groupBy_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_axxeqe$'), new PhiNameRef('groupByTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_pmkh76$'), new PhiNameRef('groupBy_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_ha2xv2$'), new PhiNameRef('groupByTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_67lihi$'), new PhiNameRef('groupBy_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_lnembp$'), new PhiNameRef('groupByTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_prlkfp$'), new PhiNameRef('groupBy_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_n3jh2d$'), new PhiNameRef('groupByTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_emzy0b$'), new PhiNameRef('groupBy_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_ted19q$'), new PhiNameRef('groupByTo_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_5wtufc$'), new PhiNameRef('groupBy_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_bzm9l3$'), new PhiNameRef('groupByTo_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_hq1329$'), new PhiNameRef('groupBy_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_4auzph$'), new PhiNameRef('groupByTo_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_jjomwl$'), new PhiNameRef('groupBy_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_akngni$'), new PhiNameRef('groupByTo_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_bvjqb8$'), new PhiNameRef('groupBy_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_au1frb$'), new PhiNameRef('groupByTo_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_hxvtq7$'), new PhiNameRef('groupBy_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_cmmt3n$'), new PhiNameRef('groupByTo_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_nlw5ll$'), new PhiNameRef('groupBy_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f'), new PhiNameRef('groupByTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrPut_9wl75a$'), new PhiNameRef('getOrPut')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_0'), new PhiNameRef('groupByTo$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_1'), new PhiNameRef('groupByTo$lambda_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_2'), new PhiNameRef('groupByTo$lambda_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_3'), new PhiNameRef('groupByTo$lambda_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_4'), new PhiNameRef('groupByTo$lambda_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_5'), new PhiNameRef('groupByTo$lambda_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_6'), new PhiNameRef('groupByTo$lambda_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_7'), new PhiNameRef('groupByTo$lambda_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_8'), new PhiNameRef('groupByTo$lambda_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_9'), new PhiNameRef('groupByTo$lambda_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_10'), new PhiNameRef('groupByTo$lambda_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_11'), new PhiNameRef('groupByTo$lambda_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_12'), new PhiNameRef('groupByTo$lambda_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_13'), new PhiNameRef('groupByTo$lambda_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_14'), new PhiNameRef('groupByTo$lambda_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_15'), new PhiNameRef('groupByTo$lambda_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_16'), new PhiNameRef('groupByTo$lambda_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupingBy$f'), new PhiNameRef('groupingBy$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupingBy_73x53s$'), new PhiNameRef('groupingBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_4g4n0c$'), new PhiNameRef('mapTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_73x53s$'), new PhiNameRef('map')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_lvjep5$'), new PhiNameRef('mapTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_i1orpu$'), new PhiNameRef('map_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_jtf97t$'), new PhiNameRef('mapTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_2yxo7i$'), new PhiNameRef('map_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_18cmir$'), new PhiNameRef('mapTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_vhfi20$'), new PhiNameRef('map_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_6e2q1j$'), new PhiNameRef('mapTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_oifiz6$'), new PhiNameRef('map_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_jpuhm1$'), new PhiNameRef('mapTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_5k9h5a$'), new PhiNameRef('map_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_u2n9ft$'), new PhiNameRef('mapTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_hbdsc2$'), new PhiNameRef('map_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_jrz1ox$'), new PhiNameRef('mapTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_8oadti$'), new PhiNameRef('map_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_bsh7dj$'), new PhiNameRef('mapTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_pmkh76$'), new PhiNameRef('map_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_d8bv34$'), new PhiNameRef('mapIndexedTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_d05wzo$'), new PhiNameRef('mapIndexed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_797pmj$'), new PhiNameRef('mapIndexedTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_b1mzcm$'), new PhiNameRef('mapIndexed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_5akchx$'), new PhiNameRef('mapIndexedTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_17cht6$'), new PhiNameRef('mapIndexed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_ey1r33$'), new PhiNameRef('mapIndexedTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_n9l81o$'), new PhiNameRef('mapIndexed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_yqgxdn$'), new PhiNameRef('mapIndexedTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_6hpo96$'), new PhiNameRef('mapIndexed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_3uie0r$'), new PhiNameRef('mapIndexedTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_xqj56$'), new PhiNameRef('mapIndexed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_3zacuz$'), new PhiNameRef('mapIndexedTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_623t7u$'), new PhiNameRef('mapIndexed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_r9wz1$'), new PhiNameRef('mapIndexedTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_tk88gi$'), new PhiNameRef('mapIndexed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_d11l8l$'), new PhiNameRef('mapIndexedTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_8r1kga$'), new PhiNameRef('mapIndexed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNullTo_97f7ib$'), new PhiNameRef('mapIndexedNotNullTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNull_aytly7$'), new PhiNameRef('mapIndexedNotNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNullTo$f$f'), new PhiNameRef('mapIndexedNotNullTo$lambda$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNullTo$f'), new PhiNameRef('mapIndexedNotNullTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo_cni40x$'), new PhiNameRef('mapNotNullTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNull_oxs7gb$'), new PhiNameRef('mapNotNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo$f$f'), new PhiNameRef('mapNotNullTo$lambda$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo$f'), new PhiNameRef('mapNotNullTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_je628z$'), new PhiNameRef('forEach')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_us0mfu$'), new PhiNameRef('withIndex')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_964n91$'), new PhiNameRef('withIndex_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_i2lc79$'), new PhiNameRef('withIndex_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_tmsbgo$'), new PhiNameRef('withIndex_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_se6h4x$'), new PhiNameRef('withIndex_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_rjqryz$'), new PhiNameRef('withIndex_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_bvy38s$'), new PhiNameRef('withIndex_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_l1lu5t$'), new PhiNameRef('withIndex_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_355ntz$'), new PhiNameRef('withIndex_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_us0mfu$'), new PhiNameRef('distinct')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_964n91$'), new PhiNameRef('distinct_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_i2lc79$'), new PhiNameRef('distinct_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_tmsbgo$'), new PhiNameRef('distinct_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_se6h4x$'), new PhiNameRef('distinct_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_rjqryz$'), new PhiNameRef('distinct_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_bvy38s$'), new PhiNameRef('distinct_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_l1lu5t$'), new PhiNameRef('distinct_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_355ntz$'), new PhiNameRef('distinct_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_73x53s$'), new PhiNameRef('distinctBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_i1orpu$'), new PhiNameRef('distinctBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_2yxo7i$'), new PhiNameRef('distinctBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_vhfi20$'), new PhiNameRef('distinctBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_oifiz6$'), new PhiNameRef('distinctBy_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_5k9h5a$'), new PhiNameRef('distinctBy_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_hbdsc2$'), new PhiNameRef('distinctBy_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_8oadti$'), new PhiNameRef('distinctBy_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_pmkh76$'), new PhiNameRef('distinctBy_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_fe0ubx$'), new PhiNameRef('intersect')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_hrvwcl$'), new PhiNameRef('intersect_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_ao5c0d$'), new PhiNameRef('intersect_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_e3izir$'), new PhiNameRef('intersect_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_665vtv$'), new PhiNameRef('intersect_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_v6evar$'), new PhiNameRef('intersect_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_prhtir$'), new PhiNameRef('intersect_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_s6pdl9$'), new PhiNameRef('intersect_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_ux50q1$'), new PhiNameRef('intersect_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_fe0ubx$'), new PhiNameRef('subtract')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_hrvwcl$'), new PhiNameRef('subtract_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_ao5c0d$'), new PhiNameRef('subtract_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_e3izir$'), new PhiNameRef('subtract_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_665vtv$'), new PhiNameRef('subtract_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_v6evar$'), new PhiNameRef('subtract_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_prhtir$'), new PhiNameRef('subtract_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_s6pdl9$'), new PhiNameRef('subtract_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_ux50q1$'), new PhiNameRef('subtract_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_us0mfu$'), new PhiNameRef('toMutableSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_964n91$'), new PhiNameRef('toMutableSet_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_i2lc79$'), new PhiNameRef('toMutableSet_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_tmsbgo$'), new PhiNameRef('toMutableSet_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_se6h4x$'), new PhiNameRef('toMutableSet_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_rjqryz$'), new PhiNameRef('toMutableSet_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_bvy38s$'), new PhiNameRef('toMutableSet_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_l1lu5t$'), new PhiNameRef('toMutableSet_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_355ntz$'), new PhiNameRef('toMutableSet_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_fe0ubx$'), new PhiNameRef('union')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_hrvwcl$'), new PhiNameRef('union_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_ao5c0d$'), new PhiNameRef('union_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_e3izir$'), new PhiNameRef('union_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_665vtv$'), new PhiNameRef('union_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_v6evar$'), new PhiNameRef('union_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_prhtir$'), new PhiNameRef('union_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_s6pdl9$'), new PhiNameRef('union_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_ux50q1$'), new PhiNameRef('union_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_sfx99b$'), new PhiNameRef('all')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_c3i447$'), new PhiNameRef('all_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_247xw3$'), new PhiNameRef('all_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_il4kyb$'), new PhiNameRef('all_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_i1oc7r$'), new PhiNameRef('all_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_u4nq1f$'), new PhiNameRef('all_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_3vq27r$'), new PhiNameRef('all_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_xffwn9$'), new PhiNameRef('all_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_3ji0pj$'), new PhiNameRef('all_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_us0mfu$'), new PhiNameRef('any_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_964n91$'), new PhiNameRef('any_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_i2lc79$'), new PhiNameRef('any_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_tmsbgo$'), new PhiNameRef('any_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_se6h4x$'), new PhiNameRef('any_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_rjqryz$'), new PhiNameRef('any_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_bvy38s$'), new PhiNameRef('any_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_l1lu5t$'), new PhiNameRef('any_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_355ntz$'), new PhiNameRef('any_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_sfx99b$'), new PhiNameRef('any_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_c3i447$'), new PhiNameRef('any_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_247xw3$'), new PhiNameRef('any_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_il4kyb$'), new PhiNameRef('any_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_i1oc7r$'), new PhiNameRef('any_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_u4nq1f$'), new PhiNameRef('any_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_3vq27r$'), new PhiNameRef('any_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_xffwn9$'), new PhiNameRef('any_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_3ji0pj$'), new PhiNameRef('any_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_sfx99b$'), new PhiNameRef('count_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_c3i447$'), new PhiNameRef('count_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_247xw3$'), new PhiNameRef('count_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_il4kyb$'), new PhiNameRef('count_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_i1oc7r$'), new PhiNameRef('count_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_u4nq1f$'), new PhiNameRef('count_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_3vq27r$'), new PhiNameRef('count_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_xffwn9$'), new PhiNameRef('count_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_3ji0pj$'), new PhiNameRef('count_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_agj4oo$'), new PhiNameRef('fold')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_fl151e$'), new PhiNameRef('fold_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_9nnzbm$'), new PhiNameRef('fold_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_sgag36$'), new PhiNameRef('fold_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_sc6mze$'), new PhiNameRef('fold_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_fnzdea$'), new PhiNameRef('fold_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_mnppu8$'), new PhiNameRef('fold_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_43zc0i$'), new PhiNameRef('fold_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_8nwlk6$'), new PhiNameRef('fold_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_oj0mn0$'), new PhiNameRef('foldIndexed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_qzmh7i$'), new PhiNameRef('foldIndexed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_aijnee$'), new PhiNameRef('foldIndexed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_28ylm2$'), new PhiNameRef('foldIndexed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_37s2ie$'), new PhiNameRef('foldIndexed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_faee2y$'), new PhiNameRef('foldIndexed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_ufoyfg$'), new PhiNameRef('foldIndexed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_z82r06$'), new PhiNameRef('foldIndexed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_sfak8u$'), new PhiNameRef('foldIndexed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_svmc2u$'), new PhiNameRef('foldRight')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_wssfls$'), new PhiNameRef('foldRight_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_9ug2j2$'), new PhiNameRef('foldRight_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_8vbxp4$'), new PhiNameRef('foldRight_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_1fuzy8$'), new PhiNameRef('foldRight_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_lsgf76$'), new PhiNameRef('foldRight_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_v5l2cg$'), new PhiNameRef('foldRight_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_ej6ng6$'), new PhiNameRef('foldRight_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_i7w5ds$'), new PhiNameRef('foldRight_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_et4u4i$'), new PhiNameRef('foldRightIndexed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_le73fo$'), new PhiNameRef('foldRightIndexed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_8zkega$'), new PhiNameRef('foldRightIndexed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_ltx404$'), new PhiNameRef('foldRightIndexed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_qk9kf8$'), new PhiNameRef('foldRightIndexed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_95xca2$'), new PhiNameRef('foldRightIndexed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_lxtlx8$'), new PhiNameRef('foldRightIndexed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_gkwrji$'), new PhiNameRef('foldRightIndexed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_ivb0f8$'), new PhiNameRef('foldRightIndexed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_l09evt$'), new PhiNameRef('forEach_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_q32uhv$'), new PhiNameRef('forEach_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_4l7qrh$'), new PhiNameRef('forEach_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_j4vz15$'), new PhiNameRef('forEach_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_w9sc9v$'), new PhiNameRef('forEach_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_txsb7r$'), new PhiNameRef('forEach_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_g04iob$'), new PhiNameRef('forEach_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_kxoc7t$'), new PhiNameRef('forEach_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_pnorak$'), new PhiNameRef('max')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_529xol$'), new PhiNameRef('max_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_pbinho$'), new PhiNameRef('max_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_964n91$'), new PhiNameRef('max_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_i2lc79$'), new PhiNameRef('max_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_tmsbgo$'), new PhiNameRef('max_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_se6h4x$'), new PhiNameRef('max_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_rjqryz$'), new PhiNameRef('max_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_bvy38s$'), new PhiNameRef('max_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_355ntz$'), new PhiNameRef('max_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_99hh6x$'), new PhiNameRef('maxBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_jirwv8$'), new PhiNameRef('maxBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_p0tdr4$'), new PhiNameRef('maxBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_30vlmi$'), new PhiNameRef('maxBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_hom4ws$'), new PhiNameRef('maxBy_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_ksd00w$'), new PhiNameRef('maxBy_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_fvpt30$'), new PhiNameRef('maxBy_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_xt360o$'), new PhiNameRef('maxBy_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_epurks$'), new PhiNameRef('maxBy_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_iwcb0m$'), new PhiNameRef('maxWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_movtv6$'), new PhiNameRef('maxWith_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_u08rls$'), new PhiNameRef('maxWith_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_rsw9pc$'), new PhiNameRef('maxWith_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_wqwa2y$'), new PhiNameRef('maxWith_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_1sg7gg$'), new PhiNameRef('maxWith_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_jucva8$'), new PhiNameRef('maxWith_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_7ffj0g$'), new PhiNameRef('maxWith_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_7ncb86$'), new PhiNameRef('maxWith_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_pnorak$'), new PhiNameRef('min')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_529xol$'), new PhiNameRef('min_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_pbinho$'), new PhiNameRef('min_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_964n91$'), new PhiNameRef('min_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_i2lc79$'), new PhiNameRef('min_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_tmsbgo$'), new PhiNameRef('min_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_se6h4x$'), new PhiNameRef('min_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_rjqryz$'), new PhiNameRef('min_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_bvy38s$'), new PhiNameRef('min_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_355ntz$'), new PhiNameRef('min_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_99hh6x$'), new PhiNameRef('minBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_jirwv8$'), new PhiNameRef('minBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_p0tdr4$'), new PhiNameRef('minBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_30vlmi$'), new PhiNameRef('minBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_hom4ws$'), new PhiNameRef('minBy_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_ksd00w$'), new PhiNameRef('minBy_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_fvpt30$'), new PhiNameRef('minBy_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_xt360o$'), new PhiNameRef('minBy_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_epurks$'), new PhiNameRef('minBy_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_iwcb0m$'), new PhiNameRef('minWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_movtv6$'), new PhiNameRef('minWith_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_u08rls$'), new PhiNameRef('minWith_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_rsw9pc$'), new PhiNameRef('minWith_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_wqwa2y$'), new PhiNameRef('minWith_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_1sg7gg$'), new PhiNameRef('minWith_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_jucva8$'), new PhiNameRef('minWith_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_7ffj0g$'), new PhiNameRef('minWith_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_7ncb86$'), new PhiNameRef('minWith_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_us0mfu$'), new PhiNameRef('none')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_964n91$'), new PhiNameRef('none_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_i2lc79$'), new PhiNameRef('none_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_tmsbgo$'), new PhiNameRef('none_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_se6h4x$'), new PhiNameRef('none_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_rjqryz$'), new PhiNameRef('none_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_bvy38s$'), new PhiNameRef('none_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_l1lu5t$'), new PhiNameRef('none_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_355ntz$'), new PhiNameRef('none_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_sfx99b$'), new PhiNameRef('none_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_c3i447$'), new PhiNameRef('none_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_247xw3$'), new PhiNameRef('none_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_il4kyb$'), new PhiNameRef('none_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_i1oc7r$'), new PhiNameRef('none_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_u4nq1f$'), new PhiNameRef('none_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_3vq27r$'), new PhiNameRef('none_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_xffwn9$'), new PhiNameRef('none_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_3ji0pj$'), new PhiNameRef('none_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_5bz9yp$'), new PhiNameRef('reduce')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_ua0gmo$'), new PhiNameRef('reduce_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_5x6csy$'), new PhiNameRef('reduce_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_vuuzha$'), new PhiNameRef('reduce_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_8z4g8g$'), new PhiNameRef('reduce_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_m57mj6$'), new PhiNameRef('reduce_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_5rthjk$'), new PhiNameRef('reduce_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_if3lfm$'), new PhiNameRef('reduce_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_724a40$'), new PhiNameRef('reduce_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_f61gul$'), new PhiNameRef('reduceIndexed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_y1rlg4$'), new PhiNameRef('reduceIndexed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_ctdw5m$'), new PhiNameRef('reduceIndexed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_y7bnwe$'), new PhiNameRef('reduceIndexed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_54m7jg$'), new PhiNameRef('reduceIndexed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_mzocqy$'), new PhiNameRef('reduceIndexed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_i4uovg$'), new PhiNameRef('reduceIndexed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_fqu0be$'), new PhiNameRef('reduceIndexed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_n25zu4$'), new PhiNameRef('reduceIndexed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_m9c08d$'), new PhiNameRef('reduceRight')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_ua0gmo$'), new PhiNameRef('reduceRight_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_5x6csy$'), new PhiNameRef('reduceRight_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_vuuzha$'), new PhiNameRef('reduceRight_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_8z4g8g$'), new PhiNameRef('reduceRight_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_m57mj6$'), new PhiNameRef('reduceRight_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_5rthjk$'), new PhiNameRef('reduceRight_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_if3lfm$'), new PhiNameRef('reduceRight_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_724a40$'), new PhiNameRef('reduceRight_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_cf9tch$'), new PhiNameRef('reduceRightIndexed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_y1rlg4$'), new PhiNameRef('reduceRightIndexed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_ctdw5m$'), new PhiNameRef('reduceRightIndexed_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_y7bnwe$'), new PhiNameRef('reduceRightIndexed_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_54m7jg$'), new PhiNameRef('reduceRightIndexed_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_mzocqy$'), new PhiNameRef('reduceRightIndexed_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_i4uovg$'), new PhiNameRef('reduceRightIndexed_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_fqu0be$'), new PhiNameRef('reduceRightIndexed_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_n25zu4$'), new PhiNameRef('reduceRightIndexed_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_9qh8u2$'), new PhiNameRef('sumBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_s616nk$'), new PhiNameRef('sumBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_sccsus$'), new PhiNameRef('sumBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_n2f0qi$'), new PhiNameRef('sumBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_8jxuvk$'), new PhiNameRef('sumBy_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_lv6o8c$'), new PhiNameRef('sumBy_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_a4xh9s$'), new PhiNameRef('sumBy_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_d84lg4$'), new PhiNameRef('sumBy_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_izzzcg$'), new PhiNameRef('sumBy_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_vyz3zq$'), new PhiNameRef('sumByDouble')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_kkr9hw$'), new PhiNameRef('sumByDouble_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_u2ap1s$'), new PhiNameRef('sumByDouble_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_suc1jq$'), new PhiNameRef('sumByDouble_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_rqe08c$'), new PhiNameRef('sumByDouble_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_8jdnkg$'), new PhiNameRef('sumByDouble_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_vuwwjw$'), new PhiNameRef('sumByDouble_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_1f8lq0$'), new PhiNameRef('sumByDouble_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_ik7e6s$'), new PhiNameRef('sumByDouble_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'requireNoNulls_9b7vla$'), new PhiNameRef('requireNoNulls')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_sfx99b$'), new PhiNameRef('partition')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_c3i447$'), new PhiNameRef('partition_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_247xw3$'), new PhiNameRef('partition_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_il4kyb$'), new PhiNameRef('partition_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_i1oc7r$'), new PhiNameRef('partition_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_u4nq1f$'), new PhiNameRef('partition_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_3vq27r$'), new PhiNameRef('partition_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_xffwn9$'), new PhiNameRef('partition_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_3ji0pj$'), new PhiNameRef('partition_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_r9t3v7$'), new PhiNameRef('zip')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_f8fqmg$'), new PhiNameRef('zip_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_ty5cjm$'), new PhiNameRef('zip_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_hh3at1$'), new PhiNameRef('zip_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_1qoa9o$'), new PhiNameRef('zip_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_84cwbm$'), new PhiNameRef('zip_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_eqchap$'), new PhiNameRef('zip_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_jvo9m6$'), new PhiNameRef('zip_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_stlr6e$'), new PhiNameRef('zip_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_t5fk8e$'), new PhiNameRef('zip_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_c731w7$'), new PhiNameRef('zip_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_ochmv5$'), new PhiNameRef('zip_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_fvmov$'), new PhiNameRef('zip_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_g0832p$'), new PhiNameRef('zip_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_cpiwht$'), new PhiNameRef('zip_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_p5twxn$'), new PhiNameRef('zip_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_6fiayp$'), new PhiNameRef('zip_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_xwrum3$'), new PhiNameRef('zip_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_evp5ax$'), new PhiNameRef('zip_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_bguba6$'), new PhiNameRef('zip_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_1xs6vw$'), new PhiNameRef('zip_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_rs3hg1$'), new PhiNameRef('zip_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_spy2lm$'), new PhiNameRef('zip_25')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_s1ag1o$'), new PhiNameRef('zip_27')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_qczpth$'), new PhiNameRef('zip_29')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_za56m0$'), new PhiNameRef('zip_31')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_jfs5m8$'), new PhiNameRef('zip_33')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'collectionSizeOrDefault_ba2ldo$'), new PhiNameRef('collectionSizeOrDefault')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_aoaibi$'), new PhiNameRef('zip_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_2fxjb5$'), new PhiNameRef('zip_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_ey57vj$'), new PhiNameRef('zip_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_582drv$'), new PhiNameRef('zip_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_5584fz$'), new PhiNameRef('zip_26')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_dszx9d$'), new PhiNameRef('zip_28')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_p8lavz$'), new PhiNameRef('zip_30')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_e6btvt$'), new PhiNameRef('zip_32')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_imz1rz$'), new PhiNameRef('zip_34')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_ndt7zj$'), new PhiNameRef('zip_35')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_907jet$'), new PhiNameRef('zip_37')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_mgkctd$'), new PhiNameRef('zip_39')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_tq12cv$'), new PhiNameRef('zip_41')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_tec1tx$'), new PhiNameRef('zip_43')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_pmvpm9$'), new PhiNameRef('zip_45')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_qsfoml$'), new PhiNameRef('zip_47')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_wxyzfz$'), new PhiNameRef('zip_49')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_fvjg0r$'), new PhiNameRef('zip_36')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_u8n9wb$'), new PhiNameRef('zip_38')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_2l2rw1$'), new PhiNameRef('zip_40')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_3bxm8r$'), new PhiNameRef('zip_42')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_h04u5h$'), new PhiNameRef('zip_44')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_t5hjvf$'), new PhiNameRef('zip_46')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_l9qpsl$'), new PhiNameRef('zip_48')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_rvvoh1$'), new PhiNameRef('zip_50')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_aust33$'), new PhiNameRef('joinTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_5gzrdz$'), new PhiNameRef('joinTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_9p6wnv$'), new PhiNameRef('joinTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_sylrwb$'), new PhiNameRef('joinTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_d79htt$'), new PhiNameRef('joinTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_ohfn4r$'), new PhiNameRef('joinTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_ghgesr$'), new PhiNameRef('joinTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_7e5iud$'), new PhiNameRef('joinTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_gm3uff$'), new PhiNameRef('joinTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_cgipc5$'), new PhiNameRef('joinToString')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_s78119$'), new PhiNameRef('joinToString_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_khecbp$'), new PhiNameRef('joinToString_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_vk9fgb$'), new PhiNameRef('joinToString_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_q4l9w5$'), new PhiNameRef('joinToString_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_cph1y3$'), new PhiNameRef('joinToString_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_raq4np$'), new PhiNameRef('joinToString_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_fgvu1x$'), new PhiNameRef('joinToString_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_xqrb1d$'), new PhiNameRef('joinToString_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_us0mfu$'), new PhiNameRef('asIterable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_964n91$'), new PhiNameRef('asIterable_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_i2lc79$'), new PhiNameRef('asIterable_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_tmsbgo$'), new PhiNameRef('asIterable_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_se6h4x$'), new PhiNameRef('asIterable_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_rjqryz$'), new PhiNameRef('asIterable_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_bvy38s$'), new PhiNameRef('asIterable_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_l1lu5t$'), new PhiNameRef('asIterable_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asIterable_355ntz$'), new PhiNameRef('asIterable_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_us0mfu$'), new PhiNameRef('asSequence')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_964n91$'), new PhiNameRef('asSequence_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_i2lc79$'), new PhiNameRef('asSequence_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_tmsbgo$'), new PhiNameRef('asSequence_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_se6h4x$'), new PhiNameRef('asSequence_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_rjqryz$'), new PhiNameRef('asSequence_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_bvy38s$'), new PhiNameRef('asSequence_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_l1lu5t$'), new PhiNameRef('asSequence_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_355ntz$'), new PhiNameRef('asSequence_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_vn5r1x$'), new PhiNameRef('average')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_t8c1id$'), new PhiNameRef('average_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_5yd9ji$'), new PhiNameRef('average_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_r2b9hd$'), new PhiNameRef('average_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_529xol$'), new PhiNameRef('average_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_pnorak$'), new PhiNameRef('average_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_964n91$'), new PhiNameRef('average_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_i2lc79$'), new PhiNameRef('average_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_tmsbgo$'), new PhiNameRef('average_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_se6h4x$'), new PhiNameRef('average_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_rjqryz$'), new PhiNameRef('average_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_bvy38s$'), new PhiNameRef('average_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_vn5r1x$'), new PhiNameRef('sum')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_t8c1id$'), new PhiNameRef('sum_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_5yd9ji$'), new PhiNameRef('sum_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_r2b9hd$'), new PhiNameRef('sum_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_529xol$'), new PhiNameRef('sum_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_pnorak$'), new PhiNameRef('sum_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_964n91$'), new PhiNameRef('sum_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_i2lc79$'), new PhiNameRef('sum_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_tmsbgo$'), new PhiNameRef('sum_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_se6h4x$'), new PhiNameRef('sum_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_rjqryz$'), new PhiNameRef('sum_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_bvy38s$'), new PhiNameRef('sum_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_us0mfu$'), new PhiNameRef('asList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_964n91$'), new PhiNameRef('asList_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_i2lc79$'), new PhiNameRef('asList_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_tmsbgo$'), new PhiNameRef('asList_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_se6h4x$'), new PhiNameRef('asList_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_rjqryz$'), new PhiNameRef('asList_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_bvy38s$'), new PhiNameRef('asList_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_l1lu5t$'), new PhiNameRef('asList_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asList_355ntz$'), new PhiNameRef('asList_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_us0mfu$'), new PhiNameRef('copyOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_964n91$'), new PhiNameRef('copyOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_i2lc79$'), new PhiNameRef('copyOf_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_tmsbgo$'), new PhiNameRef('copyOf_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_se6h4x$'), new PhiNameRef('copyOf_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_rjqryz$'), new PhiNameRef('copyOf_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_bvy38s$'), new PhiNameRef('copyOf_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_l1lu5t$'), new PhiNameRef('copyOf_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_355ntz$'), new PhiNameRef('copyOf_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_mrm5p$'), new PhiNameRef('copyOf_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_m2jy6x$'), new PhiNameRef('copyOf_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_c03ot6$'), new PhiNameRef('copyOf_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_3aefkx$'), new PhiNameRef('copyOf_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_rblqex$'), new PhiNameRef('copyOf_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_xgrzbe$'), new PhiNameRef('copyOf_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_1qu12l$'), new PhiNameRef('copyOf_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_gtcw5h$'), new PhiNameRef('copyOf_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOf_8ujjk8$'), new PhiNameRef('copyOf_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_5f8l3u$'), new PhiNameRef('copyOfRange')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_ietg8x$'), new PhiNameRef('copyOfRange_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_qxueih$'), new PhiNameRef('copyOfRange_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_6pxxqk$'), new PhiNameRef('copyOfRange_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_2n8m0j$'), new PhiNameRef('copyOfRange_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_kh1mav$'), new PhiNameRef('copyOfRange_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_yfnal4$'), new PhiNameRef('copyOfRange_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_ke2ov9$'), new PhiNameRef('copyOfRange_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'copyOfRange_wlitf7$'), new PhiNameRef('copyOfRange_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_mjy6jw$'), new PhiNameRef('plus_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_ndt7zj$'), new PhiNameRef('plus_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_jlnu8a$'), new PhiNameRef('plus_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_907jet$'), new PhiNameRef('plus_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_s7ir3o$'), new PhiNameRef('plus_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_mgkctd$'), new PhiNameRef('plus_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_c03ot6$'), new PhiNameRef('plus_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_tq12cv$'), new PhiNameRef('plus_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_uxdaoa$'), new PhiNameRef('plus_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_tec1tx$'), new PhiNameRef('plus_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_omthmc$'), new PhiNameRef('plus_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_pmvpm9$'), new PhiNameRef('plus_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_taaqy$'), new PhiNameRef('plus_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_qsfoml$'), new PhiNameRef('plus_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_yax8s4$'), new PhiNameRef('plus_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_wxyzfz$'), new PhiNameRef('plus_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_o2f9me$'), new PhiNameRef('plus_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_b32j0n$'), new PhiNameRef('plus_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_lamh9t$'), new PhiNameRef('plus_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_tizwwv$'), new PhiNameRef('plus_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_q1yphb$'), new PhiNameRef('plus_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_nmtg5l$'), new PhiNameRef('plus_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_gtiwrj$'), new PhiNameRef('plus_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_5ltrxd$'), new PhiNameRef('plus_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_cr20yn$'), new PhiNameRef('plus_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_4ow3it$'), new PhiNameRef('plus_25')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_vu4gah$'), new PhiNameRef('plus')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plusElement_mjy6jw$'), new PhiNameRef('plusElement')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_se6h4x$'), new PhiNameRef('sort_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_pbinho$'), new PhiNameRef('sort_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_964n91$'), new PhiNameRef('toTypedArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_i2lc79$'), new PhiNameRef('toTypedArray_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_tmsbgo$'), new PhiNameRef('toTypedArray_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_se6h4x$'), new PhiNameRef('toTypedArray_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_rjqryz$'), new PhiNameRef('toTypedArray_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_bvy38s$'), new PhiNameRef('toTypedArray_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_l1lu5t$'), new PhiNameRef('toTypedArray_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toTypedArray_355ntz$'), new PhiNameRef('toTypedArray_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_ra7spe$'), new PhiNameRef('sort_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_hcmc5n$'), new PhiNameRef('sort_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_6749zv$'), new PhiNameRef('sort_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_vuuzha$'), new PhiNameRef('sort_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_y2xy0v$'), new PhiNameRef('sort_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_rx1g57$'), new PhiNameRef('sort_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_qgorx0$'), new PhiNameRef('sort_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sort_vuimop$'), new PhiNameRef('sort_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'contains_2ws7j4$'), new PhiNameRef('contains_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'elementAt_ba2ldo$'), new PhiNameRef('elementAt_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'elementAtOrElse_qeve62$'), new PhiNameRef('elementAtOrElse_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_lastIndex_55thoc$'), new PhiNameRef('get_lastIndex')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'elementAtOrNull_ba2ldo$'), new PhiNameRef('elementAtOrNull_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrNull_yzln2o$'), new PhiNameRef('getOrNull_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_6jwkkr$'), new PhiNameRef('firstOrNull_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_6jwkkr$'), new PhiNameRef('lastOrNull_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_dmm9ex$'), new PhiNameRef('lastOrNull_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_7wnvza$'), new PhiNameRef('first_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_2p1efm$'), new PhiNameRef('first_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'first_6jwkkr$'), new PhiNameRef('first_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_7wnvza$'), new PhiNameRef('firstOrNull_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'firstOrNull_2p1efm$'), new PhiNameRef('firstOrNull_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_2ws7j4$'), new PhiNameRef('indexOf_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOf_bv23uc$'), new PhiNameRef('indexOf_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_6jwkkr$'), new PhiNameRef('indexOfFirst_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfFirst_dmm9ex$'), new PhiNameRef('indexOfFirst_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_6jwkkr$'), new PhiNameRef('indexOfLast_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'indexOfLast_dmm9ex$'), new PhiNameRef('indexOfLast_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_7wnvza$'), new PhiNameRef('last_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_2p1efm$'), new PhiNameRef('last_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_6jwkkr$'), new PhiNameRef('last_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'last_dmm9ex$'), new PhiNameRef('last_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_2ws7j4$'), new PhiNameRef('lastIndexOf_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastIndexOf_bv23uc$'), new PhiNameRef('lastIndexOf_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_7wnvza$'), new PhiNameRef('lastOrNull_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'lastOrNull_2p1efm$'), new PhiNameRef('lastOrNull_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_7wnvza$'), new PhiNameRef('single_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_2p1efm$'), new PhiNameRef('single_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'single_6jwkkr$'), new PhiNameRef('single_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_7wnvza$'), new PhiNameRef('singleOrNull_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_2p1efm$'), new PhiNameRef('singleOrNull_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'singleOrNull_6jwkkr$'), new PhiNameRef('singleOrNull_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'drop_ba2ldo$'), new PhiNameRef('drop_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLast_yzln2o$'), new PhiNameRef('dropLast_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'take_ba2ldo$'), new PhiNameRef('take_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropLastWhile_dmm9ex$'), new PhiNameRef('dropLastWhile_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'dropWhile_6jwkkr$'), new PhiNameRef('dropWhile_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_cslyey$'), new PhiNameRef('filterTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_6jwkkr$'), new PhiNameRef('filter_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo_i2yxnm$'), new PhiNameRef('filterIndexedTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexed_p81qtj$'), new PhiNameRef('filterIndexed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterIndexedTo$f_8'), new PhiNameRef('filterIndexedTo$lambda_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEachIndexed_g8ms6t$'), new PhiNameRef('forEachIndexed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_cslyey$'), new PhiNameRef('filterNotTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_6jwkkr$'), new PhiNameRef('filterNot_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotNull_m3lr2h$'), new PhiNameRef('filterNotNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotNullTo_u9kwcl$'), new PhiNameRef('filterNotNullTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_6bjbi1$'), new PhiNameRef('slice_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'slice_b9tsm5$'), new PhiNameRef('slice_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLast_yzln2o$'), new PhiNameRef('takeLast_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile$f'), new PhiNameRef('takeLastWhile$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_7wnvza$'), new PhiNameRef('toList_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeLastWhile_dmm9ex$'), new PhiNameRef('takeLastWhile_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'takeWhile_6jwkkr$'), new PhiNameRef('takeWhile_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reverse_vvxzk3$'), new PhiNameRef('reverse_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortBy_yag3x6$'), new PhiNameRef('sortBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortByDescending_yag3x6$'), new PhiNameRef('sortByDescending_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortDescending_4wi501$'), new PhiNameRef('sortDescending_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sorted_exjks8$'), new PhiNameRef('sorted_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedWith_eknfly$'), new PhiNameRef('sortedWith_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedBy_nd8ern$'), new PhiNameRef('sortedBy_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedByDescending_nd8ern$'), new PhiNameRef('sortedByDescending_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sortedDescending_exjks8$'), new PhiNameRef('sortedDescending_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toBooleanArray_xmyvgf$'), new PhiNameRef('toBooleanArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toByteArray_kdx1v$'), new PhiNameRef('toByteArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCharArray_rr68x$'), new PhiNameRef('toCharArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toDoubleArray_tcduak$'), new PhiNameRef('toDoubleArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toFloatArray_zwy31$'), new PhiNameRef('toFloatArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toIntArray_fx3nzu$'), new PhiNameRef('toIntArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toLongArray_558emf$'), new PhiNameRef('toLongArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toShortArray_p5z1wt$'), new PhiNameRef('toShortArray_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateTo_tp6zhs$'), new PhiNameRef('associateTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associate_wbhhmp$'), new PhiNameRef('associate_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_q9k9lv$'), new PhiNameRef('associateByTo_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_dvm6j0$'), new PhiNameRef('associateBy_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateByTo_5s21dh$'), new PhiNameRef('associateByTo_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'associateBy_6kgnfi$'), new PhiNameRef('associateBy_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toCollection_5cfyqp$'), new PhiNameRef('toCollection_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toHashSet_7wnvza$'), new PhiNameRef('toHashSet_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_7wnvza$'), new PhiNameRef('toMutableList_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableList_4c7yge$'), new PhiNameRef('toMutableList_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toSet_7wnvza$'), new PhiNameRef('toSet_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_farraf$'), new PhiNameRef('flatMapTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_en2w03$'), new PhiNameRef('flatMap_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_2nn80$'), new PhiNameRef('groupByTo_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_dvm6j0$'), new PhiNameRef('groupBy_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo_spnc2q$'), new PhiNameRef('groupByTo_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupBy_6kgnfi$'), new PhiNameRef('groupBy_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_17'), new PhiNameRef('groupByTo$lambda_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupByTo$f_18'), new PhiNameRef('groupByTo$lambda_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupingBy$f_0'), new PhiNameRef('groupingBy$ObjectLiteral_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'groupingBy_dvm6j0$'), new PhiNameRef('groupingBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_h3il0w$'), new PhiNameRef('mapTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_dvm6j0$'), new PhiNameRef('map_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedTo_qixlg$'), new PhiNameRef('mapIndexedTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexed_yigmvk$'), new PhiNameRef('mapIndexed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNullTo_s7kjlj$'), new PhiNameRef('mapIndexedNotNullTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNull_aw5p9p$'), new PhiNameRef('mapIndexedNotNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNullTo$f$f_0'), new PhiNameRef('mapIndexedNotNullTo$lambda$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapIndexedNotNullTo$f_0'), new PhiNameRef('mapIndexedNotNullTo$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo_p5b1il$'), new PhiNameRef('mapNotNullTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNull_3fhhkf$'), new PhiNameRef('mapNotNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo$f$f_0'), new PhiNameRef('mapNotNullTo$lambda$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo$f_0'), new PhiNameRef('mapNotNullTo$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_i7id1t$'), new PhiNameRef('forEach_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_7wnvza$'), new PhiNameRef('withIndex_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinct_7wnvza$'), new PhiNameRef('distinct_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'distinctBy_dvm6j0$'), new PhiNameRef('distinctBy_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'intersect_q4559j$'), new PhiNameRef('intersect_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'subtract_q4559j$'), new PhiNameRef('subtract_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableSet_7wnvza$'), new PhiNameRef('toMutableSet_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'union_q4559j$'), new PhiNameRef('union_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_6jwkkr$'), new PhiNameRef('all_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_7wnvza$'), new PhiNameRef('any_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_6jwkkr$'), new PhiNameRef('any')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_7wnvza$'), new PhiNameRef('count_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_6jwkkr$'), new PhiNameRef('count_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_l1hrho$'), new PhiNameRef('fold_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldIndexed_a080b4$'), new PhiNameRef('foldIndexed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRight_flo3fi$'), new PhiNameRef('foldRight_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldRightIndexed_nj6056$'), new PhiNameRef('foldRightIndexed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_l63kqw$'), new PhiNameRef('max_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_lvsncp$'), new PhiNameRef('max_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'max_exjks8$'), new PhiNameRef('max_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxBy_nd8ern$'), new PhiNameRef('maxBy_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'maxWith_eknfly$'), new PhiNameRef('maxWith_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_l63kqw$'), new PhiNameRef('min_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_lvsncp$'), new PhiNameRef('min_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'min_exjks8$'), new PhiNameRef('min_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_nd8ern$'), new PhiNameRef('minBy_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_eknfly$'), new PhiNameRef('minWith_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_7wnvza$'), new PhiNameRef('none_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_6jwkkr$'), new PhiNameRef('none_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'onEach$f'), new PhiNameRef('onEach$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'onEach_w8vc4v$'), new PhiNameRef('onEach')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_lrrcxv$'), new PhiNameRef('reduce_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceIndexed_8txfjb$'), new PhiNameRef('reduceIndexed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRight_y5l5zf$'), new PhiNameRef('reduceRight_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceRightIndexed_1a67zb$'), new PhiNameRef('reduceRightIndexed_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumBy_1nckxa$'), new PhiNameRef('sumBy_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sumByDouble_k0tf9a$'), new PhiNameRef('sumByDouble_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'requireNoNulls_m3lr2h$'), new PhiNameRef('requireNoNulls_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'requireNoNulls_whsx6z$'), new PhiNameRef('requireNoNulls_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_2ws7j4$'), new PhiNameRef('minus')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_4gmyjx$'), new PhiNameRef('minus_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_q4559j$'), new PhiNameRef('minus_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_i0e5px$'), new PhiNameRef('minus_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'partition_6jwkkr$'), new PhiNameRef('partition_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_2ws7j4$'), new PhiNameRef('plus_26')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_qloxvw$'), new PhiNameRef('plus_27')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_4gmyjx$'), new PhiNameRef('plus_28')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_drqvgf$'), new PhiNameRef('plus_29')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_q4559j$'), new PhiNameRef('plus_30')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_mydzjv$'), new PhiNameRef('plus_31')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_i0e5px$'), new PhiNameRef('plus_32')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_hjm0xj$'), new PhiNameRef('plus_33')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_xiheex$'), new PhiNameRef('zip_51')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_curaua$'), new PhiNameRef('zip_52')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_45mdf7$'), new PhiNameRef('zip_53')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'zip_3h9v02$'), new PhiNameRef('zip_54')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinTo_gcc71v$'), new PhiNameRef('joinTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'joinToString_fmv235$'), new PhiNameRef('joinToString_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_7wnvza$'), new PhiNameRef('asSequence_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_922ytb$'), new PhiNameRef('average_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_oz9asn$'), new PhiNameRef('average_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_plj8ka$'), new PhiNameRef('average_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_dmxgdv$'), new PhiNameRef('average_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_lvsncp$'), new PhiNameRef('average_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'average_l63kqw$'), new PhiNameRef('average_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_922ytb$'), new PhiNameRef('sum_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_oz9asn$'), new PhiNameRef('sum_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_plj8ka$'), new PhiNameRef('sum_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_dmxgdv$'), new PhiNameRef('sum_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_lvsncp$'), new PhiNameRef('sum_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'sum_l63kqw$'), new PhiNameRef('sum_16')));
    phiVars(array(array('package$comparisons', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'comparisons'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'comparisons'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'maxOf_sdesaw$'), new PhiNameRef('maxOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'max_bug313$'), new PhiNameRef('max_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'maxOf_73gzaq$'), new PhiNameRef('maxOf_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'maxOf_7cibz0$'), new PhiNameRef('maxOf_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'maxOf_z1gega$'), new PhiNameRef('maxOf_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'minOf_sdesaw$'), new PhiNameRef('minOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'min_bug313$'), new PhiNameRef('min_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'minOf_73gzaq$'), new PhiNameRef('minOf_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'minOf_7cibz0$'), new PhiNameRef('minOf_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'minOf_z1gega$'), new PhiNameRef('minOf_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toList_abgq59$'), new PhiNameRef('toList_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMapTo_qdz8ho$'), new PhiNameRef('flatMapTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatMap_2r9935$'), new PhiNameRef('flatMap_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapTo_qxe4nl$'), new PhiNameRef('mapTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'map_8169ik$'), new PhiNameRef('map_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo_ir6y9a$'), new PhiNameRef('mapNotNullTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNull_9b72hb$'), new PhiNameRef('mapNotNull_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo$f$f_1'), new PhiNameRef('mapNotNullTo$lambda$lambda_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapNotNullTo$f_1'), new PhiNameRef('mapNotNullTo$lambda_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_62casv$'), new PhiNameRef('forEach_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'all_9peqz9$'), new PhiNameRef('all_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_abgq59$'), new PhiNameRef('any_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'any_9peqz9$'), new PhiNameRef('any_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'count_9peqz9$'), new PhiNameRef('count_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minBy_44nibo$'), new PhiNameRef('minBy_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minWith_e3q53g$'), new PhiNameRef('minWith_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_abgq59$'), new PhiNameRef('none_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'none_9peqz9$'), new PhiNameRef('none_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'onEach$f_0'), new PhiNameRef('onEach$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'onEach_bdwhnn$'), new PhiNameRef('onEach_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asSequence_abgq59$'), new PhiNameRef('asSequence_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_8t4apg$'), new PhiNameRef('contains_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_ptt68h$'), new PhiNameRef('contains_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_a0sexr$'), new PhiNameRef('contains_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_st7t5o$'), new PhiNameRef('contains_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_w4n8vz$'), new PhiNameRef('contains_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_bupbvv$'), new PhiNameRef('contains_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_vs2922$'), new PhiNameRef('contains_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_fnkcb2$'), new PhiNameRef('contains_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_sc6rfc$'), new PhiNameRef('contains_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_lmtni0$'), new PhiNameRef('contains_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_b3prtk$'), new PhiNameRef('contains_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_jdujeb$'), new PhiNameRef('contains_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_ng3igv$'), new PhiNameRef('contains_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_qlzezp$'), new PhiNameRef('contains_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_u6rtyw$'), new PhiNameRef('contains_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_wwtm9y$'), new PhiNameRef('contains_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_sy6r8u$'), new PhiNameRef('contains_25')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_wegtiw$'), new PhiNameRef('contains_26')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_x0ackb$'), new PhiNameRef('contains_27')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_84mv1k$'), new PhiNameRef('contains_28')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_8sy4e8$'), new PhiNameRef('contains_29')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_pyp6pl$'), new PhiNameRef('contains_30')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_a0yl8z$'), new PhiNameRef('contains_31')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_stdzgw$'), new PhiNameRef('contains_32')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_w4tf77$'), new PhiNameRef('contains_33')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_basjzs$'), new PhiNameRef('contains_34')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_jkxbkj$'), new PhiNameRef('contains_35')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_nn6an3$'), new PhiNameRef('contains_36')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_tzp1so$'), new PhiNameRef('contains_37')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'contains_1thfvp$'), new PhiNameRef('contains_38')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_ehttk$'), new PhiNameRef('downTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_2ou2j3$'), new PhiNameRef('downTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_buxqzf$'), new PhiNameRef('downTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_7mbe97$'), new PhiNameRef('downTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_ui3wc7$'), new PhiNameRef('downTo_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_if0zpk$'), new PhiNameRef('downTo_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_798l30$'), new PhiNameRef('downTo_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_di2vk2$'), new PhiNameRef('downTo_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_ebnic$'), new PhiNameRef('downTo_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_2p08ub$'), new PhiNameRef('downTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_bv3xan$'), new PhiNameRef('downTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_7m57xz$'), new PhiNameRef('downTo_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_c8b4g4$'), new PhiNameRef('downTo_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_cltogl$'), new PhiNameRef('downTo_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_cqjimh$'), new PhiNameRef('downTo_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'downTo_mvfjzl$'), new PhiNameRef('downTo_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'reversed_zf1xzc$'), new PhiNameRef('reversed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'reversed_3080cb$'), new PhiNameRef('reversed_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'reversed_uthk7p$'), new PhiNameRef('reversed_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'step_xsgg7u$'), new PhiNameRef('step')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'step_9rx6pe$'), new PhiNameRef('step_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'step_kf5xo7$'), new PhiNameRef('step_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_ehttk$'), new PhiNameRef('until')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_2ou2j3$'), new PhiNameRef('until_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_buxqzf$'), new PhiNameRef('until_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_7mbe97$'), new PhiNameRef('until_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_ui3wc7$'), new PhiNameRef('until_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_dqglrj$'), new PhiNameRef('until_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_if0zpk$'), new PhiNameRef('until_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_798l30$'), new PhiNameRef('until_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_di2vk2$'), new PhiNameRef('until_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_ebnic$'), new PhiNameRef('until_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_2p08ub$'), new PhiNameRef('until_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_bv3xan$'), new PhiNameRef('until_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_7m57xz$'), new PhiNameRef('until_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_c8b4g4$'), new PhiNameRef('until_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_cltogl$'), new PhiNameRef('until_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_cqjimh$'), new PhiNameRef('until_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'until_mvfjzl$'), new PhiNameRef('until_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtLeast_8xshf9$'), new PhiNameRef('coerceAtLeast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtLeast_buxqzf$'), new PhiNameRef('coerceAtLeast_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtLeast_mvfjzl$'), new PhiNameRef('coerceAtLeast_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtLeast_2p08ub$'), new PhiNameRef('coerceAtLeast_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtLeast_yni7l$'), new PhiNameRef('coerceAtLeast_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtLeast_38ydlf$'), new PhiNameRef('coerceAtLeast_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtMost_8xshf9$'), new PhiNameRef('coerceAtMost')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtMost_buxqzf$'), new PhiNameRef('coerceAtMost_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtMost_mvfjzl$'), new PhiNameRef('coerceAtMost_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtMost_dqglrj$'), new PhiNameRef('coerceAtMost_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtMost_2p08ub$'), new PhiNameRef('coerceAtMost_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtMost_yni7l$'), new PhiNameRef('coerceAtMost_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceAtMost_38ydlf$'), new PhiNameRef('coerceAtMost_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_99j3dd$'), new PhiNameRef('coerceIn')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_glfpss$'), new PhiNameRef('coerceIn_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_jn2ilo$'), new PhiNameRef('coerceIn_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_e4yvb3$'), new PhiNameRef('coerceIn_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_ekzx8g$'), new PhiNameRef('coerceIn_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_wj6e7o$'), new PhiNameRef('coerceIn_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_nig4hr$'), new PhiNameRef('coerceIn_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_52zmhz$'), new PhiNameRef('coerceIn_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_jqk3rj$'), new PhiNameRef('coerceIn_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_nayhkp$'), new PhiNameRef('coerceIn_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'coerceIn_k7ygy9$'), new PhiNameRef('coerceIn_9')));
    phiVars(array(array('package$sequences', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'sequences'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'sequences'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'contains_9h40j2$'), new PhiNameRef('contains_39')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'elementAt_wuwhe2$'), new PhiNameRef('elementAt_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'elementAtOrElse_i0ukx8$'), new PhiNameRef('elementAtOrElse_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'elementAtOrNull_wuwhe2$'), new PhiNameRef('elementAtOrNull_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'firstOrNull_euau3h$'), new PhiNameRef('firstOrNull_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'lastOrNull_euau3h$'), new PhiNameRef('lastOrNull_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'first_veqyi0$'), new PhiNameRef('first_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'first_euau3h$'), new PhiNameRef('first_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'firstOrNull_veqyi0$'), new PhiNameRef('firstOrNull_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'indexOf_9h40j2$'), new PhiNameRef('indexOf_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'indexOfFirst_euau3h$'), new PhiNameRef('indexOfFirst_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'indexOfLast_euau3h$'), new PhiNameRef('indexOfLast_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'last_veqyi0$'), new PhiNameRef('last_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'last_euau3h$'), new PhiNameRef('last_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'lastIndexOf_9h40j2$'), new PhiNameRef('lastIndexOf_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'lastOrNull_veqyi0$'), new PhiNameRef('lastOrNull_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'single_veqyi0$'), new PhiNameRef('single_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'single_euau3h$'), new PhiNameRef('single_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'singleOrNull_veqyi0$'), new PhiNameRef('singleOrNull_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'singleOrNull_euau3h$'), new PhiNameRef('singleOrNull_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'drop_wuwhe2$'), new PhiNameRef('drop_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'dropWhile_euau3h$'), new PhiNameRef('dropWhile_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filter_euau3h$'), new PhiNameRef('filter_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterIndexed_m6ft53$'), new PhiNameRef('filterIndexed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterIndexedTo$f'), new PhiNameRef('filterIndexedTo$lambda_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'forEachIndexed_iyis71$'), new PhiNameRef('forEachIndexed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterIndexedTo_t68vbo$'), new PhiNameRef('filterIndexedTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterIsInstance$f'), new PhiNameRef('filterIsInstance$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'Sequence'), new PhiNameRef('Sequence_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterNot_euau3h$'), new PhiNameRef('filterNot_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterNotNull_q2m9h7$'), new PhiNameRef('filterNotNull_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterNotNullTo_jmgotp$'), new PhiNameRef('filterNotNullTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterNotTo_zemxx4$'), new PhiNameRef('filterNotTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'filterTo_zemxx4$'), new PhiNameRef('filterTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'take_wuwhe2$'), new PhiNameRef('take_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'takeWhile_euau3h$'), new PhiNameRef('takeWhile_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sorted_gtzq52$'), new PhiNameRef('sorted_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sortedWith_vjgqpk$'), new PhiNameRef('sortedWith_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sortedBy_aht3pn$'), new PhiNameRef('sortedBy_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sortedByDescending_aht3pn$'), new PhiNameRef('sortedByDescending_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sortedDescending_gtzq52$'), new PhiNameRef('sortedDescending_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'associateTo_xiiici$'), new PhiNameRef('associateTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'associate_ohgugh$'), new PhiNameRef('associate_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'associateByTo_pdrkj5$'), new PhiNameRef('associateByTo_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'associateBy_z5avom$'), new PhiNameRef('associateBy_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'associateByTo_vqogar$'), new PhiNameRef('associateByTo_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'associateBy_rpj48c$'), new PhiNameRef('associateBy_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'toCollection_gtszxp$'), new PhiNameRef('toCollection_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'toHashSet_veqyi0$'), new PhiNameRef('toHashSet_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'toList_veqyi0$'), new PhiNameRef('toList_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'toMutableList_veqyi0$'), new PhiNameRef('toMutableList_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'toSet_veqyi0$'), new PhiNameRef('toSet_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'flatMap_49vfel$'), new PhiNameRef('flatMap_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'addAll_tj7pfx$'), new PhiNameRef('addAll_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'flatMapTo_skhdnd$'), new PhiNameRef('flatMapTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupByTo_m5ds0u$'), new PhiNameRef('groupByTo_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupBy_z5avom$'), new PhiNameRef('groupBy_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupByTo_r8laog$'), new PhiNameRef('groupByTo_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupBy_rpj48c$'), new PhiNameRef('groupBy_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupByTo$f'), new PhiNameRef('groupByTo$lambda_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupByTo$f_0'), new PhiNameRef('groupByTo$lambda_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupingBy$f'), new PhiNameRef('groupingBy$ObjectLiteral_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'groupingBy_z5avom$'), new PhiNameRef('groupingBy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'map_z5avom$'), new PhiNameRef('map_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapIndexed_b7yuyq$'), new PhiNameRef('mapIndexed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapIndexedNotNull_pqenxb$'), new PhiNameRef('mapIndexedNotNull_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapIndexedNotNullTo$f$f'), new PhiNameRef('mapIndexedNotNullTo$lambda$lambda_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapIndexedNotNullTo$f'), new PhiNameRef('mapIndexedNotNullTo$lambda_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapIndexedNotNullTo_eyjglh$'), new PhiNameRef('mapIndexedNotNullTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapIndexedTo_49r4ke$'), new PhiNameRef('mapIndexedTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapNotNull_qpz9h9$'), new PhiNameRef('mapNotNull_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapNotNullTo$f$f'), new PhiNameRef('mapNotNullTo$lambda$lambda_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapNotNullTo$f'), new PhiNameRef('mapNotNullTo$lambda_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'forEach_o41pun$'), new PhiNameRef('forEach_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapNotNullTo_u5l3of$'), new PhiNameRef('mapNotNullTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'mapTo_kntv26$'), new PhiNameRef('mapTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'withIndex_veqyi0$'), new PhiNameRef('withIndex_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'distinct_veqyi0$'), new PhiNameRef('distinct_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'distinctBy_z5avom$'), new PhiNameRef('distinctBy_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'toMutableSet_veqyi0$'), new PhiNameRef('toMutableSet_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'all_euau3h$'), new PhiNameRef('all_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'any_veqyi0$'), new PhiNameRef('any_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'any_euau3h$'), new PhiNameRef('any_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'count_veqyi0$'), new PhiNameRef('count_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'count_euau3h$'), new PhiNameRef('count_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'fold_azbry2$'), new PhiNameRef('fold_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'foldIndexed_wxmp26$'), new PhiNameRef('foldIndexed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'max_1bslqu$'), new PhiNameRef('max_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'max_8rwv2f$'), new PhiNameRef('max_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'max_gtzq52$'), new PhiNameRef('max_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'maxBy_aht3pn$'), new PhiNameRef('maxBy_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'maxWith_vjgqpk$'), new PhiNameRef('maxWith_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'min_1bslqu$'), new PhiNameRef('min_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'min_8rwv2f$'), new PhiNameRef('min_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'min_gtzq52$'), new PhiNameRef('min_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'minBy_aht3pn$'), new PhiNameRef('minBy_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'minWith_vjgqpk$'), new PhiNameRef('minWith_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'none_veqyi0$'), new PhiNameRef('none_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'none_euau3h$'), new PhiNameRef('none_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'onEach_o41pun$'), new PhiNameRef('onEach_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'reduce_linb1r$'), new PhiNameRef('reduce_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'reduceIndexed_8denzp$'), new PhiNameRef('reduceIndexed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sumBy_gvemys$'), new PhiNameRef('sumBy_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sumByDouble_b4hqx8$'), new PhiNameRef('sumByDouble_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'requireNoNulls_q2m9h7$'), new PhiNameRef('requireNoNulls_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'minus_9h40j2$'), new PhiNameRef('minus_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'minus_5jckhn$'), new PhiNameRef('minus_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'minus_639hpx$'), new PhiNameRef('minus_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'minus_v0iwhp$'), new PhiNameRef('minus_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'partition_euau3h$'), new PhiNameRef('partition_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'plus_9h40j2$'), new PhiNameRef('plus_34')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'plus_5jckhn$'), new PhiNameRef('plus_35')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'plus_639hpx$'), new PhiNameRef('plus_36')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'plus_v0iwhp$'), new PhiNameRef('plus_37')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'zip_r7q3s9$'), new PhiNameRef('zip_55')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'zip_etk53i$'), new PhiNameRef('zip_56')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'joinTo_q99qgx$'), new PhiNameRef('joinTo_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'joinToString_853xkz$'), new PhiNameRef('joinToString_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'asIterable_veqyi0$'), new PhiNameRef('asIterable_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'average_in95sd$'), new PhiNameRef('average_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'average_wxyyw7$'), new PhiNameRef('average_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'average_j17fkc$'), new PhiNameRef('average_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'average_n83ncx$'), new PhiNameRef('average_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'average_8rwv2f$'), new PhiNameRef('average_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'average_1bslqu$'), new PhiNameRef('average_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sum_in95sd$'), new PhiNameRef('sum_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sum_wxyyw7$'), new PhiNameRef('sum_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sum_j17fkc$'), new PhiNameRef('sum_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sum_n83ncx$'), new PhiNameRef('sum_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sum_8rwv2f$'), new PhiNameRef('sum_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sum_1bslqu$'), new PhiNameRef('sum_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_xfiyik$'), new PhiNameRef('minus_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_ws1dkn$'), new PhiNameRef('minus_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_khz7k3$'), new PhiNameRef('minus_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_dk0kmn$'), new PhiNameRef('minus_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_xfiyik$'), new PhiNameRef('plus_38')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_ws1dkn$'), new PhiNameRef('plus_39')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_khz7k3$'), new PhiNameRef('plus_40')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_dk0kmn$'), new PhiNameRef('plus_41')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'get_lastIndex_gw00vp$'), new PhiNameRef('get_lastIndex_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'getOrNull_94bcnn$'), new PhiNameRef('getOrNull_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'firstOrNull_2pivbd$'), new PhiNameRef('firstOrNull_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lastOrNull_2pivbd$'), new PhiNameRef('lastOrNull_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'first_gw00vp$'), new PhiNameRef('first_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'iterator_gw00vp$'), new PhiNameRef('iterator_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'first_2pivbd$'), new PhiNameRef('first_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'firstOrNull_gw00vp$'), new PhiNameRef('firstOrNull_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'get_indices_gw00vp$'), new PhiNameRef('get_indices_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'indexOfFirst_2pivbd$'), new PhiNameRef('indexOfFirst_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'indexOfLast_2pivbd$'), new PhiNameRef('indexOfLast_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'last_gw00vp$'), new PhiNameRef('last_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'last_2pivbd$'), new PhiNameRef('last_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lastOrNull_gw00vp$'), new PhiNameRef('lastOrNull_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'single_gw00vp$'), new PhiNameRef('single_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'single_2pivbd$'), new PhiNameRef('single_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'singleOrNull_gw00vp$'), new PhiNameRef('singleOrNull_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'singleOrNull_2pivbd$'), new PhiNameRef('singleOrNull_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'drop_94bcnn$'), new PhiNameRef('drop_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'drop_6ic1pp$'), new PhiNameRef('drop_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'dropLast_94bcnn$'), new PhiNameRef('dropLast_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'dropLast_6ic1pp$'), new PhiNameRef('dropLast_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'dropLastWhile_2pivbd$'), new PhiNameRef('dropLastWhile_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'dropLastWhile_ouje1d$'), new PhiNameRef('dropLastWhile_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'dropWhile_2pivbd$'), new PhiNameRef('dropWhile_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'dropWhile_ouje1d$'), new PhiNameRef('dropWhile_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterTo_2vcf41$'), new PhiNameRef('filterTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filter_2pivbd$'), new PhiNameRef('filter_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filter_ouje1d$'), new PhiNameRef('filter_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterIndexedTo_2omorh$'), new PhiNameRef('filterIndexedTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterIndexed_3xan9v$'), new PhiNameRef('filterIndexed_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterIndexed_4cgdv1$'), new PhiNameRef('filterIndexed_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterIndexedTo$f'), new PhiNameRef('filterIndexedTo$lambda_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'forEachIndexed_q254al$'), new PhiNameRef('forEachIndexed_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterNotTo_2vcf41$'), new PhiNameRef('filterNotTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterNot_2pivbd$'), new PhiNameRef('filterNot_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'filterNot_ouje1d$'), new PhiNameRef('filterNot_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'slice_i511yc$'), new PhiNameRef('slice_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'slice_fc3b62$'), new PhiNameRef('slice_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'slice_ymrxhc$'), new PhiNameRef('slice_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'take_94bcnn$'), new PhiNameRef('take_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'take_6ic1pp$'), new PhiNameRef('take_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'takeLast_94bcnn$'), new PhiNameRef('takeLast_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'takeLast_6ic1pp$'), new PhiNameRef('takeLast_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'takeLastWhile_2pivbd$'), new PhiNameRef('takeLastWhile_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'takeLastWhile_ouje1d$'), new PhiNameRef('takeLastWhile_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'takeWhile_2pivbd$'), new PhiNameRef('takeWhile_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'takeWhile_ouje1d$'), new PhiNameRef('takeWhile_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'reversed_gw00vp$'), new PhiNameRef('reversed_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'associateTo_1pzh9q$'), new PhiNameRef('associateTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'associate_b3xl1f$'), new PhiNameRef('associate_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'associateByTo_lm6k0r$'), new PhiNameRef('associateByTo_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'associateBy_16h5q4$'), new PhiNameRef('associateBy_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'associateByTo_woixqq$'), new PhiNameRef('associateByTo_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'associateBy_m7aj6v$'), new PhiNameRef('associateBy_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toCollection_7uruwd$'), new PhiNameRef('toCollection_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toHashSet_gw00vp$'), new PhiNameRef('toHashSet_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toList_gw00vp$'), new PhiNameRef('toList_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toMutableList_gw00vp$'), new PhiNameRef('toMutableList_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toSet_gw00vp$'), new PhiNameRef('toSet_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'flatMapTo_kg2lzy$'), new PhiNameRef('flatMapTo_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'flatMap_83nucd$'), new PhiNameRef('flatMap_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupByTo_mntg7c$'), new PhiNameRef('groupByTo_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupBy_16h5q4$'), new PhiNameRef('groupBy_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupByTo_dgnza9$'), new PhiNameRef('groupByTo_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupBy_m7aj6v$'), new PhiNameRef('groupBy_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupByTo$f'), new PhiNameRef('groupByTo$lambda_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupByTo$f_0'), new PhiNameRef('groupByTo$lambda_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupingBy$f'), new PhiNameRef('groupingBy$ObjectLiteral_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'groupingBy_16h5q4$'), new PhiNameRef('groupingBy_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapTo_wrnknd$'), new PhiNameRef('mapTo_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'map_16h5q4$'), new PhiNameRef('map_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapIndexedTo_4f8103$'), new PhiNameRef('mapIndexedTo_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapIndexed_bnyqco$'), new PhiNameRef('mapIndexed_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapIndexedNotNullTo_cynlyo$'), new PhiNameRef('mapIndexedNotNullTo_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapIndexedNotNull_iqd6dn$'), new PhiNameRef('mapIndexedNotNull_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapIndexedNotNullTo$f$f'), new PhiNameRef('mapIndexedNotNullTo$lambda$lambda_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapIndexedNotNullTo$f'), new PhiNameRef('mapIndexedNotNullTo$lambda_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapNotNullTo_jcwsr8$'), new PhiNameRef('mapNotNullTo_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapNotNull_10i1d3$'), new PhiNameRef('mapNotNull_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapNotNullTo$f$f'), new PhiNameRef('mapNotNullTo$lambda$lambda_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'mapNotNullTo$f'), new PhiNameRef('mapNotNullTo$lambda_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'forEach_57f55l$'), new PhiNameRef('forEach_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'withIndex_gw00vp$'), new PhiNameRef('withIndex_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'all_2pivbd$'), new PhiNameRef('all_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'any_gw00vp$'), new PhiNameRef('any_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'any_2pivbd$'), new PhiNameRef('any_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'count_2pivbd$'), new PhiNameRef('count_25')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'fold_riyz04$'), new PhiNameRef('fold_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'foldIndexed_l9i73k$'), new PhiNameRef('foldIndexed_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'foldRight_xy5j5e$'), new PhiNameRef('foldRight_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'foldRightIndexed_bpin9y$'), new PhiNameRef('foldRightIndexed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'max_gw00vp$'), new PhiNameRef('max_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'maxBy_lwkw4q$'), new PhiNameRef('maxBy_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'maxWith_mfvi1w$'), new PhiNameRef('maxWith_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'min_gw00vp$'), new PhiNameRef('min_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'minBy_lwkw4q$'), new PhiNameRef('minBy_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'minWith_mfvi1w$'), new PhiNameRef('minWith_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'none_gw00vp$'), new PhiNameRef('none_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'none_2pivbd$'), new PhiNameRef('none_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'onEach$f'), new PhiNameRef('onEach$lambda_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'onEach_jdhw1f$'), new PhiNameRef('onEach_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'reduce_bc19pa$'), new PhiNameRef('reduce_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'reduceIndexed_8uyn22$'), new PhiNameRef('reduceIndexed_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'reduceRight_bc19pa$'), new PhiNameRef('reduceRight_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'reduceRightIndexed_8uyn22$'), new PhiNameRef('reduceRightIndexed_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'sumBy_kg4n8i$'), new PhiNameRef('sumBy_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'sumByDouble_4bpanu$'), new PhiNameRef('sumByDouble_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'partition_2pivbd$'), new PhiNameRef('partition_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'partition_ouje1d$'), new PhiNameRef('partition_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'zip_b6aurr$'), new PhiNameRef('zip_57')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'zip_tac5w1$'), new PhiNameRef('zip_58')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'asIterable_gw00vp$'), new PhiNameRef('asIterable_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'asSequence_gw00vp$'), new PhiNameRef('asSequence_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'eachCount_kji7v9$'), new PhiNameRef('eachCount')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'json_pyyo18$'), new PhiNameRef('json')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'add_g26eq9$'), new PhiNameRef('add')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'lazy_klfg04$'), new PhiNameRef('lazy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'lazy_kls4a0$'), new PhiNameRef('lazy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'lazy_c7lj6g$'), new PhiNameRef('lazy_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toByte_pdl1vz$'), new PhiNameRef('toByte')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toByte_6ic1pp$'), new PhiNameRef('toByte_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toShort_pdl1vz$'), new PhiNameRef('toShort')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toShort_6ic1pp$'), new PhiNameRef('toShort_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toInt_pdl1vz$'), new PhiNameRef('toInt')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toInt_6ic1pp$'), new PhiNameRef('toInt_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toLong_pdl1vz$'), new PhiNameRef('toLong')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toLong_6ic1pp$'), new PhiNameRef('toLong_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toDouble_pdl1vz$'), new PhiNameRef('toDouble')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toFloat_pdl1vz$'), new PhiNameRef('toFloat')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toDoubleOrNull_pdl1vz$'), new PhiNameRef('toDoubleOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toFloatOrNull_pdl1vz$'), new PhiNameRef('toFloatOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'checkRadix_za3lpa$'), new PhiNameRef('checkRadix')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'isNaN_yrwdxr$'), new PhiNameRef('isNaN_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'isNaN_81szk$'), new PhiNameRef('isNaN_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'isInfinite_yrwdxr$'), new PhiNameRef('isInfinite')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'isInfinite_81szk$'), new PhiNameRef('isInfinite_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'isFinite_yrwdxr$'), new PhiNameRef('isFinite')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'isFinite_81szk$'), new PhiNameRef('isFinite_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'rangeTo_38ydlf$'), new PhiNameRef('rangeTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'rangeTo_yni7l$'), new PhiNameRef('rangeTo_0')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('RegexOption'), new PhiStringLiteral('IGNORE_CASE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('RegexOption$IGNORE_CASE_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('RegexOption'), new PhiStringLiteral('MULTILINE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('RegexOption$MULTILINE_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'RegexOption'), new PhiNameRef('RegexOption')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'MatchGroup'), new PhiNameRef('MatchGroup')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'StringBuilder_init_za3lpa$'), new PhiNameRef('StringBuilder_init')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('Regex'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('Regex$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'Regex'), new PhiNameRef('Regex')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'Regex_sb3q2$'), new PhiNameRef('Regex_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'Regex_61zpoe$'), new PhiNameRef('Regex_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'reset_xjqeni$'), new PhiNameRef('reset')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'get_kmxd4d$'), new PhiNameRef('get')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'asArray_tgewol$'), new PhiNameRef('asArray')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'startsWith_7epoxm$'), new PhiNameRef('startsWith_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'startsWith_3azpy2$'), new PhiNameRef('startsWith_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'endsWith_7epoxm$'), new PhiNameRef('endsWith_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'matches_rjktp$'), new PhiNameRef('matches')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'isBlank_gw00vp$'), new PhiNameRef('isBlank')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'equals_igcy3c$'), new PhiNameRef('equals')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'regionMatches_h3ii2q$'), new PhiNameRef('regionMatches')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'capitalize_pdl1vz$'), new PhiNameRef('capitalize')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'decapitalize_pdl1vz$'), new PhiNameRef('decapitalize')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'repeat_94bcnn$'), new PhiNameRef('repeat_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replace_680rmw$'), new PhiNameRef('replace')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replace_r2fvfm$'), new PhiNameRef('replace_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceFirst_680rmw$'), new PhiNameRef('replaceFirst')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceFirst_r2fvfm$'), new PhiNameRef('replaceFirst_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'Appendable'), new PhiNameRef('Appendable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'StringBuilder_init_6bul2c$'), new PhiNameRef('StringBuilder_init_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'StringBuilder'), new PhiNameRef('StringBuilder')));
    phiVars(array(array('package$jquery', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('_'), 'jquery'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'jquery'), new PhiObjectLiteral(array()))))));
    phiVars(array(array('package$ui', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$jquery'), 'ui'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$jquery'), 'ui'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'buttonset_vwohdt$'), new PhiNameRef('buttonset')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'dialog_vwohdt$'), new PhiNameRef('dialog')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'dialog_pm4xy9$'), new PhiNameRef('dialog_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'dialog_zc05ld$'), new PhiNameRef('dialog_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'dialog_v89ba5$'), new PhiNameRef('dialog_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'dialog_pfp31$'), new PhiNameRef('dialog_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'button_vwohdt$'), new PhiNameRef('button')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'accordion_vwohdt$'), new PhiNameRef('accordion')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'draggable_pm4xy9$'), new PhiNameRef('draggable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ui'), 'selectable_vwohdt$'), new PhiNameRef('selectable')));
    phiVars(array(array('package$dom', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'dom'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'dom'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'createElement_7cgwi1$'), new PhiNameRef('createElement')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'appendElement_ldvnw0$'), new PhiNameRef('appendElement_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'hasClass_46n0ku$'), new PhiNameRef('hasClass')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'addClass_hhb33f$'), new PhiNameRef('addClass')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'removeClass_hhb33f$'), new PhiNameRef('removeClass')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'get_isText_asww5s$'), new PhiNameRef('get_isText')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'get_isElement_asww5s$'), new PhiNameRef('get_isElement')));
    phiVars(array(array('package$org', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('_'), 'org'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'org'), new PhiObjectLiteral(array()))))));
    phiVars(array(array('package$w3c', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$org'), 'w3c'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$org'), 'w3c'), new PhiObjectLiteral(array()))))));
    phiVars(array(array('package$dom_0', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$w3c'), 'dom'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$w3c'), 'dom'), new PhiObjectLiteral(array()))))));
    phiVars(array(array('package$events', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$dom_0'), 'events'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'events'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'EventListener_gbr1zf$'), new PhiNameRef('EventListener')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'asList_kt9thq$'), new PhiNameRef('asList_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'clear_asww5s$'), new PhiNameRef('clear')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom'), 'appendText_46n0ku$'), new PhiNameRef('appendText')));
    phiVars(array(array('package$khronos', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$org'), 'khronos'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$org'), 'khronos'), new PhiObjectLiteral(array()))))));
    phiVars(array(array('package$webgl', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$khronos'), 'webgl'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$khronos'), 'webgl'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'WebGLContextAttributes_2tn698$'), new PhiNameRef('WebGLContextAttributes')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'WebGLContextEventInit_cndsqx$'), new PhiNameRef('WebGLContextEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_xri1zq$'), new PhiNameRef('get_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_wq71gh$'), new PhiNameRef('set')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_9zp3y9$'), new PhiNameRef('get_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_amemmi$'), new PhiNameRef('set_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_2joiyx$'), new PhiNameRef('get_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_ttcilq$'), new PhiNameRef('set_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_cwlqq1$'), new PhiNameRef('get_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_3szanw$'), new PhiNameRef('set_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_vhpjqk$'), new PhiNameRef('get_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_vhgf5b$'), new PhiNameRef('set_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_6ngfjl$'), new PhiNameRef('get_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_yyuw59$'), new PhiNameRef('set_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_jzcbyy$'), new PhiNameRef('get_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_7aci94$'), new PhiNameRef('set_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_vvlk2q$'), new PhiNameRef('get_7')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_rpd3xf$'), new PhiNameRef('set_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'get_yg2kxp$'), new PhiNameRef('get_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$webgl'), 'set_ogqgs1$'), new PhiNameRef('set_7')));
    phiVars(array(array('package$css', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$dom_0'), 'css'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'css'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$css'), 'get_hzg8kz$'), new PhiNameRef('get_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$css'), 'get_vcm0yf$'), new PhiNameRef('get_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$css'), 'get_yovegz$'), new PhiNameRef('get_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$css'), 'get_nb2c3o$'), new PhiNameRef('get_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'UIEventInit_b3va2d$'), new PhiNameRef('UIEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'FocusEventInit_4fuajv$'), new PhiNameRef('FocusEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'MouseEventInit_w16xh5$'), new PhiNameRef('MouseEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'EventModifierInit_d8w15x$'), new PhiNameRef('EventModifierInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'WheelEventInit_jungk3$'), new PhiNameRef('WheelEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'InputEventInit_zb3n3s$'), new PhiNameRef('InputEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'KeyboardEventInit_f1dyzo$'), new PhiNameRef('KeyboardEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$events'), 'CompositionEventInit_d8ew9s$'), new PhiNameRef('CompositionEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_faw09z$'), new PhiNameRef('get_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_ewayf0$'), new PhiNameRef('get_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'set_hw3ic1$'), new PhiNameRef('set_8')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_82muyz$'), new PhiNameRef('get_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'set_itmgw7$'), new PhiNameRef('set_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_x9t80x$'), new PhiNameRef('get_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_s80h6u$'), new PhiNameRef('get_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_60td5e$'), new PhiNameRef('get_18')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_5fk35t$'), new PhiNameRef('get_19')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'TrackEventInit_mfyf40$'), new PhiNameRef('TrackEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_o5xz3$'), new PhiNameRef('get_20')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_ws6i9t$'), new PhiNameRef('get_21')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_kaa3nr$'), new PhiNameRef('get_22')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'set_9jj6cz$'), new PhiNameRef('set_10')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'RelatedEventInit_j4rtn8$'), new PhiNameRef('RelatedEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'AssignedNodesOptions_1v8dbw$'), new PhiNameRef('AssignedNodesOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'CanvasRenderingContext2DSettings_1v8dbw$'), new PhiNameRef('CanvasRenderingContext2DSettings')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_NONZERO_mhbikd$'), new PhiNameRef('get_NONZERO')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'HitRegionOptions_6a0gjt$'), new PhiNameRef('HitRegionOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ImageBitmapRenderingContextSettings_1v8dbw$'), new PhiNameRef('ImageBitmapRenderingContextSettings')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ElementDefinitionOptions_pdl1vj$'), new PhiNameRef('ElementDefinitionOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_c2gw6m$'), new PhiNameRef('get_23')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'DragEventInit_rb6t3c$'), new PhiNameRef('DragEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'PopStateEventInit_m0in9k$'), new PhiNameRef('PopStateEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'HashChangeEventInit_pex3e4$'), new PhiNameRef('HashChangeEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'PageTransitionEventInit_bx6eq4$'), new PhiNameRef('PageTransitionEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ErrorEventInit_k9ji8a$'), new PhiNameRef('ErrorEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'PromiseRejectionEventInit_jhmgqd$'), new PhiNameRef('PromiseRejectionEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_l671a0$'), new PhiNameRef('get_24')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_ldwsk8$'), new PhiNameRef('get_25')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_iatcyr$'), new PhiNameRef('get_26')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_usmy71$'), new PhiNameRef('get_27')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_t3yadb$'), new PhiNameRef('get_28')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_bempxb$'), new PhiNameRef('get_29')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_NONE_xgljrz$'), new PhiNameRef('get_NONE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_DEFAULT_b5608t$'), new PhiNameRef('get_DEFAULT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_DEFAULT_xqeuit$'), new PhiNameRef('get_DEFAULT_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_LOW_32fsn1$'), new PhiNameRef('get_LOW')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ImageBitmapOptions_qp88pe$'), new PhiNameRef('ImageBitmapOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'MessageEventInit_146zbu$'), new PhiNameRef('MessageEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'EventSourceInit_1v8dbw$'), new PhiNameRef('EventSourceInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'CloseEventInit_wdtuj7$'), new PhiNameRef('CloseEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_CLASSIC_xc77to$'), new PhiNameRef('get_CLASSIC')));
    phiVars(array(array('package$fetch', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$w3c'), 'fetch'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$w3c'), 'fetch'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_OMIT_yuzaxt$'), new PhiNameRef('get_OMIT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'WorkerOptions_sllxcl$'), new PhiNameRef('WorkerOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_bsm031$'), new PhiNameRef('get_30')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'set_9wlwlb$'), new PhiNameRef('set_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'StorageEventInit_asvzxz$'), new PhiNameRef('StorageEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'EventInit_uic7jo$'), new PhiNameRef('EventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'CustomEventInit_m0in9k$'), new PhiNameRef('CustomEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'EventListenerOptions_1v8dbw$'), new PhiNameRef('EventListenerOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'AddEventListenerOptions_uic7jo$'), new PhiNameRef('AddEventListenerOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_axj990$'), new PhiNameRef('get_31')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_l6emzv$'), new PhiNameRef('get_32')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_kzcjh1$'), new PhiNameRef('get_33')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'MutationObserverInit_c5um2n$'), new PhiNameRef('MutationObserverInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'GetRootNodeOptions_1v8dbw$'), new PhiNameRef('GetRootNodeOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ElementCreationOptions_pdl1vj$'), new PhiNameRef('ElementCreationOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ShadowRootInit_16lofx$'), new PhiNameRef('ShadowRootInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_rjm7cj$'), new PhiNameRef('get_34')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_oszak3$'), new PhiNameRef('get_35')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_o72cm9$'), new PhiNameRef('get_36')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'DOMPointInit_rd1tgs$'), new PhiNameRef('DOMPointInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'DOMRectInit_rd1tgs$'), new PhiNameRef('DOMRectInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_p225ue$'), new PhiNameRef('get_37')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_AUTO_gi1pud$'), new PhiNameRef('get_AUTO')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ScrollOptions_pa3cpp$'), new PhiNameRef('ScrollOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ScrollToOptions_5ufhvn$'), new PhiNameRef('ScrollToOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'MediaQueryListEventInit_vkedzz$'), new PhiNameRef('MediaQueryListEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_CENTER_ltkif$'), new PhiNameRef('get_CENTER')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ScrollIntoViewOptions_2qltkz$'), new PhiNameRef('ScrollIntoViewOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_BORDER_eb1l8y$'), new PhiNameRef('get_BORDER')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'BoxQuadOptions_tnnyad$'), new PhiNameRef('BoxQuadOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'ConvertCoordinateOptions_8oj3e4$'), new PhiNameRef('ConvertCoordinateOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_LOADING_cuyr1n$'), new PhiNameRef('get_LOADING')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_INTERACTIVE_cuyr1n$'), new PhiNameRef('get_INTERACTIVE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_COMPLETE_cuyr1n$'), new PhiNameRef('get_COMPLETE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_EMPTY_k3kzzn$'), new PhiNameRef('get_EMPTY')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MAYBE_k3kzzn$'), new PhiNameRef('get_MAYBE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_PROBABLY_k3kzzn$'), new PhiNameRef('get_PROBABLY')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_DISABLED_ygmcel$'), new PhiNameRef('get_DISABLED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_HIDDEN_ygmcel$'), new PhiNameRef('get_HIDDEN')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_SHOWING_ygmcel$'), new PhiNameRef('get_SHOWING')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_SUBTITLES_fw7o78$'), new PhiNameRef('get_SUBTITLES')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_CAPTIONS_fw7o78$'), new PhiNameRef('get_CAPTIONS')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_DESCRIPTIONS_fw7o78$'), new PhiNameRef('get_DESCRIPTIONS')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_CHAPTERS_fw7o78$'), new PhiNameRef('get_CHAPTERS')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_METADATA_fw7o78$'), new PhiNameRef('get_METADATA')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_SELECT_efic67$'), new PhiNameRef('get_SELECT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_START_efic67$'), new PhiNameRef('get_START')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_END_efic67$'), new PhiNameRef('get_END')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_PRESERVE_efic67$'), new PhiNameRef('get_PRESERVE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_EVENODD_mhbikd$'), new PhiNameRef('get_EVENODD')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_LOW_lt2gtk$'), new PhiNameRef('get_LOW_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MEDIUM_lt2gtk$'), new PhiNameRef('get_MEDIUM')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_HIGH_lt2gtk$'), new PhiNameRef('get_HIGH')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_BUTT_w26v20$'), new PhiNameRef('get_BUTT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_ROUND_w26v20$'), new PhiNameRef('get_ROUND')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_SQUARE_w26v20$'), new PhiNameRef('get_SQUARE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_ROUND_1xtghu$'), new PhiNameRef('get_ROUND_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_BEVEL_1xtghu$'), new PhiNameRef('get_BEVEL')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MITER_1xtghu$'), new PhiNameRef('get_MITER')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_START_hbi5si$'), new PhiNameRef('get_START_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_END_hbi5si$'), new PhiNameRef('get_END_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_LEFT_hbi5si$'), new PhiNameRef('get_LEFT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_RIGHT_hbi5si$'), new PhiNameRef('get_RIGHT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_CENTER_hbi5si$'), new PhiNameRef('get_CENTER_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_TOP_oz2y96$'), new PhiNameRef('get_TOP')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_HANGING_oz2y96$'), new PhiNameRef('get_HANGING')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MIDDLE_oz2y96$'), new PhiNameRef('get_MIDDLE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_ALPHABETIC_oz2y96$'), new PhiNameRef('get_ALPHABETIC')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_IDEOGRAPHIC_oz2y96$'), new PhiNameRef('get_IDEOGRAPHIC')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_BOTTOM_oz2y96$'), new PhiNameRef('get_BOTTOM')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_LTR_qxot9j$'), new PhiNameRef('get_LTR')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_RTL_qxot9j$'), new PhiNameRef('get_RTL')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_INHERIT_qxot9j$'), new PhiNameRef('get_INHERIT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_AUTO_huqvoj$'), new PhiNameRef('get_AUTO_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MANUAL_huqvoj$'), new PhiNameRef('get_MANUAL')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_FLIPY_xgljrz$'), new PhiNameRef('get_FLIPY')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_NONE_b5608t$'), new PhiNameRef('get_NONE_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_PREMULTIPLY_b5608t$'), new PhiNameRef('get_PREMULTIPLY')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_NONE_xqeuit$'), new PhiNameRef('get_NONE_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_PIXELATED_32fsn1$'), new PhiNameRef('get_PIXELATED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MEDIUM_32fsn1$'), new PhiNameRef('get_MEDIUM_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_HIGH_32fsn1$'), new PhiNameRef('get_HIGH_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_BLOB_qxle9l$'), new PhiNameRef('get_BLOB')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_ARRAYBUFFER_qxle9l$'), new PhiNameRef('get_ARRAYBUFFER')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MODULE_xc77to$'), new PhiNameRef('get_MODULE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_OPEN_knhupb$'), new PhiNameRef('get_OPEN')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_CLOSED_knhupb$'), new PhiNameRef('get_CLOSED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_INSTANT_gi1pud$'), new PhiNameRef('get_INSTANT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_SMOOTH_gi1pud$'), new PhiNameRef('get_SMOOTH')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_START_ltkif$'), new PhiNameRef('get_START_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_END_ltkif$'), new PhiNameRef('get_END_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_NEAREST_ltkif$'), new PhiNameRef('get_NEAREST')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_MARGIN_eb1l8y$'), new PhiNameRef('get_MARGIN')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_PADDING_eb1l8y$'), new PhiNameRef('get_PADDING')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'get_CONTENT_eb1l8y$'), new PhiNameRef('get_CONTENT')));
    phiVars(array(array('package$svg', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$dom_0'), 'svg'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$dom_0'), 'svg'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'SVGBoundingBoxOptions_bx6eq4$'), new PhiNameRef('SVGBoundingBoxOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'get_2fgwj9$'), new PhiNameRef('get_38')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'set_xg4o68$'), new PhiNameRef('set_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'get_nujcb1$'), new PhiNameRef('get_39')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'set_vul1sp$'), new PhiNameRef('set_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'get_ml6vgw$'), new PhiNameRef('get_40')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'set_tsl60p$'), new PhiNameRef('set_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'get_f2nmth$'), new PhiNameRef('get_41')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'set_nr97t$'), new PhiNameRef('set_15')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'get_xcci3g$'), new PhiNameRef('get_42')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'set_7s907r$'), new PhiNameRef('set_16')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'get_r7cbpc$'), new PhiNameRef('get_43')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$svg'), 'set_8k1hvb$'), new PhiNameRef('set_17')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'RequestInit_302zsh$'), new PhiNameRef('RequestInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'ResponseInit_gk6zn2$'), new PhiNameRef('ResponseInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_EMPTY_ih0r03$'), new PhiNameRef('get_EMPTY_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_AUDIO_ih0r03$'), new PhiNameRef('get_AUDIO')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_FONT_ih0r03$'), new PhiNameRef('get_FONT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_IMAGE_ih0r03$'), new PhiNameRef('get_IMAGE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_SCRIPT_ih0r03$'), new PhiNameRef('get_SCRIPT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_STYLE_ih0r03$'), new PhiNameRef('get_STYLE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_TRACK_ih0r03$'), new PhiNameRef('get_TRACK')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_VIDEO_ih0r03$'), new PhiNameRef('get_VIDEO')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_EMPTY_dgizjn$'), new PhiNameRef('get_EMPTY_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_DOCUMENT_dgizjn$'), new PhiNameRef('get_DOCUMENT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_EMBED_dgizjn$'), new PhiNameRef('get_EMBED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_FONT_dgizjn$'), new PhiNameRef('get_FONT_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_IMAGE_dgizjn$'), new PhiNameRef('get_IMAGE_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_MANIFEST_dgizjn$'), new PhiNameRef('get_MANIFEST')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_MEDIA_dgizjn$'), new PhiNameRef('get_MEDIA')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_OBJECT_dgizjn$'), new PhiNameRef('get_OBJECT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_REPORT_dgizjn$'), new PhiNameRef('get_REPORT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_SCRIPT_dgizjn$'), new PhiNameRef('get_SCRIPT_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_SERVICEWORKER_dgizjn$'), new PhiNameRef('get_SERVICEWORKER')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_SHAREDWORKER_dgizjn$'), new PhiNameRef('get_SHAREDWORKER')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_STYLE_dgizjn$'), new PhiNameRef('get_STYLE_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_WORKER_dgizjn$'), new PhiNameRef('get_WORKER')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_XSLT_dgizjn$'), new PhiNameRef('get_XSLT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_NAVIGATE_jvdbus$'), new PhiNameRef('get_NAVIGATE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_SAME_ORIGIN_jvdbus$'), new PhiNameRef('get_SAME_ORIGIN')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_NO_CORS_jvdbus$'), new PhiNameRef('get_NO_CORS')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_CORS_jvdbus$'), new PhiNameRef('get_CORS')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_SAME_ORIGIN_yuzaxt$'), new PhiNameRef('get_SAME_ORIGIN_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_INCLUDE_yuzaxt$'), new PhiNameRef('get_INCLUDE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_DEFAULT_iyytcp$'), new PhiNameRef('get_DEFAULT_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_NO_STORE_iyytcp$'), new PhiNameRef('get_NO_STORE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_RELOAD_iyytcp$'), new PhiNameRef('get_RELOAD')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_NO_CACHE_iyytcp$'), new PhiNameRef('get_NO_CACHE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_FORCE_CACHE_iyytcp$'), new PhiNameRef('get_FORCE_CACHE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_ONLY_IF_CACHED_iyytcp$'), new PhiNameRef('get_ONLY_IF_CACHED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_FOLLOW_tow8et$'), new PhiNameRef('get_FOLLOW')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_ERROR_tow8et$'), new PhiNameRef('get_ERROR')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_MANUAL_tow8et$'), new PhiNameRef('get_MANUAL_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_BASIC_1el1vz$'), new PhiNameRef('get_BASIC')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_CORS_1el1vz$'), new PhiNameRef('get_CORS_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_DEFAULT_1el1vz$'), new PhiNameRef('get_DEFAULT_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_ERROR_1el1vz$'), new PhiNameRef('get_ERROR_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_OPAQUE_1el1vz$'), new PhiNameRef('get_OPAQUE')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$fetch'), 'get_OPAQUEREDIRECT_1el1vz$'), new PhiNameRef('get_OPAQUEREDIRECT')));
    phiVars(array(array('package$files', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$w3c'), 'files'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$w3c'), 'files'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$files'), 'BlobPropertyBag_pdl1vj$'), new PhiNameRef('BlobPropertyBag')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$files'), 'FilePropertyBag_3gd7sg$'), new PhiNameRef('FilePropertyBag')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$files'), 'get_frimup$'), new PhiNameRef('get_44')));
    phiVars(array(array('package$notifications', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$w3c'), 'notifications'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$w3c'), 'notifications'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'get_AUTO_6wyje4$'), new PhiNameRef('get_AUTO_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'NotificationOptions_kxkl36$'), new PhiNameRef('NotificationOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'NotificationAction_eaqb6n$'), new PhiNameRef('NotificationAction')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'GetNotificationOptions_pdl1vj$'), new PhiNameRef('GetNotificationOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'NotificationEventInit_wmlth4$'), new PhiNameRef('NotificationEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'get_DEFAULT_4wcaio$'), new PhiNameRef('get_DEFAULT_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'get_DENIED_4wcaio$'), new PhiNameRef('get_DENIED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'get_GRANTED_4wcaio$'), new PhiNameRef('get_GRANTED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'get_LTR_6wyje4$'), new PhiNameRef('get_LTR_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$notifications'), 'get_RTL_6wyje4$'), new PhiNameRef('get_RTL_0')));
    phiVars(array(array('package$workers', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$w3c'), 'workers'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$w3c'), 'workers'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'RegistrationOptions_dbr88v$'), new PhiNameRef('RegistrationOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'ServiceWorkerMessageEventInit_d2wyw1$'), new PhiNameRef('ServiceWorkerMessageEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_WINDOW_jpgnoe$'), new PhiNameRef('get_WINDOW')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'ClientQueryOptions_d3lhiw$'), new PhiNameRef('ClientQueryOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'ExtendableEventInit_uic7jo$'), new PhiNameRef('ExtendableEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'ForeignFetchOptions_aye5cc$'), new PhiNameRef('ForeignFetchOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'FetchEventInit_bfhkw8$'), new PhiNameRef('FetchEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'ForeignFetchEventInit_kdt7mo$'), new PhiNameRef('ForeignFetchEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'ForeignFetchResponse_ikkqih$'), new PhiNameRef('ForeignFetchResponse')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'ExtendableMessageEventInit_ud4veo$'), new PhiNameRef('ExtendableMessageEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'CacheQueryOptions_dh4ton$'), new PhiNameRef('CacheQueryOptions')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'CacheBatchOperation_e4hn3k$'), new PhiNameRef('CacheBatchOperation')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_INSTALLING_7rndk9$'), new PhiNameRef('get_INSTALLING')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_INSTALLED_7rndk9$'), new PhiNameRef('get_INSTALLED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_ACTIVATING_7rndk9$'), new PhiNameRef('get_ACTIVATING')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_ACTIVATED_7rndk9$'), new PhiNameRef('get_ACTIVATED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_REDUNDANT_7rndk9$'), new PhiNameRef('get_REDUNDANT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_AUXILIARY_1foc4s$'), new PhiNameRef('get_AUXILIARY')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_TOP_LEVEL_1foc4s$'), new PhiNameRef('get_TOP_LEVEL')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_NESTED_1foc4s$'), new PhiNameRef('get_NESTED')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_NONE_1foc4s$'), new PhiNameRef('get_NONE_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_WORKER_jpgnoe$'), new PhiNameRef('get_WORKER_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_SHAREDWORKER_jpgnoe$'), new PhiNameRef('get_SHAREDWORKER_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$workers'), 'get_ALL_jpgnoe$'), new PhiNameRef('get_ALL')));
    phiVars(array(array('package$xhr', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$w3c'), 'xhr'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$w3c'), 'xhr'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$xhr'), 'ProgressEventInit_swrtea$'), new PhiNameRef('ProgressEventInit')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$xhr'), 'get_EMPTY_8edqmh$'), new PhiNameRef('get_EMPTY_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$xhr'), 'get_ARRAYBUFFER_8edqmh$'), new PhiNameRef('get_ARRAYBUFFER_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$xhr'), 'get_BLOB_8edqmh$'), new PhiNameRef('get_BLOB_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$xhr'), 'get_DOCUMENT_8edqmh$'), new PhiNameRef('get_DOCUMENT_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$xhr'), 'get_JSON_8edqmh$'), new PhiNameRef('get_JSON')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$xhr'), 'get_TEXT_8edqmh$'), new PhiNameRef('get_TEXT')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'get_jsClass_irb06o$'), new PhiNameRef('get_jsClass')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'get_js_1yb8b7$'), new PhiNameRef('get_js')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$js'), 'get_kotlin_2sk2mx$'), new PhiNameRef('get_kotlin')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'getKClass'), new PhiNameRef('getKClass')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('_'), 'getKClassFromExpression'), new PhiNameRef('getKClassFromExpression')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$kotlin'), new PhiStringLiteral('Unit'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('Unit_getInstance')))))));
    phiVars(array(array('package$reflect', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'reflect'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'reflect'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KAnnotatedElement'), new PhiNameRef('KAnnotatedElement')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KCallable'), new PhiNameRef('KCallable')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KClass'), new PhiNameRef('KClass')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KClassifier'), new PhiNameRef('KClassifier')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KDeclarationContainer'), new PhiNameRef('KDeclarationContainer')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KFunction'), new PhiNameRef('KFunction')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KParameter$Kind'), new PhiStringLiteral('INSTANCE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KParameter$Kind$INSTANCE_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KParameter$Kind'), new PhiStringLiteral('EXTENSION_RECEIVER'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KParameter$Kind$EXTENSION_RECEIVER_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KParameter$Kind'), new PhiStringLiteral('VALUE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KParameter$Kind$VALUE_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KParameter'), 'Kind'), new PhiNameRef('KParameter$Kind')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KParameter'), new PhiNameRef('KParameter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty'), 'Accessor'), new PhiNameRef('KProperty$Accessor')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty'), 'Getter'), new PhiNameRef('KProperty$Getter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KProperty'), new PhiNameRef('KProperty')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty'), 'Setter'), new PhiNameRef('KMutableProperty$Setter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KMutableProperty'), new PhiNameRef('KMutableProperty')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty0'), 'Getter'), new PhiNameRef('KProperty0$Getter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KProperty0'), new PhiNameRef('KProperty0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty0'), 'Setter'), new PhiNameRef('KMutableProperty0$Setter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KMutableProperty0'), new PhiNameRef('KMutableProperty0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty1'), 'Getter'), new PhiNameRef('KProperty1$Getter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KProperty1'), new PhiNameRef('KProperty1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty1'), 'Setter'), new PhiNameRef('KMutableProperty1$Setter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KMutableProperty1'), new PhiNameRef('KMutableProperty1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KProperty2'), 'Getter'), new PhiNameRef('KProperty2$Getter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KProperty2'), new PhiNameRef('KProperty2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('KMutableProperty2'), 'Setter'), new PhiNameRef('KMutableProperty2$Setter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KMutableProperty2'), new PhiNameRef('KMutableProperty2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KType'), new PhiNameRef('KType')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KTypeProjection'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KTypeProjection$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KTypeProjection'), new PhiNameRef('KTypeProjection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KTypeParameter'), new PhiNameRef('KTypeParameter')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KVariance'), new PhiStringLiteral('INVARIANT'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KVariance$INVARIANT_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KVariance'), new PhiStringLiteral('IN'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KVariance$IN_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KVariance'), new PhiStringLiteral('OUT'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KVariance$OUT_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KVariance'), new PhiNameRef('KVariance')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KVisibility'), new PhiStringLiteral('PUBLIC'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KVisibility$PUBLIC_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KVisibility'), new PhiStringLiteral('PROTECTED'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KVisibility$PROTECTED_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KVisibility'), new PhiStringLiteral('INTERNAL'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KVisibility$INTERNAL_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KVisibility'), new PhiStringLiteral('PRIVATE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KVisibility$PRIVATE_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$reflect'), 'KVisibility'), new PhiNameRef('KVisibility')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractCollection'), new PhiNameRef('AbstractCollection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractIterator'), new PhiNameRef('AbstractIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractList'), new PhiNameRef('AbstractList')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractMap'), new PhiNameRef('AbstractMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'AbstractSet'), new PhiNameRef('AbstractSet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatten_yrqxlj$'), new PhiNameRef('flatten_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'unzip_v2dak7$'), new PhiNameRef('unzip')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'listOf_i5x0yv$'), new PhiNameRef('listOf_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mutableListOf_i5x0yv$'), new PhiNameRef('mutableListOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'arrayListOf_i5x0yv$'), new PhiNameRef('arrayListOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'listOfNotNull_issdgt$'), new PhiNameRef('listOfNotNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'listOfNotNull_jurz7g$'), new PhiNameRef('listOfNotNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'MutableList$f'), new PhiNameRef('MutableList$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'get_indices_gzk92b$'), new PhiNameRef('get_indices_9')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'binarySearch_jhx6be$'), new PhiNameRef('binarySearch')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'binarySearch_vikexg$'), new PhiNameRef('binarySearch_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'compareValues_s00gnj$'), new PhiNameRef('compareValues')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'binarySearchBy$f'), new PhiNameRef('binarySearchBy$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'binarySearch_sr7qim$'), new PhiNameRef('binarySearch_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'binarySearchBy_7gj2ve$'), new PhiNameRef('binarySearchBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'Grouping'), new PhiNameRef('Grouping')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'aggregateTo_qtifb3$'), new PhiNameRef('aggregateTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'aggregate_kz95qp$'), new PhiNameRef('aggregate')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold$f'), new PhiNameRef('fold$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_2g9ybd$'), new PhiNameRef('fold_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldTo$f'), new PhiNameRef('foldTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldTo_ldb57n$'), new PhiNameRef('foldTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold$f_0'), new PhiNameRef('fold$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'fold_id3q3f$'), new PhiNameRef('fold_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldTo$f_0'), new PhiNameRef('foldTo$lambda_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'foldTo_1dwgsv$'), new PhiNameRef('foldTo_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce$f'), new PhiNameRef('reduce$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduce_hy0spo$'), new PhiNameRef('reduce_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceTo$f'), new PhiNameRef('reduceTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'reduceTo_vpctix$'), new PhiNameRef('reduceTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'eachCountTo_i5vr9n$'), new PhiNameRef('eachCountTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'IndexedValue'), new PhiNameRef('IndexedValue')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'Iterable$f'), new PhiNameRef('Iterable$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'collectionSizeOrNull_7wnvza$'), new PhiNameRef('collectionSizeOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'flatten_u0ad8z$'), new PhiNameRef('flatten_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'unzip_6hr0sd$'), new PhiNameRef('unzip_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withIndex_35ci02$'), new PhiNameRef('withIndex_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'forEach_p594rv$'), new PhiNameRef('forEach_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getOrImplicitDefault_t9ocha$'), new PhiNameRef('getOrImplicitDefault')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withDefault_jgsead$'), new PhiNameRef('withDefault')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'withDefault_btzz9u$'), new PhiNameRef('withDefault_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'emptyMap_q3lmfv$'), new PhiNameRef('emptyMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapOf_qfcya0$'), new PhiNameRef('mapOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mutableMapOf_qfcya0$'), new PhiNameRef('mutableMapOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'hashMapOf_qfcya0$'), new PhiNameRef('hashMapOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'linkedMapOf_qfcya0$'), new PhiNameRef('linkedMapOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'getValue_t9ocha$'), new PhiNameRef('getValue_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapValuesTo$f'), new PhiNameRef('mapValuesTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapValuesTo_8auxj8$'), new PhiNameRef('mapValuesTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapKeysTo$f'), new PhiNameRef('mapKeysTo$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapKeysTo_l1xmvz$'), new PhiNameRef('mapKeysTo')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'putAll_5gv49o$'), new PhiNameRef('putAll')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'putAll_cweazw$'), new PhiNameRef('putAll_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'putAll_2ud8ki$'), new PhiNameRef('putAll_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapValues_8169ik$'), new PhiNameRef('mapValues')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mapKeys_8169ik$'), new PhiNameRef('mapKeys')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterKeys_bbcyu0$'), new PhiNameRef('filterKeys')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterValues_btttvb$'), new PhiNameRef('filterValues')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterTo_6i6lq2$'), new PhiNameRef('filterTo_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filter_9peqz9$'), new PhiNameRef('filter_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNotTo_6i6lq2$'), new PhiNameRef('filterNotTo_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'filterNot_9peqz9$'), new PhiNameRef('filterNot_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_6hr0sd$'), new PhiNameRef('toMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_jbpz7q$'), new PhiNameRef('toMap_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_v2dak7$'), new PhiNameRef('toMap_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_ujwnei$'), new PhiNameRef('toMap_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_ah2ab9$'), new PhiNameRef('toMap_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_vxlxo8$'), new PhiNameRef('toMap_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_abgq59$'), new PhiNameRef('toMap_5')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMutableMap_abgq59$'), new PhiNameRef('toMutableMap')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'toMap_d6li1s$'), new PhiNameRef('toMap_6')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_e8164j$'), new PhiNameRef('plus_42')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_cm8adq$'), new PhiNameRef('plus_43')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_z7hp2i$'), new PhiNameRef('plus_44')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_kc70o4$'), new PhiNameRef('plus_45')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'plus_iwxh38$'), new PhiNameRef('plus_46')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_4pa84t$'), new PhiNameRef('minus_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_uk696c$'), new PhiNameRef('minus_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_8blsds$'), new PhiNameRef('minus_13')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'minus_nyfmny$'), new PhiNameRef('minus_14')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'removeAll_ipc267$'), new PhiNameRef('removeAll_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'removeAll_ye1y7v$'), new PhiNameRef('removeAll_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'removeAll_tj7pfx$'), new PhiNameRef('removeAll_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'addAll_ye1y7v$'), new PhiNameRef('addAll')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'removeAll_uhyeqt$'), new PhiNameRef('removeAll')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'retainAll_uhyeqt$'), new PhiNameRef('retainAll_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'removeAll_qafx1e$'), new PhiNameRef('removeAll_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'retainAll_qafx1e$'), new PhiNameRef('retainAll_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'retainAll_ipc267$'), new PhiNameRef('retainAll')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'retainAll_ye1y7v$'), new PhiNameRef('retainAll_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'retainAll_tj7pfx$'), new PhiNameRef('retainAll_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asReversed_2p1efm$'), new PhiNameRef('asReversed')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'asReversed_vvxzk3$'), new PhiNameRef('asReversed_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'Sequence$f'), new PhiNameRef('Sequence$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'asSequence_35ci02$'), new PhiNameRef('asSequence_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'sequenceOf_i5x0yv$'), new PhiNameRef('sequenceOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'emptySequence_287e2$'), new PhiNameRef('emptySequence')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'flatten_41nmvn$'), new PhiNameRef('flatten')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'flatten_d9bjs1$'), new PhiNameRef('flatten_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'unzip_ah2ab9$'), new PhiNameRef('unzip_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'constrainOnce_veqyi0$'), new PhiNameRef('constrainOnce')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'generateSequence_9ce4rd$'), new PhiNameRef('generateSequence_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'generateSequence_gexuht$'), new PhiNameRef('generateSequence_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$sequences'), 'generateSequence_c6s9hp$'), new PhiNameRef('generateSequence')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'emptySet_287e2$'), new PhiNameRef('emptySet')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'setOf_i5x0yv$'), new PhiNameRef('setOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'mutableSetOf_i5x0yv$'), new PhiNameRef('mutableSetOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'hashSetOf_i5x0yv$'), new PhiNameRef('hashSetOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$collections'), 'linkedSetOf_i5x0yv$'), new PhiNameRef('linkedSetOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'compareValuesBy_d999kh$'), new PhiNameRef('compareValuesBy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'compareBy_bvgy4j$'), new PhiNameRef('compareBy_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'compareBy$f'), new PhiNameRef('compareBy$ObjectLiteral_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'compareBy$f_0'), new PhiNameRef('compareBy$ObjectLiteral_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'compareByDescending$f'), new PhiNameRef('compareByDescending$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'compareByDescending$f_0'), new PhiNameRef('compareByDescending$ObjectLiteral_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'thenBy$f'), new PhiNameRef('thenBy$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'thenBy$f_0'), new PhiNameRef('thenBy$ObjectLiteral_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'thenByDescending$f'), new PhiNameRef('thenByDescending$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'thenByDescending$f_0'), new PhiNameRef('thenByDescending$ObjectLiteral_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'thenComparator$f'), new PhiNameRef('thenComparator$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'then_15rrmw$'), new PhiNameRef('then')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'thenDescending_15rrmw$'), new PhiNameRef('thenDescending')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'nullsFirst_c94i6r$'), new PhiNameRef('nullsFirst')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'naturalOrder_dahdeg$'), new PhiNameRef('naturalOrder')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'nullsLast_c94i6r$'), new PhiNameRef('nullsLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'reverseOrder_dahdeg$'), new PhiNameRef('reverseOrder')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$comparisons'), 'reversed_2avth4$'), new PhiNameRef('reversed_14')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('ContinuationInterceptor'), new PhiStringLiteral('Key'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('ContinuationInterceptor$Key_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'ContinuationInterceptor'), new PhiNameRef('ContinuationInterceptor')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CoroutineContext'), 'Element'), new PhiNameRef('CoroutineContext$Element')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('CoroutineContext'), 'Key'), new PhiNameRef('CoroutineContext$Key')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'CoroutineContext'), new PhiNameRef('CoroutineContext')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'AbstractCoroutineContextElement'), new PhiNameRef('AbstractCoroutineContextElement')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$experimental'), new PhiStringLiteral('EmptyCoroutineContext'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('EmptyCoroutineContext_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'Continuation'), new PhiNameRef('Continuation')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'RestrictsSuspension'), new PhiNameRef('RestrictsSuspension')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'startCoroutine_uao1qo$'), new PhiNameRef('startCoroutine')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'startCoroutine_xtwlez$'), new PhiNameRef('startCoroutine_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'createCoroutine_uao1qo$'), new PhiNameRef('createCoroutine')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'createCoroutine_xtwlez$'), new PhiNameRef('createCoroutine_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'suspendCoroutine$f'), new PhiNameRef('suspendCoroutine$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'suspendCoroutine_z3e1t3$'), new PhiNameRef('suspendCoroutine')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'buildSequence_of7nec$'), new PhiNameRef('buildSequence')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'buildIterator_of7nec$'), new PhiNameRef('buildIterator')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$experimental'), 'SequenceBuilder'), new PhiNameRef('SequenceBuilder')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$intrinsics'), new PhiStringLiteral('COROUTINE_SUSPENDED'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiFunctionExpression(null, array(), function () {
      return new PhiNameRef('COROUTINE_SUSPENDED');
    })))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates'), 'prototype'), 'observable$f'), new PhiNameRef('Delegates$observable$ObjectLiteral')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiDot(new PhiNameRef('Delegates'), 'prototype'), 'vetoable$f'), new PhiNameRef('Delegates$vetoable$ObjectLiteral')));
    phiVars(array(array('package$properties', new PhiBinaryOperation('||', new PhiDot(new PhiNameRef('package$kotlin'), 'properties'), new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'properties'), new PhiObjectLiteral(array()))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$properties'), new PhiStringLiteral('Delegates'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('Delegates_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$properties'), 'ReadOnlyProperty'), new PhiNameRef('ReadOnlyProperty')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$properties'), 'ReadWriteProperty'), new PhiNameRef('ReadWriteProperty')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$properties'), 'ObservableProperty'), new PhiNameRef('ObservableProperty')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'ClosedFloatingPointRange'), new PhiNameRef('ClosedFloatingPointRange')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$ranges'), 'rangeTo_8xshf9$'), new PhiNameRef('rangeTo_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'equals_4lte5s$'), new PhiNameRef('equals_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'isSurrogate_myv2d0$'), new PhiNameRef('isSurrogate')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimMargin_rjktp$'), new PhiNameRef('trimMargin')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceIndentByMargin_j4ogox$'), new PhiNameRef('replaceIndentByMargin')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimIndent_pdl1vz$'), new PhiNameRef('trimIndent')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceIndent_rjktp$'), new PhiNameRef('replaceIndent')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'prependIndent_rjktp$'), new PhiNameRef('prependIndent')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'append_1mr2mh$'), new PhiNameRef('append')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'append_4v9nlb$'), new PhiNameRef('append_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'append_s3yiwm$'), new PhiNameRef('append_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toByteOrNull_pdl1vz$'), new PhiNameRef('toByteOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toByteOrNull_6ic1pp$'), new PhiNameRef('toByteOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toShortOrNull_pdl1vz$'), new PhiNameRef('toShortOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toShortOrNull_6ic1pp$'), new PhiNameRef('toShortOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toIntOrNull_pdl1vz$'), new PhiNameRef('toIntOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toIntOrNull_6ic1pp$'), new PhiNameRef('toIntOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toLongOrNull_pdl1vz$'), new PhiNameRef('toLongOrNull')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'toLongOrNull_6ic1pp$'), new PhiNameRef('toLongOrNull_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trim_2pivbd$'), new PhiNameRef('trim_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trim_ouje1d$'), new PhiNameRef('trim_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimStart_2pivbd$'), new PhiNameRef('trimStart_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimStart_ouje1d$'), new PhiNameRef('trimStart_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimEnd_2pivbd$'), new PhiNameRef('trimEnd_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimEnd_ouje1d$'), new PhiNameRef('trimEnd_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trim_8d0cet$'), new PhiNameRef('trim_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trim_wqw3xr$'), new PhiNameRef('trim_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimStart_8d0cet$'), new PhiNameRef('trimStart_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimStart_wqw3xr$'), new PhiNameRef('trimStart')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimEnd_8d0cet$'), new PhiNameRef('trimEnd_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimEnd_wqw3xr$'), new PhiNameRef('trimEnd')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trim_gw00vp$'), new PhiNameRef('trim_4')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimStart_gw00vp$'), new PhiNameRef('trimStart_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'trimEnd_gw00vp$'), new PhiNameRef('trimEnd_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'padStart_yk9sg4$'), new PhiNameRef('padStart')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'padStart_vrc1nu$'), new PhiNameRef('padStart_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'padEnd_yk9sg4$'), new PhiNameRef('padEnd')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'padEnd_vrc1nu$'), new PhiNameRef('padEnd_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'hasSurrogatePairAt_94bcnn$'), new PhiNameRef('hasSurrogatePairAt')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substring_fc3b62$'), new PhiNameRef('substring_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'subSequence_i511yc$'), new PhiNameRef('subSequence_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substring_i511yc$'), new PhiNameRef('substring_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringBefore_8cymmc$'), new PhiNameRef('substringBefore')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringBefore_j4ogox$'), new PhiNameRef('substringBefore_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringAfter_8cymmc$'), new PhiNameRef('substringAfter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringAfter_j4ogox$'), new PhiNameRef('substringAfter_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringBeforeLast_8cymmc$'), new PhiNameRef('substringBeforeLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringBeforeLast_j4ogox$'), new PhiNameRef('substringBeforeLast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringAfterLast_8cymmc$'), new PhiNameRef('substringAfterLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'substringAfterLast_j4ogox$'), new PhiNameRef('substringAfterLast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceRange_p5j4qv$'), new PhiNameRef('replaceRange')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceRange_r6gztw$'), new PhiNameRef('replaceRange_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeRange_qdpigv$'), new PhiNameRef('removeRange')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeRange_i511yc$'), new PhiNameRef('removeRange_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removePrefix_b6aurr$'), new PhiNameRef('removePrefix')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removePrefix_gsj5wt$'), new PhiNameRef('removePrefix_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeSuffix_b6aurr$'), new PhiNameRef('removeSuffix')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeSuffix_gsj5wt$'), new PhiNameRef('removeSuffix_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeSurrounding_xhcipd$'), new PhiNameRef('removeSurrounding')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeSurrounding_90ijwr$'), new PhiNameRef('removeSurrounding_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeSurrounding_b6aurr$'), new PhiNameRef('removeSurrounding_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'removeSurrounding_gsj5wt$'), new PhiNameRef('removeSurrounding_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceBefore_gvb6y2$'), new PhiNameRef('replaceBefore')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceBefore_q1ioxb$'), new PhiNameRef('replaceBefore_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceAfter_gvb6y2$'), new PhiNameRef('replaceAfter')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceAfter_q1ioxb$'), new PhiNameRef('replaceAfter_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceAfterLast_q1ioxb$'), new PhiNameRef('replaceAfterLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceAfterLast_gvb6y2$'), new PhiNameRef('replaceAfterLast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceBeforeLast_gvb6y2$'), new PhiNameRef('replaceBeforeLast')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'replaceBeforeLast_q1ioxb$'), new PhiNameRef('replaceBeforeLast_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'startsWith_sgbm27$'), new PhiNameRef('startsWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'endsWith_sgbm27$'), new PhiNameRef('endsWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'startsWith_li3zpu$'), new PhiNameRef('startsWith_2')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'startsWith_pebkaa$'), new PhiNameRef('startsWith_3')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'endsWith_li3zpu$'), new PhiNameRef('endsWith_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'commonPrefixWith_li3zpu$'), new PhiNameRef('commonPrefixWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'commonSuffixWith_li3zpu$'), new PhiNameRef('commonSuffixWith')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'indexOfAny_junqau$'), new PhiNameRef('indexOfAny')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lastIndexOfAny_junqau$'), new PhiNameRef('lastIndexOfAny')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'findAnyOf_7utkvz$'), new PhiNameRef('findAnyOf_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'findLastAnyOf_7utkvz$'), new PhiNameRef('findLastAnyOf')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'indexOfAny_7utkvz$'), new PhiNameRef('indexOfAny_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lastIndexOfAny_7utkvz$'), new PhiNameRef('lastIndexOfAny_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'indexOf_8eortd$'), new PhiNameRef('indexOf_11')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'indexOf_l5u8uk$'), new PhiNameRef('indexOf_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lastIndexOf_8eortd$'), new PhiNameRef('lastIndexOf_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lastIndexOf_l5u8uk$'), new PhiNameRef('lastIndexOf_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'contains_li3zpu$'), new PhiNameRef('contains_41')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'contains_sgbm27$'), new PhiNameRef('contains_42')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'splitToSequence_ip8yn$'), new PhiNameRef('splitToSequence')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'split_ip8yn$'), new PhiNameRef('split_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'splitToSequence_o64adg$'), new PhiNameRef('splitToSequence_0')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'split_o64adg$'), new PhiNameRef('split_1')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lineSequence_gw00vp$'), new PhiNameRef('lineSequence')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'lines_gw00vp$'), new PhiNameRef('lines')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('package$text'), new PhiStringLiteral('Typography'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('Typography_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'MatchGroupCollection'), new PhiNameRef('MatchGroupCollection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'MatchNamedGroupCollection'), new PhiNameRef('MatchNamedGroupCollection')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('MatchResult'), 'Destructured'), new PhiNameRef('MatchResult$Destructured')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$text'), 'MatchResult'), new PhiNameRef('MatchResult')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('KotlinVersion'), new PhiStringLiteral('Companion'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('KotlinVersion$Companion_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'KotlinVersion_init_vux9f0$'), new PhiNameRef('KotlinVersion_init')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'KotlinVersion'), new PhiNameRef('KotlinVersion')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Lazy'), new PhiNameRef('Lazy')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'lazyOf_mh5how$'), new PhiNameRef('lazyOf')));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('LazyThreadSafetyMode'), new PhiStringLiteral('SYNCHRONIZED'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('LazyThreadSafetyMode$SYNCHRONIZED_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('LazyThreadSafetyMode'), new PhiStringLiteral('PUBLICATION'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('LazyThreadSafetyMode$PUBLICATION_getInstance')))))));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Object'), 'defineProperty'), array(new PhiNameRef('LazyThreadSafetyMode'), new PhiStringLiteral('NONE'), new PhiObjectLiteral(array(array(new PhiNameRef('get'), new PhiNameRef('LazyThreadSafetyMode$NONE_getInstance')))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'LazyThreadSafetyMode'), new PhiNameRef('LazyThreadSafetyMode')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'require$f'), new PhiNameRef('require$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'requireNotNull$f'), new PhiNameRef('requireNotNull$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'check$f'), new PhiNameRef('check$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'checkNotNull$f'), new PhiNameRef('checkNotNull$lambda')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'NotImplementedError'), new PhiNameRef('NotImplementedError')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Pair'), new PhiNameRef('Pair')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'to_ujzrz7$'), new PhiNameRef('to')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'toList_tt9upe$'), new PhiNameRef('toList_12')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'Triple'), new PhiNameRef('Triple')));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiDot(new PhiNameRef('package$kotlin'), 'toList_z6mquf$'), new PhiNameRef('toList_13')));
    phiVars(array(array('tmp$', )));
    phiVars(array(array('isNode', new PhiBinaryOperation('&&', new PhiBinaryOperation('!==', new PhiPrefixOperation('typeof', new PhiNameRef('process')), new PhiStringLiteral('undefined')), new PhiBinaryOperation('&&', new PhiDot(new PhiNameRef('process'), 'versions'), new PhiPrefixOperation('!', new PhiPrefixOperation('!', new PhiDot(new PhiDot(new PhiNameRef('process'), 'versions'), 'node'))))))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('output'), new PhiConditional(new PhiNameRef('isNode'), new PhiNew(new PhiNameRef('NodeJsOutput'), array(new PhiDot(new PhiNameRef('process'), 'stdout'))), new PhiNew(new PhiNameRef('BufferedOutputToConsoleLog'), array()))));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('UNDECIDED'), new PhiNew(new PhiNameRef('Any'), array())));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('RESUMED'), new PhiNew(new PhiNameRef('Any'), array())));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('INT_MAX_POWER_OF_TWO'), new PhiBinaryOperation('|', new PhiBinaryOperation('+', new PhiBinaryOperation('|', new PhiBinaryOperation('/', new PhiDot(new PhiNameRef('IntCompanionObject'), 'MAX_VALUE'), 2.0), 0.0), 1.0), 0.0)));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State_NotReady'), 0.0));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State_ManyReady'), 1.0));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State_Ready'), 2.0));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State_Done'), 3.0));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('State_Failed'), 4.0));
    phiExpressionStatement(new PhiBinaryOperation('=', new PhiNameRef('COROUTINE_SUSPENDED'), new PhiNew(new PhiNameRef('Any'), array())));
    phiExpressionStatement(new PhiInvocation(new PhiDot(new PhiNameRef('Kotlin'), 'defineModule'), array(new PhiStringLiteral('kotlin'), new PhiNameRef('_'))));
  }), array()));
}))));
